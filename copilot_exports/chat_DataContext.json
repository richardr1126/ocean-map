{
  "requesterUsername": "richardr1126",
  "requesterAvatarIconUri": {
    "$mid": 1,
    "path": "/u/29444239",
    "scheme": "https",
    "authority": "avatars.githubusercontent.com",
    "query": "v=4"
  },
  "responderUsername": "GitHub Copilot",
  "responderAvatarIconUri": {
    "id": "copilot"
  },
  "initialLocation": "editing-session",
  "requests": [
    {
      "requestId": "request_cc3f01a4-fe63-4bd0-ade3-13bc1ba8b2f5",
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 285
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 3,
              "endColumn": 143
            },
            "text": "can you make a new DataContext for the microplastics data and other eventualy data that will get added, th sidebar settings should control it\n\nthe filtered data should be added via the addDataLayers, which should use something similar to the toggleMapStyle which readds the data layers",
            "kind": "text"
          }
        ],
        "text": "can you make a new DataContext for the microplastics data and other eventualy data that will get added, th sidebar settings should control it\n\nthe filtered data should be added via the addDataLayers, which should use something similar to the toggleMapStyle which readds the data layers"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
              "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
              "path": "/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
              "scheme": "file"
            },
            "id": "file:///Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
            "name": "page.tsx",
            "isFile": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "scheme": "file"
            },
            "id": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "name": "Map.tsx",
            "isFile": true
          },
          {
            "value": {
              "$mid": 1,
              "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
              "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
              "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
              "scheme": "file"
            },
            "id": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
            "name": "Sidebar.tsx",
            "isFile": true
          }
        ]
      },
      "response": [
        {
          "value": "I'll help you create a DataContext to manage the microplastics data and future data sources. Let's break this down into steps:\n\n1. First, let's create a new DataContext\n2. Then modify the components to use this context\n3. Ensure the map properly handles data layer changes\n\nLet's start by creating the DataContext:",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "value": "\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/context/DataContext.tsx",
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/context/DataContext.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/context/DataContext.tsx",
            "scheme": "file"
          }
        },
        {
          "value": "import { createContext, useContext, ReactNode, useState, useCallback } from 'react';\nimport microplasticsData from '@/data/nasa_microplastics.json';\n\ninterface YearFilter {\n  type: 'single' | 'range';\n  minYear: number;\n  maxYear: number;\n}\n\ninterface DataContextType {\n  showMicroplastics: boolean;\n  setShowMicroplastics: (show: boolean) => void;\n  yearFilter: YearFilter;\n  setYearFilter: (filter: YearFilter) => void;\n  getFilteredMicroplasticsData: () => GeoJSON.FeatureCollection;\n  dataPointCount: number;\n}\n\nconst DataContext = createContext<DataContextType | undefined>(undefined);\n\nexport function DataProvider({ children }: { children: ReactNode }) {\n  const [showMicroplastics, setShowMicroplastics] = useState(true);\n  const [yearFilter, setYearFilter] = useState<YearFilter>({\n    type: 'single',\n    minYear: 2020,\n    maxYear: 2020\n  });\n  const [dataPointCount, setDataPointCount] = useState(0);\n\n  const getFilteredMicroplasticsData = useCallback(() => {\n    const filteredData = {\n      type: 'FeatureCollection',\n      features: (microplasticsData as GeoJSON.FeatureCollection).features.filter((feature: GeoJSON.Feature) => {\n        const date = new Date(feature.properties?.Date);\n        if (!date) return false;\n\n        const year = date.getFullYear();\n        \n        if (yearFilter.type === 'single') {\n          return year === yearFilter.minYear;\n        } else {\n          return year >= yearFilter.minYear && year <= yearFilter.maxYear;\n        }\n      })\n    } as GeoJSON.FeatureCollection;\n\n    setDataPointCount(filteredData.features.length);\n    return filteredData;\n  }, [yearFilter]);\n\n  return (\n    <DataContext.Provider value={{\n      showMicroplastics,\n      setShowMicroplastics,\n      yearFilter,\n      setYearFilter,\n      getFilteredMicroplasticsData,\n      dataPointCount\n    }}>\n      {children}\n    </DataContext.Provider>\n  );\n}\n\nexport function useData() {\n  const context = useContext(DataContext);\n  if (context === undefined) {\n    throw new Error('useData must be used within a DataProvider');\n  }\n  return context;\n}\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/context/DataContext.tsx",
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/context/DataContext.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/context/DataContext.tsx",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import { createContext, useContext, ReactNode, useState, useCallback } from 'react';\nimport microplasticsData from '@/data/nasa_microplastics.json';\n\ninterface YearFilter {\n  type: 'single' | 'range';\n  minYear: number;\n  maxYear: number;\n}\n\ninterface DataContextType {\n  showMicroplastics: boolean;\n  setShowMicroplastics: (show: boolean) => void;\n  yearFilter: YearFilter;\n  setYearFilter: (filter: YearFilter) => void;\n  getFilteredMicroplasticsData: () => GeoJSON.FeatureCollection;\n  dataPointCount: number;\n}\n\nconst DataContext = createContext<DataContextType | undefined>(undefined);\n\nexport function DataProvider({ children }: { children: ReactNode }) {\n  const [showMicroplastics, setShowMicroplastics] = useState(true);\n  const [yearFilter, setYearFilter] = useState<YearFilter>({\n    type: 'single',\n    minYear: 2020,\n    maxYear: 2020\n  });\n  const [dataPointCount, setDataPointCount] = useState(0);\n\n  const getFilteredMicroplasticsData = useCallback(() => {\n    const filteredData = {\n      type: 'FeatureCollection',\n      features: (microplasticsData as GeoJSON.FeatureCollection).features.filter((feature: GeoJSON.Feature) => {\n        const date = new Date(feature.properties?.Date);\n        if (!date) return false;\n\n        const year = date.getFullYear();\n        \n        if (yearFilter.type === 'single') {\n          return year === yearFilter.minYear;\n        } else {\n          return year >= yearFilter.minYear && year <= yearFilter.maxYear;\n        }\n      })\n    } as GeoJSON.FeatureCollection;\n\n    setDataPointCount(filteredData.features.length);\n    return filteredData;\n  }, [yearFilter]);\n\n  return (\n    <DataContext.Provider value={{\n      showMicroplastics,\n      setShowMicroplastics,\n      yearFilter,\n      setYearFilter,\n      getFilteredMicroplasticsData,\n      dataPointCount\n    }}>\n      {children}\n    </DataContext.Provider>\n  );\n}\n\nexport function useData() {\n  const context = useContext(DataContext);\n  if (context === undefined) {\n    throw new Error('useData must be used within a DataProvider');\n  }\n  return context;\n}",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1
                }
              }
            ],
            []
          ],
          "done": true
        },
        {
          "value": "Now let's update the Map component to use the DataContext:",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "value": "\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "scheme": "file"
          }
        },
        {
          "value": "// ...existing code...\n\nimport { useData } from '@/context/DataContext';\n\n// Remove the MapProps interface since we'll get props from context\n\nexport default function Map() {\n  const mapContainerRef = useRef<HTMLDivElement>(null);\n  const mapRef = useRef<mapboxgl.Map | null>(null);\n  const [isStreetView, setIsStreetView] = useState(true);\n  const { showMicroplastics, getFilteredMicroplasticsData, dataPointCount } = useData();\n\n  const addDataLayers = useCallback(() => {\n    if (!mapRef.current) return;\n\n    // Add the GeoJSON as a source\n    if (!mapRef.current.getSource('microplastics')) {\n      mapRef.current.addSource('microplastics', {\n        type: 'geojson',\n        data: getFilteredMicroplasticsData()\n      });\n    } else {\n      (mapRef.current.getSource('microplastics') as mapboxgl.GeoJSONSource).setData(getFilteredMicroplasticsData());\n    }\n\n    // Add a layer to visualize the points\n    if (!mapRef.current.getLayer('microplastics-points')) {\n      // ...existing code for adding layer...\n    } else {\n      mapRef.current.setPaintProperty(\n        'microplastics-points',\n        'circle-opacity',\n        showMicroplastics ? 0.7 : 0\n      );\n    }\n  }, [showMicroplastics, getFilteredMicroplasticsData]);\n\n  // Remove filterDataByYear function as it's now handled in the context\n\n  const toggleMapStyle = useCallback(() => {\n    const satellite = 'mapbox://styles/mapbox/satellite-v9';\n    const streets = 'mapbox://styles/mapbox/streets-v12';\n    \n    if (mapRef.current) {\n      mapRef.current.setStyle(isStreetView ? satellite : streets);\n      setIsStreetView(!isStreetView);\n      \n      // Re-add data layers after style change\n      mapRef.current.once('style.load', () => {\n        addDataLayers();\n      });\n    }\n  }, [isStreetView, addDataLayers]);\n\n  // ...existing code for loadMap useEffect...\n\n  // Update useEffect to handle data updates\n  useEffect(() => {\n    if (mapRef.current?.loaded()) {\n      addDataLayers();\n    }\n  }, [showMicroplastics, addDataLayers]);\n\n  return (\n    // ...existing code...\n  );\n}\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "'use client';",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "import { useCallback, useEffect, useRef, useState } from 'react';",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 66
                }
              }
            ],
            [
              {
                "text": "import mapboxgl from 'mapbox-gl';",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "import 'mapbox-gl/dist/mapbox-gl.css';",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "import microplasticsData from '@/data/nasa_microplastics.json';",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 64
                }
              }
            ],
            [
              {
                "text": "import { useData } from '@/context/DataContext';",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "const formatDate = (dateString: string) => {",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 60
                }
              }
            ],
            [
              {
                "text": "  return new Date(dateString).toLocaleDateString('en-US', {",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "    year: 'numeric',",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "    month: 'long',",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "    day: 'numeric'",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "  });",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 77
                }
              }
            ],
            [
              {
                "text": "const formatMicroplasticsData = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "  const relevantData = {",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "    'Method': properties.SAMPMETHOD,",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Density': properties.DENSTEXT,",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "    'Unit': properties.UNIT,",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Organization': properties.ORG,",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "    'Date': formatDate(properties.Date),",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    'Reference': properties.SHORTREF,",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "    'DOI': properties.DOI",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "  };",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "  return Object.entries(relevantData)",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    .map(([key, value]) => value ? ",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "    `",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">${key}:</span> ${value}",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "    <p>",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "    ` : '')",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "    .join('');",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "export default function Map() {",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  const mapContainerRef = useRef<HTMLDivElement>(null);",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "  const mapRef = useRef<mapboxgl.Map | null>(null);",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  const [isStreetView, setIsStreetView] = useState(true);",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "  const { showMicroplastics, getFilteredMicroplasticsData, dataPointCount } = useData();",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "  const addDataLayers = useCallback(() => {",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 2
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current) return;",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "    // Add the GeoJSON as a source",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current.getSource('microplastics')) {",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.addSource('microplastics', {",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "        type: 'geojson',",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 59
                }
              }
            ],
            [
              {
                "text": "        data: getFilteredMicroplasticsData()",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 79
                }
              }
            ],
            [
              {
                "text": "      (mapRef.current.getSource('microplastics') as mapboxgl.GeoJSONSource).setData(getFilteredMicroplasticsData());",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "    // Add a layer to visualize the points",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 113
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current.getLayer('microplastics-points')) {",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 57
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.addLayer({",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "        id: 'microplastics-points',",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        type: 'circle',",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "        source: 'microplastics',",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "        paint: {",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "          'circle-color': '#FF0000',",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "          'circle-radius': 6,",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "          'circle-opacity': showMicroplastics ? 0.7 : 0",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "      // Add click handler for popups",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.on('click', 'microplastics-points', (e) => {",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "        const feature = e.features?.[0] as GeoJSON.Feature | undefined;",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 97
                }
              }
            ],
            [
              {
                "text": "        if (!feature) return;",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        const coordinates = feature.geometry.type === 'Point' ",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "          ? (feature.geometry.coordinates as [number, number])",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "          : e.lngLat.toArray();",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "        const properties = feature.properties;",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "        new mapboxgl.Popup()",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "          .setLngLat(coordinates)",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "          .setHTML(`",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "            <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "              <div class=\"mb-3\">",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 64
                }
              }
            ],
            [
              {
                "text": "                <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 124
                }
              }
            ],
            [
              {
                "text": "                  <span class=\"font-semibold\">Latitude:</span> ${coordinates[1].toFixed(4)}°",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 57
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "                <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "                  <span class=\"font-semibold\">Longitude:</span> ${coordinates[0].toFixed(4)}°",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "              </div>",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "              <div class=\"flex flex-col space-y-0.5\">",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "                ${formatMicroplasticsData(properties)}",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "              </div>",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "              ${properties?.DOI ? `",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "                <button class=\"mt-2 text-sm\">",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "                  <a href=\"${properties.DOI}\" ",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "                     target=\"_blank\" ",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "                     rel=\"noopener noreferrer\"",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                     class=\"text-blue-600 hover:text-blue-800 hover:underline\">",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "                    View Research Paper",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 60
                }
              }
            ],
            [
              {
                "text": "                  </a>",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "                </button>",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "              ` : ''}",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "            </div>",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "          `)",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "          .addTo(mapRef.current!);",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      // Add hover handlers",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.on('mouseenter', 'microplastics-points', () => {",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "        if (mapRef.current) {",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          mapRef.current.getCanvas().style.cursor = 'pointer';",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 66
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 72
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.on('mouseleave', 'microplastics-points', () => {",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        if (mapRef.current) {",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 63
                }
              }
            ],
            [
              {
                "text": "          mapRef.current.getCanvas().style.cursor = '';",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 63
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.setPaintProperty(",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "        'microplastics-points',",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "        'circle-opacity',",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "        showMicroplastics ? 0.7 : 0",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "      );",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "  }, [showMicroplastics, getFilteredMicroplasticsData]);",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 93
                }
              }
            ],
            [
              {
                "text": "  const loadMap = useCallback(() => {",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "    mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 94
                }
              }
            ],
            [
              {
                "text": "    if (mapContainerRef.current) {",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "      mapRef.current = new mapboxgl.Map({",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "        container: mapContainerRef.current,",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "        style: 'mapbox://styles/mapbox/streets-v12',",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 55
                }
              }
            ],
            [
              {
                "text": "        center: [-105.272148, 40.047050],",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "        zoom: 2",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.on('load', () => {",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "        addDataLayers();",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 80
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "  }, [addDataLayers]);",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "  const toggleMapStyle = useCallback(() => {",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 22
                }
              }
            ],
            [
              {
                "text": "    const satellite = 'mapbox://styles/mapbox/satellite-v9';",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "    const streets = 'mapbox://styles/mapbox/streets-v12';",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "    if (mapRef.current) {",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.setStyle(isStreetView ? satellite : streets);",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      setIsStreetView(!isStreetView);",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "      ",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 70
                }
              }
            ],
            [
              {
                "text": "      // Re-add data layers after style change",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.once('style.load', () => {",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 63
                }
              }
            ],
            [
              {
                "text": "        addDataLayers();",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  }, [isStreetView, addDataLayers]);",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 70
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  useEffect(() => {",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "    loadMap();",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "    return () => {",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "      mapRef.current?.remove(); // Cleanup",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "    };",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "  }, [loadMap]);",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "  useEffect(() => {",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "    if (mapRef.current?.loaded()) {",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "      addDataLayers();",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  }, [showMicroplastics, addDataLayers]);",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 65
                }
              }
            ],
            [
              {
                "text": "  return (",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    <div className=\"relative w-full h-full\">",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "      <div ref={mapContainerRef} className=\"w-full h-full\" />",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "      ",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "      {showMicroplastics && (",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "        <div className=\"absolute top-16 right-4 bg-black/40 backdrop-blur-md px-4 py-2 rounded-md shadow-md\">",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "          <p className=\"font-medium text-white\">",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "            Showing {dataPointCount} data points",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "          </p>",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        </div>",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "      )}",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "      <button",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "        onClick={toggleMapStyle}",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "        className=\"group absolute bottom-4 right-4 ml-auto bg-black/40 backdrop-blur-md p-2 rounded-md shadow-md hover:bg-deep-water transition-colors text-2xl\"",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      >",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "        <span className=\"transition-opacity duration-200 group-hover:opacity-0\">",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "          {isStreetView ? '🚦' : '🛰️'}",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "        </span>",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "        <span className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 transition-opacity duration-200 group-hover:opacity-100\">",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "          {isStreetView ? '🛰️' : '🚦'}",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "        </span>",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "      </button>",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "    </div>",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "  );",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 250,
                  "endColumn": 1
                }
              }
            ],
            []
          ],
          "done": true
        },
        {
          "value": "Now let's update the Sidebar component to use the DataContext:",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "value": "\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
            "scheme": "file"
          }
        },
        {
          "value": "import { useState } from 'react';\nimport { useData } from '@/context/DataContext';\n\nexport default function Sidebar() {\n  const { showMicroplastics, setShowMicroplastics, yearFilter, setYearFilter } = useData();\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [filterType, setFilterType] = useState<'single' | 'range'>(yearFilter.type);\n  const [singleYear, setSingleYear] = useState<number>(yearFilter.minYear);\n  const [minYear, setMinYear] = useState<number>(yearFilter.minYear);\n  const [maxYear, setMaxYear] = useState<number>(yearFilter.maxYear);\n\n  const handleApply = () => {\n    setYearFilter({\n      type: filterType,\n      minYear: filterType === 'single' ? singleYear : minYear,\n      maxYear: filterType === 'single' ? singleYear : maxYear\n    });\n  };\n\n  // ...existing code for the rest of the component...\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "import { useState } from 'react';",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "import { useData } from '@/context/DataContext';",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "export default function Sidebar() {",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "  const { showMicroplastics, setShowMicroplastics, yearFilter, setYearFilter } = useData();",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "  const [isCollapsed, setIsCollapsed] = useState(false);",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "  const [filterType, setFilterType] = useState<'single' | 'range'>(yearFilter.type);",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "  const [singleYear, setSingleYear] = useState<number>(yearFilter.minYear);",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  const [minYear, setMinYear] = useState<number>(yearFilter.minYear);",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "  const [maxYear, setMaxYear] = useState<number>(yearFilter.maxYear);",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 105
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "  const handleApply = () => {",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 57
                }
              }
            ],
            [
              {
                "text": "    setYearFilter({",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 78
                }
              }
            ],
            [
              {
                "text": "      type: filterType,",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 62
                }
              }
            ],
            [
              {
                "text": "      minYear: filterType === 'single' ? singleYear : minYear,",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      maxYear: filterType === 'single' ? singleYear : maxYear",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  };",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  return (",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "    <div className={`mt-16 m-5 fixed w-fit text-white text-sm sm:text-md bg-black/40 backdrop-blur-md rounded-lg shadow-md z-50 transition-all ease-in-out ${isCollapsed ? 'p-1' : 'p-4'}`}>",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "      <div className={`flex flex-row justify-between items-center ${isCollapsed ? 'm-0 mx-1' : 'mb-2'}`}>",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 65
                }
              }
            ],
            [
              {
                "text": "        <svg ",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 64
                }
              }
            ],
            [
              {
                "text": "          className={`w-5 h-5 ${isCollapsed ? 'text-sm' : 'text-md'}`}",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "          viewBox=\"0 0 24 24\" ",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "          fill=\"none\" ",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "          stroke=\"currentColor\" ",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          strokeWidth=\"2\"",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "        >",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 189
                }
              }
            ],
            [
              {
                "text": "          <path d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\" />",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 106
                }
              }
            ],
            [
              {
                "text": "        </svg>",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "        <button",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 71
                }
              }
            ],
            [
              {
                "text": "          onClick={() => setIsCollapsed(!isCollapsed)}",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 31
                }
              }
            ],
            [
              {
                "text": "          className=\"p-1 hover:bg-black/20 rounded-full transition-transform\"",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "          aria-label={isCollapsed ? 'Expand sidebar' : 'Collapse sidebar'}",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "        >",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "          <svg",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "        className={`w-4 h-4 transition-transform ${isCollapsed ? 'rotate-180' : ''}`}",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 159
                }
              }
            ],
            [
              {
                "text": "        viewBox=\"0 0 24 24\"",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "        fill=\"none\"",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "        stroke=\"currentColor\"",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 55
                }
              }
            ],
            [
              {
                "text": "        strokeWidth=\"2\"",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 78
                }
              }
            ],
            [
              {
                "text": "          >",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "        <path d=\"M15 19l-7-7 7-7\" />",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "          </svg>",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "        </button>",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 86
                }
              }
            ],
            [
              {
                "text": "      </div>",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "      {!isCollapsed && (",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "        <>",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "          <div className=\"flex flex-col gap-4\">",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "            <div className=\"flex items-center space-x-2\">",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "              <input",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "                type=\"checkbox\"",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 18
                }
              }
            ],
            [
              {
                "text": "                id=\"showMicroplastics\"",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "                checked={showMicroplastics}",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                onChange={(e) => setShowMicroplastics(e.target.checked)}",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                className=\"w-4 h-4 text-primary\"",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "              />",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "              <label htmlFor=\"showMicroplastics\">Show Microplastics Data</label>",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "            </div>",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "            {showMicroplastics && (",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "              <>",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "                <div className=\"flex flex-col\">",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 74
                }
              }
            ],
            [
              {
                "text": "                  <div className=\"flex items-center space-x-2\">",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "                    <input",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "                      type=\"radio\"",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 81
                }
              }
            ],
            [
              {
                "text": "                      id=\"singleYear\"",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "                      name=\"filterType\"",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                      checked={filterType === 'single'}",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "                      onChange={() => setFilterType('single')}",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "                      className=\"text-primary\"",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "                    />",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 64
                }
              }
            ],
            [
              {
                "text": "                    <label htmlFor=\"singleYear\">Single Year</label>",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "                  <div className=\"flex items-center space-x-2\">",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                    <input",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "                      type=\"radio\"",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 63
                }
              }
            ],
            [
              {
                "text": "                      id=\"yearRange\"",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "                      name=\"filterType\"",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "                      checked={filterType === 'range'}",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 68
                }
              }
            ],
            [
              {
                "text": "                      onChange={() => setFilterType('range')}",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                      className=\"text-primary\"",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                    />",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 64
                }
              }
            ],
            [
              {
                "text": "                    <label htmlFor=\"yearRange\">Year Range</label>",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                {filterType === 'single' ? (",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 55
                }
              }
            ],
            [
              {
                "text": "                  <div className=\"flex flex-col gap-1\">",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 62
                }
              }
            ],
            [
              {
                "text": "                    <label htmlFor=\"year\">Year</label>",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "                    <input",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "                      type=\"number\"",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 66
                }
              }
            ],
            [
              {
                "text": "                      id=\"year\"",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                      value={singleYear}",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "                      onChange={(e) => setSingleYear(Number(e.target.value))}",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                      className=\"w-full px-2 py-0.5 rounded-md bg-black/20 border-0 ring-primary\"",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "                    />",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 55
                }
              }
            ],
            [
              {
                "text": "                ) : (",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "                  <div className=\"space-y-2\">",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "                    <div className=\"flex flex-col gap-1\">",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "                      <label htmlFor=\"minYear\">Min Year</label>",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "                      <input",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 78
                }
              }
            ],
            [
              {
                "text": "                        type=\"number\"",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 98
                }
              }
            ],
            [
              {
                "text": "                        id=\"minYear\"",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "                        value={minYear}",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                        onChange={(e) => setMinYear(Number(e.target.value))}",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 22
                }
              }
            ],
            [
              {
                "text": "                        className=\"w-full px-2 py-0.5 rounded-md bg-black/20 border-0 ring-primary\"",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "                      />",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "                    </div>",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 64
                }
              }
            ],
            [
              {
                "text": "                    <div className=\"flex flex-col gap-1\">",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "                      <label htmlFor=\"maxYear\">Max Year</label>",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "                      <input",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "                        type=\"number\"",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                        id=\"maxYear\"",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 77
                }
              }
            ],
            [
              {
                "text": "                        value={maxYear}",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 100
                }
              }
            ],
            [
              {
                "text": "                        onChange={(e) => setMaxYear(Number(e.target.value))}",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                        className=\"w-full px-2 py-0.5 rounded-md bg-black/20 border-0 ring-primary\"",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "                      />",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "                    </div>",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 64
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "                )}",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "                <button",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                  onClick={handleApply}",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 77
                }
              }
            ],
            [
              {
                "text": "                  className=\"flex w-fit bg-black/20 py-1 px-2 rounded-md transform transition-transform hover:scale-[1.07] self-end\"",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 100
                }
              }
            ],
            [
              {
                "text": "                >",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                  Apply",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "                </button>",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "              </>",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "            )}",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          </div>",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "        </>",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "      )}",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 133
                }
              }
            ],
            [
              {
                "text": "    </div>",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 18
                }
              }
            ],
            [
              {
                "text": "  );",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 18
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 1
                }
              }
            ],
            []
          ],
          "done": true
        },
        {
          "value": "Finally, let's update the main page to wrap the components with the DataProvider:",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "value": "\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
            "scheme": "file"
          }
        },
        {
          "value": "import Map from '@/components/Map';\nimport Sidebar from '@/components/Sidebar';\nimport { DataProvider } from '@/context/DataContext';\n\nexport default function Home() {\n  return (\n    <DataProvider>\n      <main className=\"z-10 w-full h-screen\">\n        <Sidebar />\n        <Map />\n      </main>\n    </DataProvider>\n  );\n}\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "'use client';",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "import Map from '@/components/Map';",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "import Sidebar from '@/components/Sidebar';",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "import { DataProvider } from '@/context/DataContext';",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "export default function Home() {",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "  return (",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 68
                }
              }
            ],
            [
              {
                "text": "    <DataProvider>",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "      <main className=\"z-10 w-full h-screen\">",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "        <Sidebar />",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "        <Map />",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "      </main>",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "    </DataProvider>",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  );",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1
                }
              }
            ],
            []
          ],
          "done": true
        },
        {
          "value": "Now let's validate that our changes didn't introduce any errors:",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Checking `src/context/DataContext.tsx`",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "pastTenseMessage": {
            "value": "Checked `src/context/DataContext.tsx`, no problems found",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "isConfirmed": true,
          "isComplete": true
        },
        {
          "value": "I've validated the changes and there are no errors in any of the modified files. The new structure now has:\n\n1. A centralized DataContext that manages all data-related state\n2. Proper data filtering logic in the context\n3. Map component that handles layer updates efficiently\n4. Sidebar that controls the data display through the context\n\nThis setup makes it easy to add new data sources in the future - you would just need to:\n1. Add new state variables in the DataContext\n2. Create corresponding data layer functions in the Map component\n3. Add new controls in the Sidebar\n\nThe toggleMapStyle and addDataLayers integration ensures that data layers are properly reapplied when the map style changes or when data filters are updated.",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        }
      ],
      "responseId": "response_9afee03a-c397-4da3-85d7-80aaa91b2c42",
      "isHidden": false,
      "result": {
        "timings": {
          "firstProgress": 20766,
          "totalElapsed": 134688
        },
        "metadata": {
          "edits": {
            "workingSet": [
              {
                "uri": {
                  "$mid": 1,
                  "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
                  "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
                  "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
                  "scheme": "file"
                },
                "text": "import { useState } from 'react';\nimport { useData } from '@/context/DataContext';\n\nexport default function Sidebar() {\n  const { showMicroplastics, setShowMicroplastics, yearFilter, setYearFilter } = useData();\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [filterType, setFilterType] = useState<'single' | 'range'>(yearFilter.type);\n  const [singleYear, setSingleYear] = useState<number>(yearFilter.minYear);\n  const [minYear, setMinYear] = useState<number>(yearFilter.minYear);\n  const [maxYear, setMaxYear] = useState<number>(yearFilter.maxYear);\n\n  const handleApply = () => {\n    setYearFilter({\n      type: filterType,\n      minYear: filterType === 'single' ? singleYear : minYear,\n      maxYear: filterType === 'single' ? singleYear : maxYear\n    });\n  };\n\n  return (\n    <div className={`mt-16 m-5 fixed w-fit text-white text-sm sm:text-md bg-black/40 backdrop-blur-md rounded-lg shadow-md z-50 transition-all ease-in-out ${isCollapsed ? 'p-1' : 'p-4'}`}>\n      <div className={`flex flex-row justify-between items-center ${isCollapsed ? 'm-0 mx-1' : 'mb-2'}`}>\n        <svg \n          className={`w-5 h-5 ${isCollapsed ? 'text-sm' : 'text-md'}`}\n          viewBox=\"0 0 24 24\" \n          fill=\"none\" \n          stroke=\"currentColor\" \n          strokeWidth=\"2\"\n        >\n          <path d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\" />\n        </svg>\n        <button\n          onClick={() => setIsCollapsed(!isCollapsed)}\n          className=\"p-1 hover:bg-black/20 rounded-full transition-transform\"\n          aria-label={isCollapsed ? 'Expand sidebar' : 'Collapse sidebar'}\n        >\n          <svg\n        className={`w-4 h-4 transition-transform ${isCollapsed ? 'rotate-180' : ''}`}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n          >\n        <path d=\"M15 19l-7-7 7-7\" />\n          </svg>\n        </button>\n      </div>\n\n      {!isCollapsed && (\n        <>\n          <div className=\"flex flex-col gap-4\">\n            <div className=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                id=\"showMicroplastics\"\n                checked={showMicroplastics}\n                onChange={(e) => setShowMicroplastics(e.target.checked)}\n                className=\"w-4 h-4 text-primary\"\n              />\n              <label htmlFor=\"showMicroplastics\">Show Microplastics Data</label>\n            </div>\n\n            {showMicroplastics && (\n              <>\n                <div className=\"flex flex-col\">\n                  <div className=\"flex items-center space-x-2\">\n                    <input\n                      type=\"radio\"\n                      id=\"singleYear\"\n                      name=\"filterType\"\n                      checked={filterType === 'single'}\n                      onChange={() => setFilterType('single')}\n                      className=\"text-primary\"\n                    />\n                    <label htmlFor=\"singleYear\">Single Year</label>\n                  </div>\n\n                  <div className=\"flex items-center space-x-2\">\n                    <input\n                      type=\"radio\"\n                      id=\"yearRange\"\n                      name=\"filterType\"\n                      checked={filterType === 'range'}\n                      onChange={() => setFilterType('range')}\n                      className=\"text-primary\"\n                    />\n                    <label htmlFor=\"yearRange\">Year Range</label>\n                  </div>\n                </div>\n\n                {filterType === 'single' ? (\n                  <div className=\"flex flex-col gap-1\">\n                    <label htmlFor=\"year\">Year</label>\n                    <input\n                      type=\"number\"\n                      id=\"year\"\n                      value={singleYear}\n                      onChange={(e) => setSingleYear(Number(e.target.value))}\n                      className=\"w-full px-2 py-0.5 rounded-md bg-black/20 border-0 ring-primary\"\n                    />\n                  </div>\n                ) : (\n                  <div className=\"space-y-2\">\n                    <div className=\"flex flex-col gap-1\">\n                      <label htmlFor=\"minYear\">Min Year</label>\n                      <input\n                        type=\"number\"\n                        id=\"minYear\"\n                        value={minYear}\n                        onChange={(e) => setMinYear(Number(e.target.value))}\n                        className=\"w-full px-2 py-0.5 rounded-md bg-black/20 border-0 ring-primary\"\n                      />\n                    </div>\n                    <div className=\"flex flex-col gap-1\">\n                      <label htmlFor=\"maxYear\">Max Year</label>\n                      <input\n                        type=\"number\"\n                        id=\"maxYear\"\n                        value={maxYear}\n                        onChange={(e) => setMaxYear(Number(e.target.value))}\n                        className=\"w-full px-2 py-0.5 rounded-md bg-black/20 border-0 ring-primary\"\n                      />\n                    </div>\n                  </div>\n                )}\n\n                <button\n                  onClick={handleApply}\n                  className=\"flex w-fit bg-black/20 py-1 px-2 rounded-md transform transition-transform hover:scale-[1.07] self-end\"\n                >\n                  Apply\n                </button>\n              </>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n",
                "languageId": "typescriptreact",
                "version": 1636,
                "state": 0
              },
              {
                "uri": {
                  "$mid": 1,
                  "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "scheme": "file"
                },
                "text": "'use client';\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport microplasticsData from '@/data/nasa_microplastics.json';\nimport { useData } from '@/context/DataContext';\n\nconst formatDate = (dateString: string) => {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n};\n\nconst formatMicroplasticsData = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  const relevantData = {\n    'Method': properties.SAMPMETHOD,\n    'Density': properties.DENSTEXT,\n    'Unit': properties.UNIT,\n    'Organization': properties.ORG,\n    'Date': formatDate(properties.Date),\n    'Reference': properties.SHORTREF,\n    'DOI': properties.DOI\n  };\n\n  return Object.entries(relevantData)\n    .map(([key, value]) => value ? \n    `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">${key}:</span> ${value}\n    <p>\n    ` : '')\n    .join('');\n};\n\nexport default function Map() {\n  const mapContainerRef = useRef<HTMLDivElement>(null);\n  const mapRef = useRef<mapboxgl.Map | null>(null);\n  const [isStreetView, setIsStreetView] = useState(true);\n  const { showMicroplastics, getFilteredMicroplasticsData, dataPointCount } = useData();\n\n  const addDataLayers = useCallback(() => {\n    if (!mapRef.current) return;\n\n    // Add the GeoJSON as a source\n    if (!mapRef.current.getSource('microplastics')) {\n      mapRef.current.addSource('microplastics', {\n        type: 'geojson',\n        data: getFilteredMicroplasticsData()\n      });\n    } else {\n      (mapRef.current.getSource('microplastics') as mapboxgl.GeoJSONSource).setData(getFilteredMicroplasticsData());\n    }\n\n    // Add a layer to visualize the points\n    if (!mapRef.current.getLayer('microplastics-points')) {\n      mapRef.current.addLayer({\n        id: 'microplastics-points',\n        type: 'circle',\n        source: 'microplastics',\n        paint: {\n          'circle-color': '#FF0000',\n          'circle-radius': 6,\n          'circle-opacity': showMicroplastics ? 0.7 : 0\n        }\n      });\n\n      // Add click handler for popups\n      mapRef.current.on('click', 'microplastics-points', (e) => {\n        const feature = e.features?.[0] as GeoJSON.Feature | undefined;\n        if (!feature) return;\n\n        const coordinates = feature.geometry.type === 'Point' \n          ? (feature.geometry.coordinates as [number, number])\n          : e.lngLat.toArray();\n\n        const properties = feature.properties;\n        \n        new mapboxgl.Popup()\n          .setLngLat(coordinates)\n          .setHTML(`\n            <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">\n              <div class=\"mb-3\">\n                <div class=\"mb-1\">\n                  <span class=\"font-semibold\">Latitude:</span> ${coordinates[1].toFixed(4)}°\n                </div>\n                <div class=\"mb-1\">\n                  <span class=\"font-semibold\">Longitude:</span> ${coordinates[0].toFixed(4)}°\n                </div>\n              </div>\n              <div class=\"flex flex-col space-y-0.5\">\n                ${formatMicroplasticsData(properties)}\n              </div>\n              ${properties?.DOI ? `\n                <button class=\"mt-2 text-sm\">\n                  <a href=\"${properties.DOI}\" \n                     target=\"_blank\" \n                     rel=\"noopener noreferrer\"\n                     class=\"text-blue-600 hover:text-blue-800 hover:underline\">\n                    View Research Paper\n                  </a>\n                </button>\n              ` : ''}\n            </div>\n          `)\n          .addTo(mapRef.current!);\n      });\n\n      // Add hover handlers\n      mapRef.current.on('mouseenter', 'microplastics-points', () => {\n        if (mapRef.current) {\n          mapRef.current.getCanvas().style.cursor = 'pointer';\n        }\n      });\n\n      mapRef.current.on('mouseleave', 'microplastics-points', () => {\n        if (mapRef.current) {\n          mapRef.current.getCanvas().style.cursor = '';\n        }\n      });\n    } else {\n      mapRef.current.setPaintProperty(\n        'microplastics-points',\n        'circle-opacity',\n        showMicroplastics ? 0.7 : 0\n      );\n    }\n  }, [showMicroplastics, getFilteredMicroplasticsData]);\n\n  const loadMap = useCallback(() => {\n    mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;\n\n    if (mapContainerRef.current) {\n      mapRef.current = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mapbox/streets-v12',\n        center: [-105.272148, 40.047050],\n        zoom: 2\n      });\n\n      mapRef.current.on('load', () => {\n        addDataLayers();\n      });\n    }\n  }, [addDataLayers]);\n\n  const toggleMapStyle = useCallback(() => {\n    const satellite = 'mapbox://styles/mapbox/satellite-v9';\n    const streets = 'mapbox://styles/mapbox/streets-v12';\n    \n    if (mapRef.current) {\n      mapRef.current.setStyle(isStreetView ? satellite : streets);\n      setIsStreetView(!isStreetView);\n      \n      // Re-add data layers after style change\n      mapRef.current.once('style.load', () => {\n        addDataLayers();\n      });\n    }\n  }, [isStreetView, addDataLayers]);\n\n  useEffect(() => {\n    loadMap();\n\n    return () => {\n      mapRef.current?.remove(); // Cleanup\n    };\n  }, [loadMap]);\n\n  useEffect(() => {\n    if (mapRef.current?.loaded()) {\n      addDataLayers();\n    }\n  }, [showMicroplastics, addDataLayers]);\n\n  return (\n    <div className=\"relative w-full h-full\">\n      <div ref={mapContainerRef} className=\"w-full h-full\" />\n      \n      {showMicroplastics && (\n        <div className=\"absolute top-16 right-4 bg-black/40 backdrop-blur-md px-4 py-2 rounded-md shadow-md\">\n          <p className=\"font-medium text-white\">\n            Showing {dataPointCount} data points\n          </p>\n        </div>\n      )}\n\n      <button\n        onClick={toggleMapStyle}\n        className=\"group absolute bottom-4 right-4 ml-auto bg-black/40 backdrop-blur-md p-2 rounded-md shadow-md hover:bg-deep-water transition-colors text-2xl\"\n      >\n        <span className=\"transition-opacity duration-200 group-hover:opacity-0\">\n          {isStreetView ? '🚦' : '🛰️'}\n        </span>\n        <span className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 transition-opacity duration-200 group-hover:opacity-100\">\n          {isStreetView ? '🛰️' : '🚦'}\n        </span>\n      </button>\n    </div>\n  );\n}\n",
                "languageId": "typescriptreact",
                "version": 699,
                "state": 0
              },
              {
                "uri": {
                  "$mid": 1,
                  "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
                  "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
                  "path": "/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
                  "scheme": "file"
                },
                "text": "'use client';\n\nimport Map from '@/components/Map';\nimport Sidebar from '@/components/Sidebar';\nimport { DataProvider } from '@/context/DataContext';\n\nexport default function Home() {\n  return (\n    <DataProvider>\n      <main className=\"z-10 w-full h-screen\">\n        <Sidebar />\n        <Map />\n      </main>\n    </DataProvider>\n  );\n}\n",
                "languageId": "typescriptreact",
                "version": 50,
                "state": 0
              }
            ],
            "promptInstructions": [],
            "request": "Above is the result of calling one or more tools. The user can see the results of the edit_file tool, so you don't need to explain them. But the user can't see the results of other tools, so you should explain them to the user if referencing them in your answer. Continue from where you left off without repeating yourself.",
            "response": "I've validated the changes and there are no errors in any of the modified files. The new structure now has:\n\n1. A centralized DataContext that manages all data-related state\n2. Proper data filtering logic in the context\n3. Map component that handles layer updates efficiently\n4. Sidebar that controls the data display through the context\n\nThis setup makes it easy to add new data sources in the future - you would just need to:\n1. Add new state variables in the DataContext\n2. Create corresponding data layer functions in the Map component\n3. Add new controls in the Sidebar\n\nThe toggleMapStyle and addDataLayers integration ensures that data layers are properly reapplied when the map style changes or when data filters are updated."
          },
          "codeBlocks": [],
          "messages": [
            {
              "role": "user",
              "content": "can you make a new DataContext for the microplastics data and other eventualy data that will get added, th sidebar settings should control it\n\nthe filtered data should be added via the addDataLayers, which should use something similar to the toggleMapStyle which readds the data layers"
            },
            {
              "role": "assistant",
              "content": "I've validated the changes and there are no errors in any of the modified files. The new structure now has:\n\n1. A centralized DataContext that manages all data-related state\n2. Proper data filtering logic in the context\n3. Map component that handles layer updates efficiently\n4. Sidebar that controls the data display through the context\n\nThis setup makes it easy to add new data sources in the future - you would just need to:\n1. Add new state variables in the DataContext\n2. Create corresponding data layer functions in the Map component\n3. Add new controls in the Sidebar\n\nThe toggleMapStyle and addDataLayers integration ensures that data layers are properly reapplied when the map style changes or when data filters are updated."
            }
          ],
          "toolCallRounds": [
            {
              "toolCalls": [
                {
                  "name": "edit_file",
                  "arguments": "{\"filePath\": \"/Users/richardroberson/Documents/repos/ocean-map/src/context/DataContext.tsx\", \"explanation\": \"Creating a new DataContext to manage map data and filtering\", \"code\": \"import { createContext, useContext, ReactNode, useState, useCallback } from 'react';\\nimport microplasticsData from '@/data/nasa_microplastics.json';\\n\\ninterface YearFilter {\\n  type: 'single' | 'range';\\n  minYear: number;\\n  maxYear: number;\\n}\\n\\ninterface DataContextType {\\n  showMicroplastics: boolean;\\n  setShowMicroplastics: (show: boolean) => void;\\n  yearFilter: YearFilter;\\n  setYearFilter: (filter: YearFilter) => void;\\n  getFilteredMicroplasticsData: () => GeoJSON.FeatureCollection;\\n  dataPointCount: number;\\n}\\n\\nconst DataContext = createContext<DataContextType | undefined>(undefined);\\n\\nexport function DataProvider({ children }: { children: ReactNode }) {\\n  const [showMicroplastics, setShowMicroplastics] = useState(true);\\n  const [yearFilter, setYearFilter] = useState<YearFilter>({\\n    type: 'single',\\n    minYear: 2020,\\n    maxYear: 2020\\n  });\\n  const [dataPointCount, setDataPointCount] = useState(0);\\n\\n  const getFilteredMicroplasticsData = useCallback(() => {\\n    const filteredData = {\\n      type: 'FeatureCollection',\\n      features: (microplasticsData as GeoJSON.FeatureCollection).features.filter((feature: GeoJSON.Feature) => {\\n        const date = new Date(feature.properties?.Date);\\n        if (!date) return false;\\n\\n        const year = date.getFullYear();\\n        \\n        if (yearFilter.type === 'single') {\\n          return year === yearFilter.minYear;\\n        } else {\\n          return year >= yearFilter.minYear && year <= yearFilter.maxYear;\\n        }\\n      })\\n    } as GeoJSON.FeatureCollection;\\n\\n    setDataPointCount(filteredData.features.length);\\n    return filteredData;\\n  }, [yearFilter]);\\n\\n  return (\\n    <DataContext.Provider value={{\\n      showMicroplastics,\\n      setShowMicroplastics,\\n      yearFilter,\\n      setYearFilter,\\n      getFilteredMicroplasticsData,\\n      dataPointCount\\n    }}>\\n      {children}\\n    </DataContext.Provider>\\n  );\\n}\\n\\nexport function useData() {\\n  const context = useContext(DataContext);\\n  if (context === undefined) {\\n    throw new Error('useData must be used within a DataProvider');\\n  }\\n  return context;\\n}\"}",
                  "id": "toolu_bdrk_01PPzRy4WFq5bCFuibuAdgS5"
                }
              ],
              "toolInputRetry": 0,
              "response": "I'll help you create a DataContext to manage the microplastics data and future data sources. Let's break this down into steps:\n\n1. First, let's create a new DataContext\n2. Then modify the components to use this context\n3. Ensure the map properly handles data layer changes\n\nLet's start by creating the DataContext:"
            },
            {
              "toolCalls": [
                {
                  "name": "edit_file",
                  "arguments": "{\"filePath\": \"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\", \"explanation\": \"Updating Map component to use DataContext\", \"code\": \"// ...existing code...\\n\\nimport { useData } from '@/context/DataContext';\\n\\n// Remove the MapProps interface since we'll get props from context\\n\\nexport default function Map() {\\n  const mapContainerRef = useRef<HTMLDivElement>(null);\\n  const mapRef = useRef<mapboxgl.Map | null>(null);\\n  const [isStreetView, setIsStreetView] = useState(true);\\n  const { showMicroplastics, getFilteredMicroplasticsData, dataPointCount } = useData();\\n\\n  const addDataLayers = useCallback(() => {\\n    if (!mapRef.current) return;\\n\\n    // Add the GeoJSON as a source\\n    if (!mapRef.current.getSource('microplastics')) {\\n      mapRef.current.addSource('microplastics', {\\n        type: 'geojson',\\n        data: getFilteredMicroplasticsData()\\n      });\\n    } else {\\n      (mapRef.current.getSource('microplastics') as mapboxgl.GeoJSONSource).setData(getFilteredMicroplasticsData());\\n    }\\n\\n    // Add a layer to visualize the points\\n    if (!mapRef.current.getLayer('microplastics-points')) {\\n      // ...existing code for adding layer...\\n    } else {\\n      mapRef.current.setPaintProperty(\\n        'microplastics-points',\\n        'circle-opacity',\\n        showMicroplastics ? 0.7 : 0\\n      );\\n    }\\n  }, [showMicroplastics, getFilteredMicroplasticsData]);\\n\\n  // Remove filterDataByYear function as it's now handled in the context\\n\\n  const toggleMapStyle = useCallback(() => {\\n    const satellite = 'mapbox://styles/mapbox/satellite-v9';\\n    const streets = 'mapbox://styles/mapbox/streets-v12';\\n    \\n    if (mapRef.current) {\\n      mapRef.current.setStyle(isStreetView ? satellite : streets);\\n      setIsStreetView(!isStreetView);\\n      \\n      // Re-add data layers after style change\\n      mapRef.current.once('style.load', () => {\\n        addDataLayers();\\n      });\\n    }\\n  }, [isStreetView, addDataLayers]);\\n\\n  // ...existing code for loadMap useEffect...\\n\\n  // Update useEffect to handle data updates\\n  useEffect(() => {\\n    if (mapRef.current?.loaded()) {\\n      addDataLayers();\\n    }\\n  }, [showMicroplastics, addDataLayers]);\\n\\n  return (\\n    // ...existing code...\\n  );\\n}\"}",
                  "id": "toolu_bdrk_01ULbepbMwfXAQEfFVvn8n6S"
                }
              ],
              "toolInputRetry": 0,
              "response": "Now let's update the Map component to use the DataContext:"
            },
            {
              "toolCalls": [
                {
                  "name": "edit_file",
                  "arguments": "{\"explanation\": \"Updating Sidebar to use DataContext instead of props\", \"filePath\": \"/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx\", \"code\": \"import { useState } from 'react';\\nimport { useData } from '@/context/DataContext';\\n\\nexport default function Sidebar() {\\n  const { showMicroplastics, setShowMicroplastics, yearFilter, setYearFilter } = useData();\\n  const [isCollapsed, setIsCollapsed] = useState(false);\\n  const [filterType, setFilterType] = useState<'single' | 'range'>(yearFilter.type);\\n  const [singleYear, setSingleYear] = useState<number>(yearFilter.minYear);\\n  const [minYear, setMinYear] = useState<number>(yearFilter.minYear);\\n  const [maxYear, setMaxYear] = useState<number>(yearFilter.maxYear);\\n\\n  const handleApply = () => {\\n    setYearFilter({\\n      type: filterType,\\n      minYear: filterType === 'single' ? singleYear : minYear,\\n      maxYear: filterType === 'single' ? singleYear : maxYear\\n    });\\n  };\\n\\n  // ...existing code for the rest of the component...\"}",
                  "id": "toolu_bdrk_01TwgMoEJpZppcNfBRA94Qxu"
                }
              ],
              "toolInputRetry": 0,
              "response": "Now let's update the Sidebar component to use the DataContext:"
            },
            {
              "toolCalls": [
                {
                  "name": "edit_file",
                  "arguments": "{\"code\": \"import Map from '@/components/Map';\\nimport Sidebar from '@/components/Sidebar';\\nimport { DataProvider } from '@/context/DataContext';\\n\\nexport default function Home() {\\n  return (\\n    <DataProvider>\\n      <main className=\\\"z-10 w-full h-screen\\\">\\n        <Sidebar />\\n        <Map />\\n      </main>\\n    </DataProvider>\\n  );\\n}\", \"explanation\": \"Simplifying the main page and adding DataProvider\", \"filePath\": \"/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx\"}",
                  "id": "toolu_bdrk_01G91U37jnbbcZa9CRipfeBh"
                }
              ],
              "toolInputRetry": 0,
              "response": "Finally, let's update the main page to wrap the components with the DataProvider:"
            },
            {
              "toolCalls": [
                {
                  "name": "get_errors",
                  "arguments": "{\"filePaths\": [\"/Users/richardroberson/Documents/repos/ocean-map/src/context/DataContext.tsx\", \"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\", \"/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx\", \"/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx\"]}",
                  "id": "toolu_bdrk_01G3awrKCNYYBTE8PLXVEGBJ"
                }
              ],
              "toolInputRetry": 0,
              "response": "Now let's validate that our changes didn't introduce any errors:"
            },
            {
              "toolCalls": [],
              "toolInputRetry": 0,
              "response": "I've validated the changes and there are no errors in any of the modified files. The new structure now has:\n\n1. A centralized DataContext that manages all data-related state\n2. Proper data filtering logic in the context\n3. Map component that handles layer updates efficiently\n4. Sidebar that controls the data display through the context\n\nThis setup makes it easy to add new data sources in the future - you would just need to:\n1. Add new state variables in the DataContext\n2. Create corresponding data layer functions in the Map component\n3. Add new controls in the Sidebar\n\nThe toggleMapStyle and addDataLayers integration ensures that data layers are properly reapplied when the map style changes or when data filters are updated."
            }
          ],
          "toolCallResults": {
            "toolu_bdrk_01PPzRy4WFq5bCFuibuAdgS5": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01ULbepbMwfXAQEfFVvn8n6S": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01TwgMoEJpZppcNfBRA94Qxu": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01G91U37jnbbcZa9CRipfeBh": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01G3awrKCNYYBTE8PLXVEGBJ": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "<errors path=\"/Users/richardroberson/Documents/repos/ocean-map/src/context/DataContext.tsx\">\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "No errors found",
                                  "lineBreakBefore": false
                                },
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "priority": 1,
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "</errors>",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "\n",
                              "lineBreakBefore": false
                            }
                          ],
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "<errors path=\"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\">\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "No errors found",
                                  "lineBreakBefore": false
                                },
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "priority": 1,
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "</errors>",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "\n",
                              "lineBreakBefore": false
                            }
                          ],
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "<errors path=\"/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx\">\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "No errors found",
                                  "lineBreakBefore": false
                                },
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "priority": 1,
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "</errors>",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "\n",
                              "lineBreakBefore": false
                            }
                          ],
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "<errors path=\"/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx\">\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "No errors found",
                                  "lineBreakBefore": false
                                },
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "priority": 1,
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "</errors>",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "\n",
                              "lineBreakBefore": false
                            }
                          ],
                          "references": []
                        }
                      ],
                      "references": []
                    }
                  }
                }
              ]
            }
          },
          "modelMessageId": "a5b3296d-63ef-4367-bd38-c626f8761860",
          "responseId": "a9013607-e7fe-4700-a184-86104daf2659",
          "sessionId": "924ed2fa-36ca-4b7f-8c4f-4a64b60d95c5",
          "agentId": "github.copilot.editsAgent"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editsAgent",
        "description": "Edit files in your workspace in agent mode (Experimental)",
        "when": "config.chat.agent.enabled && !chatAgentModeDisallowed",
        "metadata": {
          "themeIcon": {
            "id": "tools"
          },
          "hasFollowups": false,
          "supportIssueReporting": false
        },
        "name": "agent",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "isToolsAgent": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "workingSet": [
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/app/page.tsx",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Sidebar.tsx",
          "scheme": "file"
        }
      ],
      "contentReferences": [],
      "codeCitations": [],
      "timestamp": 1739672996778
    }
  ]
}