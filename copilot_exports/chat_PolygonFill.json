{
  "requesterUsername": "richardr1126",
  "requesterAvatarIconUri": {
    "$mid": 1,
    "path": "/u/29444239",
    "scheme": "https",
    "authority": "avatars.githubusercontent.com",
    "query": "v=4"
  },
  "responderUsername": "GitHub Copilot",
  "responderAvatarIconUri": {
    "id": "copilot"
  },
  "initialLocation": "editing-session",
  "requests": [
    {
      "requestId": "request_1a981e58-71c5-49a8-926d-fd50e5ac2032",
      "message": {
        "text": "if the data source uses polygons, not lat long, can you use a fill layer like this example\n\nhttps://docs.mapbox.com/mapbox-gl-js/example/geojson-layer-in-slot/",
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 159
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 3,
              "endColumn": 68
            },
            "text": "if the data source uses polygons, not lat long, can you use a fill layer like this example\n\nhttps://docs.mapbox.com/mapbox-gl-js/example/geojson-layer-in-slot/",
            "kind": "text"
          }
        ]
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "scheme": "file"
            },
            "id": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "name": "Map.tsx",
            "isFile": true
          }
        ]
      },
      "response": [
        {
          "value": "I'll help modify the Map component to properly handle polygon data using a fill layer instead of converting polygons to points. Looking at your code, I notice that there's currently a `convertPolygonToPoint` function that's transforming polygon data into points, which we'll need to change.\n\nLet me modify the Map.tsx file to handle polygons with a fill layer:",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "kind": "undoStop",
          "id": "aaaee163-7110-4a44-ad24-a99c4d868a30"
        },
        {
          "value": "\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "scheme": "file"
          }
        },
        {
          "value": "// ...existing code...\n\nexport default function Map() {\n  const mapContainerRef = useRef<HTMLDivElement>(null);\n  const mapRef = useRef<mapboxgl.Map | null>(null);\n  const layersRef = useRef<Set<string>>(new Set());\n  const [isStreetView, setIsStreetView] = useState(true);\n  const { layers, getFilteredData, dataPointCount } = useData();\n\n  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {\n    if (!mapRef.current) return;\n\n    const layerId = `${layer.id}-layer`;\n    const map = mapRef.current;\n    const data = getFilteredData(layer.id);\n\n    // Remove existing layer if it exists\n    if (layersRef.current.has(layerId) && map.getLayer(layerId)) {\n      map.removeLayer(layerId);\n    }\n\n    // Update existing source if it exists\n    if (map.getSource(layer.id)) {\n      (map.getSource(layer.id) as mapboxgl.GeoJSONSource).setData(data);\n    } else {\n      // Add new source if it doesn't exist\n      map.addSource(layer.id, {\n        type: 'geojson',\n        data: data\n      });\n    }\n\n    // Add layer if it's meant to be visible\n    if (layer.visible) {\n      const layerConfig: mapboxgl.AnyLayer = {\n        id: layerId,\n        source: layer.id,\n        paint: {}\n      };\n\n      // Check if the first feature is a polygon or point to determine layer type\n      const firstFeature = data.features[0];\n      if (firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon') {\n        layerConfig.type = 'fill';\n        layerConfig.paint = {\n          'fill-color': layer.color,\n          'fill-opacity': 0.6,\n          'fill-outline-color': '#ffffff'\n        };\n      } else {\n        layerConfig.type = 'circle';\n        layerConfig.paint = {\n          'circle-radius': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            0, layer.id === 'nasa' ? 4 : 3,\n            8, layer.id === 'nasa' ? 8 : 6\n          ],\n          'circle-color': layer.color,\n          'circle-opacity': 0.8,\n          'circle-stroke-width': 2,\n          'circle-stroke-color': '#ffffff',\n          'circle-stroke-opacity': 1\n        };\n      }\n\n      map.addLayer(layerConfig);\n      layersRef.current.add(layerId);\n\n      // Add event listeners\n      map.on('click', layerId, (e) => {\n        const feature = e.features?.[0];\n        if (!feature) return;\n\n        const coordinates = e.lngLat;\n        const properties = feature.properties;\n        const popupContent = layer.id === 'microplastics' \n          ? formatMicroplasticsPopup(properties)\n          : layer.id === 'nasa'\n          ? formatNasaPopup(properties)\n          : formatNtuaPopup(properties);\n\n        new mapboxgl.Popup()\n          .setLngLat(coordinates)\n          .setHTML(`\n            <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">\n              <div class=\"mb-3\">\n                <div class=\"mb-1\">\n                  <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°\n                </div>\n                <div class=\"mb-1\">\n                  <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°\n                </div>\n              </div>\n              <div class=\"flex flex-col space-y-0.5\">\n                ${popupContent}\n              </div>\n              ${properties?.DOI ? `\n                <button class=\"mt-2 text-sm\">\n                  <a href=\"${properties.DOI}\" \n                     target=\"_blank\" \n                     rel=\"noopener noreferrer\"\n                     class=\"text-blue-600 hover:text-blue-800 hover:underline\">\n                    View Research Paper\n                  </a>\n                </button>\n              ` : ''}\n            </div>\n          `)\n          .addTo(map);\n      });\n\n      map.on('mouseenter', layerId, () => {\n        map.getCanvas().style.cursor = 'pointer';\n      });\n\n      map.on('mouseleave', layerId, () => {\n        map.getCanvas().style.cursor = '';\n      });\n    }\n  }, [getFilteredData]);\n\n  // ...existing code...\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "'use client';",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "import { useCallback, useEffect, useRef, useState } from 'react';",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 66
                }
              }
            ],
            [
              {
                "text": "import mapboxgl from 'mapbox-gl';",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "import 'mapbox-gl/dist/mapbox-gl.css';",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "import { useData } from '@/contexts/DataContext';",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatDate = (dateString: string) => {",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "  return new Date(dateString).toLocaleDateString('en-US', {",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 60
                }
              }
            ],
            [
              {
                "text": "    year: 'numeric',",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "    month: 'long',",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "    day: 'numeric'",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "  });",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatMicroplasticsPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 78
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  const relevantData = {",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "    'Method': properties.SAMPMETHOD,",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "    'Density': properties.DENSTEXT,",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Unit': properties.UNIT,",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "    'Organization': properties.ORG,",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Date': formatDate(properties.Date),",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "    'Reference': properties.SHORTREF,",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    'DOI': properties.DOI",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "  };",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  return Object.entries(relevantData)",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    .map(([key, value]) => value ? ",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    `",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">${key}:</span> ${value}",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "    <p>",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "    ` : '')",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "    .join('');",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatNasaPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  return `",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">Detection:</span> Floating Marine Debris",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "    </p>",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "  `;",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatNtuaPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  return `",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">Detection:</span> Marine Floating Debris",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "    </p>",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "  `;",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "export default function Map() {",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "  const mapContainerRef = useRef<HTMLDivElement>(null);",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "  const mapRef = useRef<mapboxgl.Map | null>(null);",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "  const layersRef = useRef<Set<string>>(new Set());",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "  const [isStreetView, setIsStreetView] = useState(true);",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "  const { layers, getFilteredData, dataPointCount } = useData();",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 65
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 76
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current) return;",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 62
                }
              }
            ],
            [
              {
                "text": "    const layerId = `${layer.id}-layer`;",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "    const map = mapRef.current;",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "    const data = getFilteredData(layer.id);",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "    // Remove existing layer if it exists",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "    if (layersRef.current.has(layerId) && map.getLayer(layerId)) {",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "      map.removeLayer(layerId);",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "    // Update existing source if it exists",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "    if (map.getSource(layer.id)) {",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      (map.getSource(layer.id) as mapboxgl.GeoJSONSource).setData(data);",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 96
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "      // Add new source if it doesn't exist",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      map.addSource(layer.id, {",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "        type: 'geojson',",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "        data: data",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "    // Add layer if it's meant to be visible",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "    if (layer.visible) {",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 57
                }
              }
            ],
            [
              {
                "text": "      const layerConfig: mapboxgl.AnyLayer = {",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "        id: layerId,",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        source: layer.id,",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "        paint: {}",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "      };",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "      // Check if the first feature is a polygon or point to determine layer type",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      const firstFeature = data.features[0];",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "      if (firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon') {",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "        layerConfig.type = 'fill';",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 78
                }
              }
            ],
            [
              {
                "text": "        layerConfig.paint = {",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "          'fill-color': layer.color,",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "          'fill-opacity': 0.6,",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "          'fill-outline-color': '#ffffff'",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "        layerConfig.type = 'circle';",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "        layerConfig.paint = {",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          'circle-radius': [",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "            'interpolate',",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "            ['linear'],",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "            ['zoom'],",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "            0, layer.id === 'nasa' ? 4 : 3,",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 22
                }
              }
            ],
            [
              {
                "text": "            8, layer.id === 'nasa' ? 8 : 6",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "          ],",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "          'circle-color': layer.color,",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "          'circle-opacity': 0.8,",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "          'circle-stroke-width': 2,",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "          'circle-stroke-color': '#ffffff',",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 22
                }
              }
            ],
            [
              {
                "text": "          'circle-stroke-opacity': 1",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "      map.addLayer(layerConfig);",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "      layersRef.current.add(layerId);",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "      // Add event listeners",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "      map.on('click', layerId, (e) => {",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "        const feature = e.features?.[0];",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "        if (!feature) return;",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "        const coordinates = e.lngLat;",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        const properties = feature.properties;",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "        const popupContent = layer.id === 'microplastics' ",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "          ? formatMicroplasticsPopup(properties)",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "          : layer.id === 'nasa'",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "          ? formatNasaPopup(properties)",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          : formatNtuaPopup(properties);",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 81
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 51
                }
              }
            ],
            [
              {
                "text": "        new mapboxgl.Popup()",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 80
                }
              }
            ],
            [
              {
                "text": "          .setLngLat(coordinates)",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 31
                }
              }
            ],
            [
              {
                "text": "          .setHTML(`",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "            <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "              <div class=\"mb-3\">",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "                <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                  <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "                <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "                  <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 59
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "              </div>",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "              <div class=\"flex flex-col space-y-0.5\">",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                ${popupContent}",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "              </div>",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "              ${properties?.DOI ? `",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "                <button class=\"mt-2 text-sm\">",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "                  <a href=\"${properties.DOI}\" ",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "                     target=\"_blank\" ",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "                     rel=\"noopener noreferrer\"",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "                     class=\"text-blue-600 hover:text-blue-800 hover:underline\">",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "                    View Research Paper",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 93
                }
              }
            ],
            [
              {
                "text": "                  </a>",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "                </button>",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "              ` : ''}",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 94
                }
              }
            ],
            [
              {
                "text": "            </div>",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "          `)",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "          .addTo(map);",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "      map.on('mouseenter', layerId, () => {",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "        map.getCanvas().style.cursor = 'pointer';",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "      map.on('mouseleave', layerId, () => {",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "        map.getCanvas().style.cursor = '';",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 80
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "  }, [getFilteredData]);",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 22
                }
              }
            ],
            [
              {
                "text": "  const loadMap = useCallback(() => {",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "    // Only initialize map if it hasn't been initialized yet",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current && mapContainerRef.current) {",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "      mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      mapRef.current = new mapboxgl.Map({",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "        container: mapContainerRef.current,",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "        style: 'mapbox://styles/mapbox/streets-v12',",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "        center: [-105.272148, 40.047050],",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        zoom: 2",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.on('load', () => {",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "        layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "  }, [layers, updateLayer]);",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "  // Initialize map only once",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "  useEffect(() => {",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    loadMap();",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "  }, [loadMap]); // Empty dependency array since we only want to initialize once",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "  // Update layers when they change",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "  useEffect(() => {",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "    if (mapRef.current?.loaded()) {",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "      layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "  }, [layers, updateLayer]);",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "  const toggleMapStyle = useCallback(() => {",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "    const satellite = 'mapbox://styles/mapbox/satellite-v9';",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "    const streets = 'mapbox://styles/mapbox/streets-v12';",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "    if (mapRef.current) {",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.setStyle(isStreetView ? satellite : streets);",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "      setIsStreetView(!isStreetView);",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 81
                }
              }
            ],
            [
              {
                "text": "      ",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      // Re-add data layers after style change",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.once('style.load', () => {",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "        layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "  }, [isStreetView, layers, updateLayer]);",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  return (",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "    <div className=\"relative w-full h-full\">",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "      <div ref={mapContainerRef} className=\"w-full h-full\" />",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "      ",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "      <div className=\"absolute top-16 right-4 flex flex-col gap-2\">",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "        {layers.map(layer => layer.visible && (",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "          <div key={layer.id} className=\"bg-white/30 dark:bg-black/40 backdrop-blur-md px-4 py-2 rounded-md shadow-md\">",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "            <p className=\"font-medium text-foreground flex items-center gap-2\">",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "              <span className=\"w-3 h-3 inline-block rounded-full\" style={{ backgroundColor: layer.color }}></span>",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "              {dataPointCount[layer.id]} points",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "            </p>",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "          </div>",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1,
                  "endLineNumber": 236,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "        ))}",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1,
                  "endLineNumber": 237,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "      </div>",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1,
                  "endLineNumber": 238,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1,
                  "endLineNumber": 239,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      <button",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1,
                  "endLineNumber": 240,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "        onClick={toggleMapStyle}",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1,
                  "endLineNumber": 241,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "        className=\"group absolute bottom-4 right-4 ml-auto bg-black/40 backdrop-blur-md p-2 rounded-md shadow-md hover:bg-deep-water transition-colors text-2xl\"",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1,
                  "endLineNumber": 242,
                  "endColumn": 62
                }
              }
            ],
            [
              {
                "text": "      >",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1,
                  "endLineNumber": 243,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "        <span className=\"transition-opacity duration-200 group-hover:opacity-0\">",
                "range": {
                  "startLineNumber": 244,
                  "startColumn": 1,
                  "endLineNumber": 244,
                  "endColumn": 68
                }
              }
            ],
            [
              {
                "text": "          {isStreetView ? '🚦' : '🛰️'}",
                "range": {
                  "startLineNumber": 245,
                  "startColumn": 1,
                  "endLineNumber": 245,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "        </span>",
                "range": {
                  "startLineNumber": 246,
                  "startColumn": 1,
                  "endLineNumber": 246,
                  "endColumn": 120
                }
              }
            ],
            [
              {
                "text": "        <span className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 transition-opacity duration-200 group-hover:opacity-100\">",
                "range": {
                  "startLineNumber": 247,
                  "startColumn": 1,
                  "endLineNumber": 247,
                  "endColumn": 80
                }
              }
            ],
            [
              {
                "text": "          {isStreetView ? '🛰️' : '🚦'}",
                "range": {
                  "startLineNumber": 248,
                  "startColumn": 1,
                  "endLineNumber": 248,
                  "endColumn": 115
                }
              }
            ],
            [
              {
                "text": "        </span>",
                "range": {
                  "startLineNumber": 249,
                  "startColumn": 1,
                  "endLineNumber": 249,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "      </button>",
                "range": {
                  "startLineNumber": 250,
                  "startColumn": 1,
                  "endLineNumber": 250,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "    </div>",
                "range": {
                  "startLineNumber": 251,
                  "startColumn": 1,
                  "endLineNumber": 251,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "  );",
                "range": {
                  "startLineNumber": 252,
                  "startColumn": 1,
                  "endLineNumber": 252,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 253,
                  "startColumn": 1,
                  "endLineNumber": 253,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 254,
                  "startColumn": 1,
                  "endLineNumber": 254,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 254,
                  "startColumn": 1,
                  "endLineNumber": 270,
                  "endColumn": 1
                }
              }
            ],
            []
          ],
          "done": true
        },
        {
          "value": "The changes I made now dynamically handle both polygon and point data. Instead of converting polygons to points, the code now checks the geometry type of the first feature and creates either:\n- A `fill` layer for polygons with a semi-transparent fill and white outline\n- A `circle` layer for point data (maintaining the existing point visualization)\n\nYou can control the appearance of the polygons by adjusting the `fill-opacity` and `fill-outline-color` properties in the paint configuration. Currently set to 0.6 opacity with white outlines, but feel free to let me know if you'd like to adjust these values for better visibility.\n\nLet me know if you want to make any adjustments to the polygon styling or if you need help with anything else!",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        }
      ],
      "responseId": "response_0c23c862-c602-4b3c-8599-396f64303fde",
      "result": {
        "timings": {
          "firstProgress": 36362,
          "totalElapsed": 86811
        },
        "metadata": {
          "edits": {
            "workingSet": [
              {
                "uri": {
                  "$mid": 1,
                  "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "scheme": "file"
                },
                "text": "'use client';\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { useData } from '@/contexts/DataContext';\n\nconst formatDate = (dateString: string) => {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n};\n\nconst formatMicroplasticsPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  const relevantData = {\n    'Method': properties.SAMPMETHOD,\n    'Density': properties.DENSTEXT,\n    'Unit': properties.UNIT,\n    'Organization': properties.ORG,\n    'Date': formatDate(properties.Date),\n    'Reference': properties.SHORTREF,\n    'DOI': properties.DOI\n  };\n\n  return Object.entries(relevantData)\n    .map(([key, value]) => value ? \n    `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">${key}:</span> ${value}\n    <p>\n    ` : '')\n    .join('');\n};\n\nconst formatNasaPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  return `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">Detection:</span> Floating Marine Debris\n    </p>\n  `;\n};\n\nconst formatNtuaPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  return `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">Detection:</span> Marine Floating Debris\n    </p>\n  `;\n};\n\nexport default function Map() {\n  const mapContainerRef = useRef<HTMLDivElement>(null);\n  const mapRef = useRef<mapboxgl.Map | null>(null);\n  const layersRef = useRef<Set<string>>(new Set());\n  const [isStreetView, setIsStreetView] = useState(true);\n  const { layers, getFilteredData, dataPointCount } = useData();\n  \n  const convertPolygonToPoint = useCallback((feature: GeoJSON.Feature) => {\n    if (feature.geometry.type === 'Polygon') {\n      const coordinates = feature.geometry.coordinates[0][0];\n      return {\n        ...feature,\n        geometry: {\n          type: 'Point',\n          coordinates: coordinates\n        }\n      };\n    }\n    return feature;\n  }, []);\n\n  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {\n    if (!mapRef.current) return;\n\n    const layerId = `${layer.id}-points`;\n    const map = mapRef.current;\n    const data = getFilteredData(layer.id);\n\n    // Convert polygon features to points\n    const pointData = {\n      type: 'FeatureCollection',\n      features: data.features.map(convertPolygonToPoint)\n    } as GeoJSON.FeatureCollection;\n\n    // Remove existing layer if it exists\n    if (layersRef.current.has(layerId) && map.getLayer(layerId)) {\n      map.removeLayer(layerId);\n    }\n\n    // Update existing source if it exists\n    if (map.getSource(layer.id)) {\n      (map.getSource(layer.id) as mapboxgl.GeoJSONSource).setData(pointData);\n    } else {\n      // Add new source if it doesn't exist\n      map.addSource(layer.id, {\n        type: 'geojson',\n        data: pointData\n      });\n    }\n\n    // Add layer if it's meant to be visible\n    if (layer.visible) {\n      map.addLayer({\n        id: layerId,\n        type: 'fill',\n        source: layer.id,\n        paint: {\n          'circle-radius': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            0, layer.id === 'nasa' ? 4 : 3,\n            8, layer.id === 'nasa' ? 8 : 6\n          ],\n          'circle-color': layer.color,\n          'circle-opacity': 0.8,\n          'circle-stroke-width': 2,\n          'circle-stroke-color': '#ffffff',\n          'circle-stroke-opacity': 1\n        }\n      });\n\n      layersRef.current.add(layerId);\n\n      // Add event listeners\n      map.on('click', layerId, (e) => {\n        const feature = e.features?.[0];\n        if (!feature) return;\n\n        const getCoordinates = (feature: GeoJSON.Feature): [number, number] => {\n          if (feature.geometry.type === 'Point') {\n            const [lng, lat] = (feature.geometry as GeoJSON.Point).coordinates;\n            return [lng, lat];\n          }\n          return [e.lngLat.lng, e.lngLat.lat];\n        };\n\n        const coordinates = getCoordinates(feature);\n          \n        const properties = feature.properties;\n        const popupContent = layer.id === 'microplastics' \n          ? formatMicroplasticsPopup(properties)\n          : layer.id === 'nasa'\n          ? formatNasaPopup(properties)\n          : formatNtuaPopup(properties);\n\n        new mapboxgl.Popup()\n          .setLngLat(coordinates)\n          .setHTML(`\n            <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">\n              <div class=\"mb-3\">\n                <div class=\"mb-1\">\n                  <span class=\"font-semibold\">Latitude:</span> ${coordinates[1].toFixed(4)}°\n                </div>\n                <div class=\"mb-1\">\n                  <span class=\"font-semibold\">Longitude:</span> ${coordinates[0].toFixed(4)}°\n                </div>\n              </div>\n              <div class=\"flex flex-col space-y-0.5\">\n                ${popupContent}\n              </div>\n              ${properties?.DOI ? `\n                <button class=\"mt-2 text-sm\">\n                  <a href=\"${properties.DOI}\" \n                     target=\"_blank\" \n                     rel=\"noopener noreferrer\"\n                     class=\"text-blue-600 hover:text-blue-800 hover:underline\">\n                    View Research Paper\n                  </a>\n                </button>\n              ` : ''}\n            </div>\n          `)\n          .addTo(map);\n      });\n\n      map.on('mouseenter', layerId, () => {\n        map.getCanvas().style.cursor = 'pointer';\n      });\n\n      map.on('mouseleave', layerId, () => {\n        map.getCanvas().style.cursor = '';\n      });\n    }\n  }, [convertPolygonToPoint, getFilteredData]);\n\n  const loadMap = useCallback(() => {\n    // Only initialize map if it hasn't been initialized yet\n    if (!mapRef.current && mapContainerRef.current) {\n      mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;\n\n      mapRef.current = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mapbox/streets-v12',\n        center: [-105.272148, 40.047050],\n        zoom: 2\n      });\n\n      mapRef.current.on('load', () => {\n        layers.forEach(updateLayer);\n      });\n    }\n  }, [layers, updateLayer]);\n\n  // Initialize map only once\n  useEffect(() => {\n    loadMap();\n  }, [loadMap]); // Empty dependency array since we only want to initialize once\n\n  // Update layers when they change\n  useEffect(() => {\n    if (mapRef.current?.loaded()) {\n      layers.forEach(updateLayer);\n    }\n  }, [layers, updateLayer]);\n\n  const toggleMapStyle = useCallback(() => {\n    const satellite = 'mapbox://styles/mapbox/satellite-v9';\n    const streets = 'mapbox://styles/mapbox/streets-v12';\n    \n    if (mapRef.current) {\n      mapRef.current.setStyle(isStreetView ? satellite : streets);\n      setIsStreetView(!isStreetView);\n      \n      // Re-add data layers after style change\n      mapRef.current.once('style.load', () => {\n        layers.forEach(updateLayer);\n      });\n    }\n  }, [isStreetView, layers, updateLayer]);\n\n  return (\n    <div className=\"relative w-full h-full\">\n      <div ref={mapContainerRef} className=\"w-full h-full\" />\n      \n      <div className=\"absolute top-16 right-4 flex flex-col gap-2\">\n        {layers.map(layer => layer.visible && (\n          <div key={layer.id} className=\"bg-white/30 dark:bg-black/40 backdrop-blur-md px-4 py-2 rounded-md shadow-md\">\n            <p className=\"font-medium text-foreground flex items-center gap-2\">\n              <span className=\"w-3 h-3 inline-block rounded-full\" style={{ backgroundColor: layer.color }}></span>\n              {dataPointCount[layer.id]} points\n            </p>\n          </div>\n        ))}\n      </div>\n\n      <button\n        onClick={toggleMapStyle}\n        className=\"group absolute bottom-4 right-4 ml-auto bg-black/40 backdrop-blur-md p-2 rounded-md shadow-md hover:bg-deep-water transition-colors text-2xl\"\n      >\n        <span className=\"transition-opacity duration-200 group-hover:opacity-0\">\n          {isStreetView ? '🚦' : '🛰️'}\n        </span>\n        <span className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 transition-opacity duration-200 group-hover:opacity-100\">\n          {isStreetView ? '🛰️' : '🚦'}\n        </span>\n      </button>\n    </div>\n  );\n}\n",
                "languageId": "typescriptreact",
                "version": 19,
                "state": 0
              }
            ],
            "promptInstructions": [],
            "request": "Above is the result of calling one or more tools. The user can see the results of the edit_file tool, so you don't need to explain them. But the user can't see the results of other tools, so you should explain them to the user if referencing them in your answer. Continue from where you left off without repeating yourself.",
            "response": "The changes I made now dynamically handle both polygon and point data. Instead of converting polygons to points, the code now checks the geometry type of the first feature and creates either:\n- A `fill` layer for polygons with a semi-transparent fill and white outline\n- A `circle` layer for point data (maintaining the existing point visualization)\n\nYou can control the appearance of the polygons by adjusting the `fill-opacity` and `fill-outline-color` properties in the paint configuration. Currently set to 0.6 opacity with white outlines, but feel free to let me know if you'd like to adjust these values for better visibility.\n\nLet me know if you want to make any adjustments to the polygon styling or if you need help with anything else!"
          },
          "codeBlocks": [],
          "messages": [
            {
              "role": "user",
              "content": "if the data source uses polygons, not lat long, can you use a fill layer like this example\n\nhttps://docs.mapbox.com/mapbox-gl-js/example/geojson-layer-in-slot/"
            },
            {
              "role": "assistant",
              "content": "The changes I made now dynamically handle both polygon and point data. Instead of converting polygons to points, the code now checks the geometry type of the first feature and creates either:\n- A `fill` layer for polygons with a semi-transparent fill and white outline\n- A `circle` layer for point data (maintaining the existing point visualization)\n\nYou can control the appearance of the polygons by adjusting the `fill-opacity` and `fill-outline-color` properties in the paint configuration. Currently set to 0.6 opacity with white outlines, but feel free to let me know if you'd like to adjust these values for better visibility.\n\nLet me know if you want to make any adjustments to the polygon styling or if you need help with anything else!"
            }
          ],
          "toolCallRounds": [
            {
              "toolCalls": [
                {
                  "name": "edit_file",
                  "arguments": "{\"filePath\": \"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\", \"explanation\": \"Update the Map component to use fill layers for polygon data instead of converting to points\", \"code\": \"// ...existing code...\\n\\nexport default function Map() {\\n  const mapContainerRef = useRef<HTMLDivElement>(null);\\n  const mapRef = useRef<mapboxgl.Map | null>(null);\\n  const layersRef = useRef<Set<string>>(new Set());\\n  const [isStreetView, setIsStreetView] = useState(true);\\n  const { layers, getFilteredData, dataPointCount } = useData();\\n\\n  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {\\n    if (!mapRef.current) return;\\n\\n    const layerId = `${layer.id}-layer`;\\n    const map = mapRef.current;\\n    const data = getFilteredData(layer.id);\\n\\n    // Remove existing layer if it exists\\n    if (layersRef.current.has(layerId) && map.getLayer(layerId)) {\\n      map.removeLayer(layerId);\\n    }\\n\\n    // Update existing source if it exists\\n    if (map.getSource(layer.id)) {\\n      (map.getSource(layer.id) as mapboxgl.GeoJSONSource).setData(data);\\n    } else {\\n      // Add new source if it doesn't exist\\n      map.addSource(layer.id, {\\n        type: 'geojson',\\n        data: data\\n      });\\n    }\\n\\n    // Add layer if it's meant to be visible\\n    if (layer.visible) {\\n      const layerConfig: mapboxgl.AnyLayer = {\\n        id: layerId,\\n        source: layer.id,\\n        paint: {}\\n      };\\n\\n      // Check if the first feature is a polygon or point to determine layer type\\n      const firstFeature = data.features[0];\\n      if (firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon') {\\n        layerConfig.type = 'fill';\\n        layerConfig.paint = {\\n          'fill-color': layer.color,\\n          'fill-opacity': 0.6,\\n          'fill-outline-color': '#ffffff'\\n        };\\n      } else {\\n        layerConfig.type = 'circle';\\n        layerConfig.paint = {\\n          'circle-radius': [\\n            'interpolate',\\n            ['linear'],\\n            ['zoom'],\\n            0, layer.id === 'nasa' ? 4 : 3,\\n            8, layer.id === 'nasa' ? 8 : 6\\n          ],\\n          'circle-color': layer.color,\\n          'circle-opacity': 0.8,\\n          'circle-stroke-width': 2,\\n          'circle-stroke-color': '#ffffff',\\n          'circle-stroke-opacity': 1\\n        };\\n      }\\n\\n      map.addLayer(layerConfig);\\n      layersRef.current.add(layerId);\\n\\n      // Add event listeners\\n      map.on('click', layerId, (e) => {\\n        const feature = e.features?.[0];\\n        if (!feature) return;\\n\\n        const coordinates = e.lngLat;\\n        const properties = feature.properties;\\n        const popupContent = layer.id === 'microplastics' \\n          ? formatMicroplasticsPopup(properties)\\n          : layer.id === 'nasa'\\n          ? formatNasaPopup(properties)\\n          : formatNtuaPopup(properties);\\n\\n        new mapboxgl.Popup()\\n          .setLngLat(coordinates)\\n          .setHTML(`\\n            <div class=\\\"flex flex-col text-deep-water p-2 max-w-sm\\\">\\n              <div class=\\\"mb-3\\\">\\n                <div class=\\\"mb-1\\\">\\n                  <span class=\\\"font-semibold\\\">Latitude:</span> ${coordinates.lat.toFixed(4)}°\\n                </div>\\n                <div class=\\\"mb-1\\\">\\n                  <span class=\\\"font-semibold\\\">Longitude:</span> ${coordinates.lng.toFixed(4)}°\\n                </div>\\n              </div>\\n              <div class=\\\"flex flex-col space-y-0.5\\\">\\n                ${popupContent}\\n              </div>\\n              ${properties?.DOI ? `\\n                <button class=\\\"mt-2 text-sm\\\">\\n                  <a href=\\\"${properties.DOI}\\\" \\n                     target=\\\"_blank\\\" \\n                     rel=\\\"noopener noreferrer\\\"\\n                     class=\\\"text-blue-600 hover:text-blue-800 hover:underline\\\">\\n                    View Research Paper\\n                  </a>\\n                </button>\\n              ` : ''}\\n            </div>\\n          `)\\n          .addTo(map);\\n      });\\n\\n      map.on('mouseenter', layerId, () => {\\n        map.getCanvas().style.cursor = 'pointer';\\n      });\\n\\n      map.on('mouseleave', layerId, () => {\\n        map.getCanvas().style.cursor = '';\\n      });\\n    }\\n  }, [getFilteredData]);\\n\\n  // ...existing code...\"}",
                  "id": "toolu_bdrk_014LHoLeTmEYL6CcppHkp8aJ"
                }
              ],
              "toolInputRetry": 0,
              "response": "I'll help modify the Map component to properly handle polygon data using a fill layer instead of converting polygons to points. Looking at your code, I notice that there's currently a `convertPolygonToPoint` function that's transforming polygon data into points, which we'll need to change.\n\nLet me modify the Map.tsx file to handle polygons with a fill layer:"
            },
            {
              "toolCalls": [],
              "toolInputRetry": 0,
              "response": "The changes I made now dynamically handle both polygon and point data. Instead of converting polygons to points, the code now checks the geometry type of the first feature and creates either:\n- A `fill` layer for polygons with a semi-transparent fill and white outline\n- A `circle` layer for point data (maintaining the existing point visualization)\n\nYou can control the appearance of the polygons by adjusting the `fill-opacity` and `fill-outline-color` properties in the paint configuration. Currently set to 0.6 opacity with white outlines, but feel free to let me know if you'd like to adjust these values for better visibility.\n\nLet me know if you want to make any adjustments to the polygon styling or if you need help with anything else!"
            }
          ],
          "toolCallResults": {
            "toolu_bdrk_014LHoLeTmEYL6CcppHkp8aJ": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            }
          },
          "modelMessageId": "1987e2c4-d388-4a4c-a2b6-92d2a0a79bbf",
          "responseId": "849c3fef-14c9-49be-9996-cfe087b1528f",
          "sessionId": "83938747-4922-4018-9542-110893bca4bc",
          "agentId": "github.copilot.editsAgent"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editsAgent",
        "description": "Edit files in your workspace in agent mode (Experimental)",
        "when": "config.chat.agent.enabled && !chatAgentModeDisallowed",
        "metadata": {
          "themeIcon": {
            "id": "tools"
          },
          "hasFollowups": false,
          "supportIssueReporting": false
        },
        "name": "agent",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "isToolsAgent": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "workingSet": [
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "scheme": "file"
        }
      ],
      "contentReferences": [],
      "codeCitations": [],
      "timestamp": 1739750549774
    },
    {
      "requestId": "request_c81f2d6c-0787-4cbb-8937-2543e4427968",
      "message": {
        "text": "Type '{ id: string; source: string; paint: {}; }' is not assignable to type 'LayerSpecification'.\n  Type '{ id: string; source: string; paint: {}; }' is not assignable to type 'FillLayerSpecification | LineLayerSpecification | SymbolLayerSpecification | CircleLayerSpecification | ... 5 more ... | ModelLayerSpecification'.\n    Property '\"type\"' is missing in type '{ id: string; source: string; paint: {}; }' but required in type 'ModelLayerSpecification'.",
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 457
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 3,
              "endColumn": 134
            },
            "text": "Type '{ id: string; source: string; paint: {}; }' is not assignable to type 'LayerSpecification'.\n  Type '{ id: string; source: string; paint: {}; }' is not assignable to type 'FillLayerSpecification | LineLayerSpecification | SymbolLayerSpecification | CircleLayerSpecification | ... 5 more ... | ModelLayerSpecification'.\n    Property '\"type\"' is missing in type '{ id: string; source: string; paint: {}; }' but required in type 'ModelLayerSpecification'.",
            "kind": "text"
          }
        ]
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "scheme": "file"
            },
            "id": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "name": "Map.tsx",
            "isFile": true
          }
        ]
      },
      "response": [
        {
          "value": "I'll fix the TypeScript error by properly typing the layerConfig object. The error occurs because we need to specify the 'type' property before setting the paint properties.",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "kind": "undoStop",
          "id": "7f4b54b9-ec9e-4058-af3f-da6891b83d82"
        },
        {
          "value": "\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "scheme": "file"
          }
        },
        {
          "value": "// ...existing code...\n\n    // Add layer if it's meant to be visible\n    if (layer.visible) {\n      // Check if the first feature is a polygon or point to determine layer type\n      const firstFeature = data.features[0];\n      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';\n\n      const layerConfig: mapboxgl.LayerSpecification = isPolygon ? {\n        id: layerId,\n        type: 'fill',\n        source: layer.id,\n        paint: {\n          'fill-color': layer.color,\n          'fill-opacity': 0.6,\n          'fill-outline-color': '#ffffff'\n        }\n      } : {\n        id: layerId,\n        type: 'circle',\n        source: layer.id,\n        paint: {\n          'circle-radius': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            0, layer.id === 'nasa' ? 4 : 3,\n            8, layer.id === 'nasa' ? 8 : 6\n          ],\n          'circle-color': layer.color,\n          'circle-opacity': 0.8,\n          'circle-stroke-width': 2,\n          'circle-stroke-color': '#ffffff',\n          'circle-stroke-opacity': 1\n        }\n      };\n\n      map.addLayer(layerConfig);\n      layersRef.current.add(layerId);\n\n      // ...existing code...\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "'use client';",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "import { useCallback, useEffect, useRef, useState } from 'react';",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 66
                }
              }
            ],
            [
              {
                "text": "import mapboxgl from 'mapbox-gl';",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "import 'mapbox-gl/dist/mapbox-gl.css';",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "import { useData } from '@/contexts/DataContext';",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatDate = (dateString: string) => {",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "  return new Date(dateString).toLocaleDateString('en-US', {",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 60
                }
              }
            ],
            [
              {
                "text": "    year: 'numeric',",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "    month: 'long',",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "    day: 'numeric'",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "  });",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatMicroplasticsPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 78
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  const relevantData = {",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "    'Method': properties.SAMPMETHOD,",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "    'Density': properties.DENSTEXT,",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Unit': properties.UNIT,",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "    'Organization': properties.ORG,",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Date': formatDate(properties.Date),",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "    'Reference': properties.SHORTREF,",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    'DOI': properties.DOI",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "  };",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  return Object.entries(relevantData)",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    .map(([key, value]) => value ? ",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    `",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">${key}:</span> ${value}",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "    <p>",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "    ` : '')",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "    .join('');",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatNasaPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  return `",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">Detection:</span> Floating Marine Debris",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "    </p>",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "  `;",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatNtuaPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  return `",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">Detection:</span> Marine Floating Debris",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "    </p>",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "  `;",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "export default function Map() {",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "  const mapContainerRef = useRef<HTMLDivElement>(null);",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "  const mapRef = useRef<mapboxgl.Map | null>(null);",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "  const layersRef = useRef<Set<string>>(new Set());",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "  const [isStreetView, setIsStreetView] = useState(true);",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "  const { layers, getFilteredData, dataPointCount } = useData();",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 65
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 96
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current) return;",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    const layerId = `${layer.id}-layer`;",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "    const map = mapRef.current;",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "    const data = getFilteredData(layer.id);",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    // Remove existing layer if it exists",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "    if (layersRef.current.has(layerId) && map.getLayer(layerId)) {",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "      map.removeLayer(layerId);",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    // Update existing source if it exists",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "    if (map.getSource(layer.id)) {",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "      (map.getSource(layer.id) as mapboxgl.GeoJSONSource).setData(data);",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 73
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "      // Add new source if it doesn't exist",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "      map.addSource(layer.id, {",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "        type: 'geojson',",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "        data: data",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    // Add layer if it's meant to be visible",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "    if (layer.visible) {",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "      // Check if the first feature is a polygon or point to determine layer type",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 57
                }
              }
            ],
            [
              {
                "text": "      const firstFeature = data.features[0];",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 18
                }
              }
            ],
            [
              {
                "text": "      const layerConfig: mapboxgl.LayerSpecification = isPolygon ? {",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "        id: layerId,",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        type: 'fill',",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 82
                }
              }
            ],
            [
              {
                "text": "        source: layer.id,",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "        paint: {",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 105
                }
              }
            ],
            [
              {
                "text": "          'fill-color': layer.color,",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "          'fill-opacity': 0.6,",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "          'fill-outline-color': '#ffffff'",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 31
                }
              }
            ],
            [
              {
                "text": "      } : {",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "        id: layerId,",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "        type: 'circle',",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "        source: layer.id,",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "        paint: {",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "          'circle-radius': [",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "            'interpolate',",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "            ['linear'],",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "            ['zoom'],",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 22
                }
              }
            ],
            [
              {
                "text": "            0, layer.id === 'nasa' ? 4 : 3,",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "            8, layer.id === 'nasa' ? 8 : 6",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "          ],",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "          'circle-color': layer.color,",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "          'circle-opacity': 0.8,",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "          'circle-stroke-width': 2,",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "          'circle-stroke-color': '#ffffff',",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "          'circle-stroke-opacity': 1",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "      };",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      map.addLayer(layerConfig);",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "      layersRef.current.add(layerId);",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      // Add event listeners",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "      map.on('click', layerId, (e) => {",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "        const feature = e.features?.[0];",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "        if (!feature) return;",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        const coordinates = e.lngLat;",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "        const properties = feature.properties;",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "        const popupContent = layer.id === 'microplastics' ",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 59
                }
              }
            ],
            [
              {
                "text": "          ? formatMicroplasticsPopup(properties)",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "          : layer.id === 'nasa'",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "          ? formatNasaPopup(properties)",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "          : formatNtuaPopup(properties);",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        new mapboxgl.Popup()",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "          .setLngLat(coordinates)",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "          .setHTML(`",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "            <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "              <div class=\"mb-3\">",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "                <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "                  <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 94
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "                <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "                  <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 95
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "              </div>",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "              <div class=\"flex flex-col space-y-0.5\">",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "                ${popupContent}",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "              </div>",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "              ${properties?.DOI ? `",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "                <button class=\"mt-2 text-sm\">",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "                  <a href=\"${properties.DOI}\" ",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "                     target=\"_blank\" ",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "                     rel=\"noopener noreferrer\"",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "                     class=\"text-blue-600 hover:text-blue-800 hover:underline\">",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 80
                }
              }
            ],
            [
              {
                "text": "                    View Research Paper",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                  </a>",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "                </button>",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "              ` : ''}",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 22
                }
              }
            ],
            [
              {
                "text": "            </div>",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "          `)",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "          .addTo(map);",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      map.on('mouseenter', layerId, () => {",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "        map.getCanvas().style.cursor = 'pointer';",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      map.on('mouseleave', layerId, () => {",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "        map.getCanvas().style.cursor = '';",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "  }, [getFilteredData]);",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  const loadMap = useCallback(() => {",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    // Only initialize map if it hasn't been initialized yet",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current && mapContainerRef.current) {",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "      mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      mapRef.current = new mapboxgl.Map({",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "        container: mapContainerRef.current,",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "        style: 'mapbox://styles/mapbox/streets-v12',",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "        center: [-105.272148, 40.047050],",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "        zoom: 2",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.on('load', () => {",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "        layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "  }, [layers, updateLayer]);",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  // Initialize map only once",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  useEffect(() => {",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "    loadMap();",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "  }, [loadMap]); // Empty dependency array since we only want to initialize once",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 81
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  // Update layers when they change",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "  useEffect(() => {",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "    if (mapRef.current?.loaded()) {",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "      layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "  }, [layers, updateLayer]);",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  const toggleMapStyle = useCallback(() => {",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "    const satellite = 'mapbox://styles/mapbox/satellite-v9';",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "    const streets = 'mapbox://styles/mapbox/streets-v12';",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "    if (mapRef.current) {",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.setStyle(isStreetView ? satellite : streets);",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "      setIsStreetView(!isStreetView);",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "      ",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "      // Re-add data layers after style change",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.once('style.load', () => {",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "        layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "  }, [isStreetView, layers, updateLayer]);",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  return (",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <div className=\"relative w-full h-full\">",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "      <div ref={mapContainerRef} className=\"w-full h-full\" />",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 62
                }
              }
            ],
            [
              {
                "text": "      ",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "      <div className=\"absolute top-16 right-4 flex flex-col gap-2\">",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 68
                }
              }
            ],
            [
              {
                "text": "        {layers.map(layer => layer.visible && (",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "          <div key={layer.id} className=\"bg-white/30 dark:bg-black/40 backdrop-blur-md px-4 py-2 rounded-md shadow-md\">",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 120
                }
              }
            ],
            [
              {
                "text": "            <p className=\"font-medium text-foreground flex items-center gap-2\">",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 80
                }
              }
            ],
            [
              {
                "text": "              <span className=\"w-3 h-3 inline-block rounded-full\" style={{ backgroundColor: layer.color }}></span>",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 115
                }
              }
            ],
            [
              {
                "text": "              {dataPointCount[layer.id]} points",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "            </p>",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "          </div>",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1,
                  "endLineNumber": 236,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "        ))}",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1,
                  "endLineNumber": 237,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "      </div>",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1,
                  "endLineNumber": 238,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1,
                  "endLineNumber": 239,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      <button",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1,
                  "endLineNumber": 240,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "        onClick={toggleMapStyle}",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1,
                  "endLineNumber": 241,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "        className=\"group absolute bottom-4 right-4 ml-auto bg-black/40 backdrop-blur-md p-2 rounded-md shadow-md hover:bg-deep-water transition-colors text-2xl\"",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1,
                  "endLineNumber": 242,
                  "endColumn": 161
                }
              }
            ],
            [
              {
                "text": "      >",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1,
                  "endLineNumber": 243,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "        <span className=\"transition-opacity duration-200 group-hover:opacity-0\">",
                "range": {
                  "startLineNumber": 244,
                  "startColumn": 1,
                  "endLineNumber": 244,
                  "endColumn": 81
                }
              }
            ],
            [
              {
                "text": "          {isStreetView ? '🚦' : '🛰️'}",
                "range": {
                  "startLineNumber": 245,
                  "startColumn": 1,
                  "endLineNumber": 245,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "        </span>",
                "range": {
                  "startLineNumber": 246,
                  "startColumn": 1,
                  "endLineNumber": 246,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "        <span className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 transition-opacity duration-200 group-hover:opacity-100\">",
                "range": {
                  "startLineNumber": 247,
                  "startColumn": 1,
                  "endLineNumber": 247,
                  "endColumn": 153
                }
              }
            ],
            [
              {
                "text": "          {isStreetView ? '🛰️' : '🚦'}",
                "range": {
                  "startLineNumber": 248,
                  "startColumn": 1,
                  "endLineNumber": 248,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "        </span>",
                "range": {
                  "startLineNumber": 249,
                  "startColumn": 1,
                  "endLineNumber": 249,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "      </button>",
                "range": {
                  "startLineNumber": 250,
                  "startColumn": 1,
                  "endLineNumber": 250,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "    </div>",
                "range": {
                  "startLineNumber": 251,
                  "startColumn": 1,
                  "endLineNumber": 251,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "  );",
                "range": {
                  "startLineNumber": 252,
                  "startColumn": 1,
                  "endLineNumber": 252,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 253,
                  "startColumn": 1,
                  "endLineNumber": 253,
                  "endColumn": 2
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 254,
                  "startColumn": 1,
                  "endLineNumber": 254,
                  "endColumn": 1
                }
              }
            ],
            []
          ],
          "done": true
        },
        {
          "value": "Let me validate that the TypeScript error has been fixed.",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Checking `src/components/Map.tsx`",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "pastTenseMessage": {
            "value": "Checked `src/components/Map.tsx`, no problems found",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "isConfirmed": true,
          "isComplete": true
        },
        {
          "value": "I've checked the errors and there are no TypeScript errors remaining in the Map.tsx file. The polygon layers should now work correctly with the proper typing for the layer configuration. The changes ensure that both polygon (fill) and point (circle) layers are properly typed and will work with Mapbox GL JS's type system.",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        }
      ],
      "responseId": "response_25378ae4-dea0-47f4-aef8-3312927f3623",
      "result": {
        "timings": {
          "firstProgress": 13545,
          "totalElapsed": 31971
        },
        "metadata": {
          "edits": {
            "workingSet": [
              {
                "uri": {
                  "$mid": 1,
                  "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "scheme": "file"
                },
                "text": "'use client';\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { useData } from '@/contexts/DataContext';\n\nconst formatDate = (dateString: string) => {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n};\n\nconst formatMicroplasticsPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  const relevantData = {\n    'Method': properties.SAMPMETHOD,\n    'Density': properties.DENSTEXT,\n    'Unit': properties.UNIT,\n    'Organization': properties.ORG,\n    'Date': formatDate(properties.Date),\n    'Reference': properties.SHORTREF,\n    'DOI': properties.DOI\n  };\n\n  return Object.entries(relevantData)\n    .map(([key, value]) => value ? \n    `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">${key}:</span> ${value}\n    <p>\n    ` : '')\n    .join('');\n};\n\nconst formatNasaPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  return `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">Detection:</span> Floating Marine Debris\n    </p>\n  `;\n};\n\nconst formatNtuaPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  return `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">Detection:</span> Marine Floating Debris\n    </p>\n  `;\n};\n\nexport default function Map() {\n  const mapContainerRef = useRef<HTMLDivElement>(null);\n  const mapRef = useRef<mapboxgl.Map | null>(null);\n  const layersRef = useRef<Set<string>>(new Set());\n  const [isStreetView, setIsStreetView] = useState(true);\n  const { layers, getFilteredData, dataPointCount } = useData();\n\n  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {\n    if (!mapRef.current) return;\n\n    const layerId = `${layer.id}-layer`;\n    const map = mapRef.current;\n    const data = getFilteredData(layer.id);\n\n    // Remove existing layer if it exists\n    if (layersRef.current.has(layerId) && map.getLayer(layerId)) {\n      map.removeLayer(layerId);\n    }\n\n    // Update existing source if it exists\n    if (map.getSource(layer.id)) {\n      (map.getSource(layer.id) as mapboxgl.GeoJSONSource).setData(data);\n    } else {\n      // Add new source if it doesn't exist\n      map.addSource(layer.id, {\n        type: 'geojson',\n        data: data\n      });\n    }\n\n    // Add layer if it's meant to be visible\n    if (layer.visible) {\n      // Check if the first feature is a polygon or point to determine layer type\n      const firstFeature = data.features[0];\n      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';\n\n      const layerConfig: mapboxgl.LayerSpecification = isPolygon ? {\n        id: layerId,\n        type: 'fill',\n        source: layer.id,\n        paint: {\n          'fill-color': layer.color,\n          'fill-opacity': 0.6,\n          'fill-outline-color': '#ffffff'\n        }\n      } : {\n        id: layerId,\n        type: 'circle',\n        source: layer.id,\n        paint: {\n          'circle-radius': [\n            'interpolate',\n            ['linear'],\n            ['zoom'],\n            0, layer.id === 'nasa' ? 4 : 3,\n            8, layer.id === 'nasa' ? 8 : 6\n          ],\n          'circle-color': layer.color,\n          'circle-opacity': 0.8,\n          'circle-stroke-width': 2,\n          'circle-stroke-color': '#ffffff',\n          'circle-stroke-opacity': 1\n        }\n      };\n\n      map.addLayer(layerConfig);\n      layersRef.current.add(layerId);\n\n      // Add event listeners\n      map.on('click', layerId, (e) => {\n        const feature = e.features?.[0];\n        if (!feature) return;\n\n        const coordinates = e.lngLat;\n        const properties = feature.properties;\n        const popupContent = layer.id === 'microplastics' \n          ? formatMicroplasticsPopup(properties)\n          : layer.id === 'nasa'\n          ? formatNasaPopup(properties)\n          : formatNtuaPopup(properties);\n\n        new mapboxgl.Popup()\n          .setLngLat(coordinates)\n          .setHTML(`\n            <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">\n              <div class=\"mb-3\">\n                <div class=\"mb-1\">\n                  <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°\n                </div>\n                <div class=\"mb-1\">\n                  <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°\n                </div>\n              </div>\n              <div class=\"flex flex-col space-y-0.5\">\n                ${popupContent}\n              </div>\n              ${properties?.DOI ? `\n                <button class=\"mt-2 text-sm\">\n                  <a href=\"${properties.DOI}\" \n                     target=\"_blank\" \n                     rel=\"noopener noreferrer\"\n                     class=\"text-blue-600 hover:text-blue-800 hover:underline\">\n                    View Research Paper\n                  </a>\n                </button>\n              ` : ''}\n            </div>\n          `)\n          .addTo(map);\n      });\n\n      map.on('mouseenter', layerId, () => {\n        map.getCanvas().style.cursor = 'pointer';\n      });\n\n      map.on('mouseleave', layerId, () => {\n        map.getCanvas().style.cursor = '';\n      });\n    }\n  }, [getFilteredData]);\n\n  const loadMap = useCallback(() => {\n    // Only initialize map if it hasn't been initialized yet\n    if (!mapRef.current && mapContainerRef.current) {\n      mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;\n\n      mapRef.current = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mapbox/streets-v12',\n        center: [-105.272148, 40.047050],\n        zoom: 2\n      });\n\n      mapRef.current.on('load', () => {\n        layers.forEach(updateLayer);\n      });\n    }\n  }, [layers, updateLayer]);\n\n  // Initialize map only once\n  useEffect(() => {\n    loadMap();\n  }, [loadMap]); // Empty dependency array since we only want to initialize once\n\n  // Update layers when they change\n  useEffect(() => {\n    if (mapRef.current?.loaded()) {\n      layers.forEach(updateLayer);\n    }\n  }, [layers, updateLayer]);\n\n  const toggleMapStyle = useCallback(() => {\n    const satellite = 'mapbox://styles/mapbox/satellite-v9';\n    const streets = 'mapbox://styles/mapbox/streets-v12';\n    \n    if (mapRef.current) {\n      mapRef.current.setStyle(isStreetView ? satellite : streets);\n      setIsStreetView(!isStreetView);\n      \n      // Re-add data layers after style change\n      mapRef.current.once('style.load', () => {\n        layers.forEach(updateLayer);\n      });\n    }\n  }, [isStreetView, layers, updateLayer]);\n\n  return (\n    <div className=\"relative w-full h-full\">\n      <div ref={mapContainerRef} className=\"w-full h-full\" />\n      \n      <div className=\"absolute top-16 right-4 flex flex-col gap-2\">\n        {layers.map(layer => layer.visible && (\n          <div key={layer.id} className=\"bg-white/30 dark:bg-black/40 backdrop-blur-md px-4 py-2 rounded-md shadow-md\">\n            <p className=\"font-medium text-foreground flex items-center gap-2\">\n              <span className=\"w-3 h-3 inline-block rounded-full\" style={{ backgroundColor: layer.color }}></span>\n              {dataPointCount[layer.id]} points\n            </p>\n          </div>\n        ))}\n      </div>\n\n      <button\n        onClick={toggleMapStyle}\n        className=\"group absolute bottom-4 right-4 ml-auto bg-black/40 backdrop-blur-md p-2 rounded-md shadow-md hover:bg-deep-water transition-colors text-2xl\"\n      >\n        <span className=\"transition-opacity duration-200 group-hover:opacity-0\">\n          {isStreetView ? '🚦' : '🛰️'}\n        </span>\n        <span className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 transition-opacity duration-200 group-hover:opacity-100\">\n          {isStreetView ? '🛰️' : '🚦'}\n        </span>\n      </button>\n    </div>\n  );\n}\n",
                "languageId": "typescriptreact",
                "version": 527,
                "state": 2
              }
            ],
            "promptInstructions": [],
            "request": "Above is the result of calling one or more tools. The user can see the results of the edit_file tool, so you don't need to explain them. But the user can't see the results of other tools, so you should explain them to the user if referencing them in your answer. Continue from where you left off without repeating yourself.",
            "response": "I've checked the errors and there are no TypeScript errors remaining in the Map.tsx file. The polygon layers should now work correctly with the proper typing for the layer configuration. The changes ensure that both polygon (fill) and point (circle) layers are properly typed and will work with Mapbox GL JS's type system."
          },
          "codeBlocks": [],
          "messages": [
            {
              "role": "user",
              "content": "Type '{ id: string; source: string; paint: {}; }' is not assignable to type 'LayerSpecification'.\n  Type '{ id: string; source: string; paint: {}; }' is not assignable to type 'FillLayerSpecification | LineLayerSpecification | SymbolLayerSpecification | CircleLayerSpecification | ... 5 more ... | ModelLayerSpecification'.\n    Property '\"type\"' is missing in type '{ id: string; source: string; paint: {}; }' but required in type 'ModelLayerSpecification'."
            },
            {
              "role": "assistant",
              "content": "I've checked the errors and there are no TypeScript errors remaining in the Map.tsx file. The polygon layers should now work correctly with the proper typing for the layer configuration. The changes ensure that both polygon (fill) and point (circle) layers are properly typed and will work with Mapbox GL JS's type system."
            }
          ],
          "toolCallRounds": [
            {
              "toolCalls": [
                {
                  "name": "edit_file",
                  "arguments": "{\"explanation\": \"Fix TypeScript type error by properly typing the layerConfig object with required 'type' property\", \"filePath\": \"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\", \"code\": \"// ...existing code...\\n\\n    // Add layer if it's meant to be visible\\n    if (layer.visible) {\\n      // Check if the first feature is a polygon or point to determine layer type\\n      const firstFeature = data.features[0];\\n      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';\\n\\n      const layerConfig: mapboxgl.LayerSpecification = isPolygon ? {\\n        id: layerId,\\n        type: 'fill',\\n        source: layer.id,\\n        paint: {\\n          'fill-color': layer.color,\\n          'fill-opacity': 0.6,\\n          'fill-outline-color': '#ffffff'\\n        }\\n      } : {\\n        id: layerId,\\n        type: 'circle',\\n        source: layer.id,\\n        paint: {\\n          'circle-radius': [\\n            'interpolate',\\n            ['linear'],\\n            ['zoom'],\\n            0, layer.id === 'nasa' ? 4 : 3,\\n            8, layer.id === 'nasa' ? 8 : 6\\n          ],\\n          'circle-color': layer.color,\\n          'circle-opacity': 0.8,\\n          'circle-stroke-width': 2,\\n          'circle-stroke-color': '#ffffff',\\n          'circle-stroke-opacity': 1\\n        }\\n      };\\n\\n      map.addLayer(layerConfig);\\n      layersRef.current.add(layerId);\\n\\n      // ...existing code...\"}",
                  "id": "toolu_bdrk_01Y9VA5MQAqy7r5WFXLcngbt"
                }
              ],
              "toolInputRetry": 0,
              "response": "I'll fix the TypeScript error by properly typing the layerConfig object. The error occurs because we need to specify the 'type' property before setting the paint properties."
            },
            {
              "toolCalls": [
                {
                  "name": "get_errors",
                  "arguments": "{\"filePaths\": [\"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\"]}",
                  "id": "toolu_bdrk_011DTkCvHS26LTF3HphPdsKm"
                }
              ],
              "toolInputRetry": 0,
              "response": "Let me validate that the TypeScript error has been fixed."
            },
            {
              "toolCalls": [],
              "toolInputRetry": 0,
              "response": "I've checked the errors and there are no TypeScript errors remaining in the Map.tsx file. The polygon layers should now work correctly with the proper typing for the layer configuration. The changes ensure that both polygon (fill) and point (circle) layers are properly typed and will work with Mapbox GL JS's type system."
            }
          ],
          "toolCallResults": {
            "toolu_bdrk_014LHoLeTmEYL6CcppHkp8aJ": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01Y9VA5MQAqy7r5WFXLcngbt": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_011DTkCvHS26LTF3HphPdsKm": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "<errors path=\"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\">\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "No errors found",
                                  "lineBreakBefore": false
                                },
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "priority": 1,
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "</errors>",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "\n",
                              "lineBreakBefore": false
                            }
                          ],
                          "references": []
                        }
                      ],
                      "references": []
                    }
                  }
                }
              ]
            }
          },
          "modelMessageId": "1dc9bbc5-e71c-4818-acd4-c8e3ff0349ee",
          "responseId": "af6a9aef-c276-47f5-925f-9ff0a4d721bf",
          "sessionId": "83938747-4922-4018-9542-110893bca4bc",
          "agentId": "github.copilot.editsAgent"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editsAgent",
        "description": "Edit files in your workspace in agent mode (Experimental)",
        "when": "config.chat.agent.enabled && !chatAgentModeDisallowed",
        "metadata": {
          "themeIcon": {
            "id": "tools"
          },
          "hasFollowups": false,
          "supportIssueReporting": false
        },
        "name": "agent",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "isToolsAgent": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "workingSet": [
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "scheme": "file"
        }
      ],
      "contentReferences": [],
      "codeCitations": [],
      "timestamp": 1739750716709
    },
    {
      "requestId": "request_d699f9c9-50f6-4688-b040-0f85b77bb211",
      "message": {
        "text": "How can we make it so that they show as points until you zoom in close enough to see the small polygon fill area",
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 112
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 113
            },
            "text": "How can we make it so that they show as points until you zoom in close enough to see the small polygon fill area",
            "kind": "text"
          }
        ]
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "scheme": "file"
            },
            "id": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "name": "Map.tsx",
            "isFile": true
          }
        ]
      },
      "response": [
        {
          "value": "I'll modify the Map component to implement a zoom-based layer switching between points and polygons. We'll show points when zoomed out and switch to polygon fills when zoomed in closer.",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "kind": "undoStop",
          "id": "7fced46d-b9db-4a39-b744-919252508e81"
        },
        {
          "value": "\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "scheme": "file"
          }
        },
        {
          "value": "// ...existing code...\n\n    // Add layer if it's meant to be visible\n    if (layer.visible) {\n      const firstFeature = data.features[0];\n      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';\n\n      if (isPolygon) {\n        // Add point layer for low zoom levels\n        const pointLayerId = `${layerId}-point`;\n        const pointLayer: mapboxgl.LayerSpecification = {\n          id: pointLayerId,\n          type: 'circle',\n          source: layer.id,\n          maxzoom: 10, // Switch to polygons at zoom level 10\n          paint: {\n            'circle-radius': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              0, 4,\n              8, 8\n            ],\n            'circle-color': layer.color,\n            'circle-opacity': 0.6,\n            'circle-stroke-width': 1,\n            'circle-stroke-color': '#ffffff',\n            'circle-stroke-opacity': 1\n          }\n        };\n        map.addLayer(pointLayer);\n        layersRef.current.add(pointLayerId);\n\n        // Add polygon layer for high zoom levels\n        const polygonLayer: mapboxgl.LayerSpecification = {\n          id: layerId,\n          type: 'fill',\n          source: layer.id,\n          minzoom: 10, // Only show polygons at zoom level 10 and higher\n          paint: {\n            'fill-color': layer.color,\n            'fill-opacity': 0.6,\n            'fill-outline-color': '#ffffff'\n          }\n        };\n        map.addLayer(polygonLayer);\n        layersRef.current.add(layerId);\n\n        // Add click handlers for both layers\n        [pointLayerId, layerId].forEach(id => {\n          map.on('click', id, (e) => {\n            const feature = e.features?.[0];\n            if (!feature) return;\n\n            const coordinates = e.lngLat;\n            const properties = feature.properties;\n            const popupContent = layer.id === 'microplastics' \n              ? formatMicroplasticsPopup(properties)\n              : layer.id === 'nasa'\n              ? formatNasaPopup(properties)\n              : formatNtuaPopup(properties);\n\n            new mapboxgl.Popup()\n              .setLngLat(coordinates)\n              .setHTML(`\n                <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">\n                  <div class=\"mb-3\">\n                    <div class=\"mb-1\">\n                      <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°\n                    </div>\n                    <div class=\"mb-1\">\n                      <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°\n                    </div>\n                  </div>\n                  <div class=\"flex flex-col space-y-0.5\">\n                    ${popupContent}\n                  </div>\n                  ${properties?.DOI ? `\n                    <button class=\"mt-2 text-sm\">\n                      <a href=\"${properties.DOI}\" \n                         target=\"_blank\" \n                         rel=\"noopener noreferrer\"\n                         class=\"text-blue-600 hover:text-blue-800 hover:underline\">\n                        View Research Paper\n                      </a>\n                    </button>\n                  ` : ''}\n                </div>\n              `)\n              .addTo(map);\n          });\n\n          map.on('mouseenter', id, () => {\n            map.getCanvas().style.cursor = 'pointer';\n          });\n\n          map.on('mouseleave', id, () => {\n            map.getCanvas().style.cursor = '';\n          });\n        });\n      } else {\n        // For non-polygon data, keep the existing circle layer logic\n        const layerConfig: mapboxgl.LayerSpecification = {\n          id: layerId,\n          type: 'circle',\n          source: layer.id,\n          paint: {\n            'circle-radius': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              0, 4,\n              8, 8\n            ],\n            'circle-color': layer.color,\n            'circle-opacity': 0.6,\n            'circle-stroke-width': 1,\n            'circle-stroke-color': '#ffffff',\n            'circle-stroke-opacity': 1\n          }\n        };\n\n        map.addLayer(layerConfig);\n        layersRef.current.add(layerId);\n\n        // Add event listeners for non-polygon layers\n        map.on('click', layerId, (e) => {\n          // ...existing click handler code...\n        });\n\n        map.on('mouseenter', layerId, () => {\n          map.getCanvas().style.cursor = 'pointer';\n        });\n\n        map.on('mouseleave', layerId, () => {\n          map.getCanvas().style.cursor = '';\n        });\n      }\n    }\n  }, [getFilteredData]);\n\n  // ...existing code...\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "'use client';",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "import { useCallback, useEffect, useRef, useState } from 'react';",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 66
                }
              }
            ],
            [
              {
                "text": "import mapboxgl from 'mapbox-gl';",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "import 'mapbox-gl/dist/mapbox-gl.css';",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "import { useData } from '@/contexts/DataContext';",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatDate = (dateString: string) => {",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "  return new Date(dateString).toLocaleDateString('en-US', {",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 60
                }
              }
            ],
            [
              {
                "text": "    year: 'numeric',",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "    month: 'long',",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "    day: 'numeric'",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "  });",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatMicroplasticsPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 78
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  const relevantData = {",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "    'Method': properties.SAMPMETHOD,",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "    'Density': properties.DENSTEXT,",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Unit': properties.UNIT,",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "    'Organization': properties.ORG,",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Date': formatDate(properties.Date),",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "    'Reference': properties.SHORTREF,",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    'DOI': properties.DOI",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "  };",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  return Object.entries(relevantData)",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    .map(([key, value]) => value ? ",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    `",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">${key}:</span> ${value}",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "    <p>",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "    ` : '')",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "    .join('');",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatNasaPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  return `",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">Detection:</span> Floating Marine Debris",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "    </p>",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "  `;",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatNtuaPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  return `",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">Detection:</span> Marine Floating Debris",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "    </p>",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "  `;",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "export default function Map() {",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "  const mapContainerRef = useRef<HTMLDivElement>(null);",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "  const mapRef = useRef<mapboxgl.Map | null>(null);",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "  const layersRef = useRef<Set<string>>(new Set());",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "  const [isStreetView, setIsStreetView] = useState(true);",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "  const { layers, getFilteredData, dataPointCount } = useData();",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 65
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 96
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current) return;",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    const layerId = `${layer.id}-layer`;",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "    const map = mapRef.current;",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "    const data = getFilteredData(layer.id);",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    // Remove existing layer if it exists",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "    if (layersRef.current.has(layerId) && map.getLayer(layerId)) {",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "      map.removeLayer(layerId);",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    // Update existing source if it exists",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "    if (map.getSource(layer.id)) {",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "      (map.getSource(layer.id) as mapboxgl.GeoJSONSource).setData(data);",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 73
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "      // Add new source if it doesn't exist",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "      map.addSource(layer.id, {",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "        type: 'geojson',",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "        data: data",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    // Add layer if it's meant to be visible",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "    if (layer.visible) {",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "      const firstFeature = data.features[0];",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 82
                }
              }
            ],
            [
              {
                "text": "      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 117
                }
              }
            ],
            [
              {
                "text": "      if (isPolygon) {",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        // Add point layer for low zoom levels",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "        const pointLayerId = `${layerId}-point`;",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "        const pointLayer: mapboxgl.LayerSpecification = {",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 22
                }
              }
            ],
            [
              {
                "text": "          id: pointLayerId,",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "          type: 'circle',",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "          source: layer.id,",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "          maxzoom: 10, // Switch to polygons at zoom level 10",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 31
                }
              }
            ],
            [
              {
                "text": "          paint: {",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "            'circle-radius': [",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "              'interpolate',",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "              ['linear'],",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "              ['zoom'],",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "              0, 4,",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "              8, 8",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "            ],",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "            'circle-color': layer.color,",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "            'circle-opacity': 0.6,",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-width': 1,",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 22
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-color': '#ffffff',",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 18
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-opacity': 1",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "          }",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "        map.addLayer(pointLayer);",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.add(pointLayerId);",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "        // Add polygon layer for high zoom levels",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "        const polygonLayer: mapboxgl.LayerSpecification = {",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "          id: layerId,",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "          type: 'fill',",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          source: layer.id,",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "          minzoom: 10, // Only show polygons at zoom level 10 and higher",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "          paint: {",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            'fill-color': layer.color,",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "            'fill-opacity': 0.6,",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "            'fill-outline-color': '#ffffff'",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "          }",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        map.addLayer(polygonLayer);",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.add(layerId);",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 59
                }
              }
            ],
            [
              {
                "text": "        // Add click handlers for both layers",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "        [pointLayerId, layerId].forEach(id => {",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "          map.on('click', id, (e) => {",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "            const feature = e.features?.[0];",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "            if (!feature) return;",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "            const coordinates = e.lngLat;",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "            const properties = feature.properties;",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "            const popupContent = layer.id === 'microplastics' ",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "              ? formatMicroplasticsPopup(properties)",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "              : layer.id === 'nasa'",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "              ? formatNasaPopup(properties)",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 94
                }
              }
            ],
            [
              {
                "text": "              : formatNtuaPopup(properties);",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "            new mapboxgl.Popup()",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 95
                }
              }
            ],
            [
              {
                "text": "              .setLngLat(coordinates)",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "              .setHTML(`",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "                <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"mb-3\">",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "                    <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "                      <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "                    </div>",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "                    <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "                      <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "                    </div>",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 80
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"flex flex-col space-y-0.5\">",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                    ${popupContent}",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "                  ${properties?.DOI ? `",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 22
                }
              }
            ],
            [
              {
                "text": "                    <button class=\"mt-2 text-sm\">",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "                      <a href=\"${properties.DOI}\" ",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "                         target=\"_blank\" ",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "                         rel=\"noopener noreferrer\"",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "                         class=\"text-blue-600 hover:text-blue-800 hover:underline\">",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                        View Research Paper",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "                      </a>",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "                    </button>",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "                  ` : ''}",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "              `)",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "              .addTo(map);",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "          });",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "          map.on('mouseenter', id, () => {",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            map.getCanvas().style.cursor = 'pointer';",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "          });",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "          map.on('mouseleave', id, () => {",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "            map.getCanvas().style.cursor = '';",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          });",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "        // For non-polygon data, keep the existing circle layer logic",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "        const layerConfig: mapboxgl.LayerSpecification = {",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "          id: layerId,",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "          type: 'circle',",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          source: layer.id,",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "          paint: {",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "            'circle-radius': [",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "              'interpolate',",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "              ['linear'],",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "              ['zoom'],",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "              0, 4,",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "              8, 8",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "            ],",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "            'circle-color': layer.color,",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 81
                }
              }
            ],
            [
              {
                "text": "            'circle-opacity': 0.6,",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-width': 1,",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-color': '#ffffff',",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-opacity': 1",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "          }",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "        map.addLayer(layerConfig);",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.add(layerId);",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "        // Add event listeners for non-polygon layers",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "        map.on('click', layerId, (e) => {",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "          const feature = e.features?.[0];",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "          if (!feature) return;",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "          const coordinates = e.lngLat;",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "          const properties = feature.properties;",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "          const popupContent = layer.id === 'microplastics' ",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "            ? formatMicroplasticsPopup(properties)",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "            : layer.id === 'nasa'",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "            ? formatNasaPopup(properties)",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "            : formatNtuaPopup(properties);",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          new mapboxgl.Popup()",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "            .setLngLat(coordinates)",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "            .setHTML(`",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 62
                }
              }
            ],
            [
              {
                "text": "              <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "                <div class=\"mb-3\">",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 68
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "                    <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 120
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 80
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 115
                }
              }
            ],
            [
              {
                "text": "                    <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1,
                  "endLineNumber": 236,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "                <div class=\"flex flex-col space-y-0.5\">",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1,
                  "endLineNumber": 237,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "                  ${popupContent}",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1,
                  "endLineNumber": 238,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1,
                  "endLineNumber": 239,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                ${properties?.DOI ? `",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1,
                  "endLineNumber": 240,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "                  <button class=\"mt-2 text-sm\">",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1,
                  "endLineNumber": 241,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "                    <a href=\"${properties.DOI}\" ",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1,
                  "endLineNumber": 242,
                  "endColumn": 161
                }
              }
            ],
            [
              {
                "text": "                       target=\"_blank\" ",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1,
                  "endLineNumber": 243,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "                       rel=\"noopener noreferrer\"",
                "range": {
                  "startLineNumber": 244,
                  "startColumn": 1,
                  "endLineNumber": 244,
                  "endColumn": 81
                }
              }
            ],
            [
              {
                "text": "                       class=\"text-blue-600 hover:text-blue-800 hover:underline\">",
                "range": {
                  "startLineNumber": 245,
                  "startColumn": 1,
                  "endLineNumber": 245,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                      View Research Paper",
                "range": {
                  "startLineNumber": 246,
                  "startColumn": 1,
                  "endLineNumber": 246,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "                    </a>",
                "range": {
                  "startLineNumber": 247,
                  "startColumn": 1,
                  "endLineNumber": 247,
                  "endColumn": 153
                }
              }
            ],
            [
              {
                "text": "                  </button>",
                "range": {
                  "startLineNumber": 248,
                  "startColumn": 1,
                  "endLineNumber": 248,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                ` : ''}",
                "range": {
                  "startLineNumber": 249,
                  "startColumn": 1,
                  "endLineNumber": 249,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "              </div>",
                "range": {
                  "startLineNumber": 250,
                  "startColumn": 1,
                  "endLineNumber": 250,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "            `)",
                "range": {
                  "startLineNumber": 251,
                  "startColumn": 1,
                  "endLineNumber": 251,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "            .addTo(map);",
                "range": {
                  "startLineNumber": 252,
                  "startColumn": 1,
                  "endLineNumber": 252,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 253,
                  "startColumn": 1,
                  "endLineNumber": 253,
                  "endColumn": 2
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 254,
                  "startColumn": 1,
                  "endLineNumber": 254,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        map.on('mouseenter', layerId, () => {",
                "range": {
                  "startLineNumber": 255,
                  "startColumn": 1,
                  "endLineNumber": 255,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n          map.getCanvas().style.cursor = 'pointer';",
                "range": {
                  "startLineNumber": 256,
                  "startColumn": 1,
                  "endLineNumber": 256,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        });",
                "range": {
                  "startLineNumber": 257,
                  "startColumn": 1,
                  "endLineNumber": 257,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 258,
                  "startColumn": 1,
                  "endLineNumber": 258,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        map.on('mouseleave', layerId, () => {",
                "range": {
                  "startLineNumber": 259,
                  "startColumn": 1,
                  "endLineNumber": 259,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n          map.getCanvas().style.cursor = '';",
                "range": {
                  "startLineNumber": 260,
                  "startColumn": 1,
                  "endLineNumber": 260,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        });",
                "range": {
                  "startLineNumber": 261,
                  "startColumn": 1,
                  "endLineNumber": 261,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      }",
                "range": {
                  "startLineNumber": 262,
                  "startColumn": 1,
                  "endLineNumber": 262,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    }",
                "range": {
                  "startLineNumber": 263,
                  "startColumn": 1,
                  "endLineNumber": 263,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  }, [getFilteredData]);",
                "range": {
                  "startLineNumber": 264,
                  "startColumn": 1,
                  "endLineNumber": 264,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 265,
                  "startColumn": 1,
                  "endLineNumber": 265,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  const loadMap = useCallback(() => {",
                "range": {
                  "startLineNumber": 266,
                  "startColumn": 1,
                  "endLineNumber": 266,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    // Only initialize map if it hasn't been initialized yet",
                "range": {
                  "startLineNumber": 267,
                  "startColumn": 1,
                  "endLineNumber": 267,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    if (!mapRef.current && mapContainerRef.current) {",
                "range": {
                  "startLineNumber": 268,
                  "startColumn": 1,
                  "endLineNumber": 268,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;",
                "range": {
                  "startLineNumber": 269,
                  "startColumn": 1,
                  "endLineNumber": 269,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 270,
                  "startColumn": 1,
                  "endLineNumber": 270,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      mapRef.current = new mapboxgl.Map({",
                "range": {
                  "startLineNumber": 271,
                  "startColumn": 1,
                  "endLineNumber": 271,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        container: mapContainerRef.current,",
                "range": {
                  "startLineNumber": 272,
                  "startColumn": 1,
                  "endLineNumber": 272,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        style: 'mapbox://styles/mapbox/streets-v12',",
                "range": {
                  "startLineNumber": 273,
                  "startColumn": 1,
                  "endLineNumber": 273,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        center: [-105.272148, 40.047050],",
                "range": {
                  "startLineNumber": 274,
                  "startColumn": 1,
                  "endLineNumber": 274,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        zoom: 2",
                "range": {
                  "startLineNumber": 275,
                  "startColumn": 1,
                  "endLineNumber": 275,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      });",
                "range": {
                  "startLineNumber": 276,
                  "startColumn": 1,
                  "endLineNumber": 276,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 277,
                  "startColumn": 1,
                  "endLineNumber": 277,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      mapRef.current.on('load', () => {",
                "range": {
                  "startLineNumber": 278,
                  "startColumn": 1,
                  "endLineNumber": 278,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 279,
                  "startColumn": 1,
                  "endLineNumber": 279,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      });",
                "range": {
                  "startLineNumber": 280,
                  "startColumn": 1,
                  "endLineNumber": 280,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    }",
                "range": {
                  "startLineNumber": 281,
                  "startColumn": 1,
                  "endLineNumber": 281,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  }, [layers, updateLayer]);",
                "range": {
                  "startLineNumber": 282,
                  "startColumn": 1,
                  "endLineNumber": 282,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 283,
                  "startColumn": 1,
                  "endLineNumber": 283,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  // Initialize map only once",
                "range": {
                  "startLineNumber": 284,
                  "startColumn": 1,
                  "endLineNumber": 284,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  useEffect(() => {",
                "range": {
                  "startLineNumber": 285,
                  "startColumn": 1,
                  "endLineNumber": 285,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    loadMap();",
                "range": {
                  "startLineNumber": 286,
                  "startColumn": 1,
                  "endLineNumber": 286,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  }, [loadMap]); // Empty dependency array since we only want to initialize once",
                "range": {
                  "startLineNumber": 287,
                  "startColumn": 1,
                  "endLineNumber": 287,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 288,
                  "startColumn": 1,
                  "endLineNumber": 288,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  // Update layers when they change",
                "range": {
                  "startLineNumber": 289,
                  "startColumn": 1,
                  "endLineNumber": 289,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  useEffect(() => {",
                "range": {
                  "startLineNumber": 290,
                  "startColumn": 1,
                  "endLineNumber": 290,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    if (mapRef.current?.loaded()) {",
                "range": {
                  "startLineNumber": 291,
                  "startColumn": 1,
                  "endLineNumber": 291,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 292,
                  "startColumn": 1,
                  "endLineNumber": 292,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    }",
                "range": {
                  "startLineNumber": 293,
                  "startColumn": 1,
                  "endLineNumber": 293,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  }, [layers, updateLayer]);",
                "range": {
                  "startLineNumber": 294,
                  "startColumn": 1,
                  "endLineNumber": 294,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 295,
                  "startColumn": 1,
                  "endLineNumber": 295,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  const toggleMapStyle = useCallback(() => {",
                "range": {
                  "startLineNumber": 296,
                  "startColumn": 1,
                  "endLineNumber": 296,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    const satellite = 'mapbox://styles/mapbox/satellite-v9';",
                "range": {
                  "startLineNumber": 297,
                  "startColumn": 1,
                  "endLineNumber": 297,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    const streets = 'mapbox://styles/mapbox/streets-v12';",
                "range": {
                  "startLineNumber": 298,
                  "startColumn": 1,
                  "endLineNumber": 298,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    ",
                "range": {
                  "startLineNumber": 299,
                  "startColumn": 1,
                  "endLineNumber": 299,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    if (mapRef.current) {",
                "range": {
                  "startLineNumber": 300,
                  "startColumn": 1,
                  "endLineNumber": 300,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      mapRef.current.setStyle(isStreetView ? satellite : streets);",
                "range": {
                  "startLineNumber": 301,
                  "startColumn": 1,
                  "endLineNumber": 301,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      setIsStreetView(!isStreetView);",
                "range": {
                  "startLineNumber": 302,
                  "startColumn": 1,
                  "endLineNumber": 302,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      ",
                "range": {
                  "startLineNumber": 303,
                  "startColumn": 1,
                  "endLineNumber": 303,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      // Re-add data layers after style change",
                "range": {
                  "startLineNumber": 304,
                  "startColumn": 1,
                  "endLineNumber": 304,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      mapRef.current.once('style.load', () => {",
                "range": {
                  "startLineNumber": 305,
                  "startColumn": 1,
                  "endLineNumber": 305,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 306,
                  "startColumn": 1,
                  "endLineNumber": 306,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      });",
                "range": {
                  "startLineNumber": 307,
                  "startColumn": 1,
                  "endLineNumber": 307,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    }",
                "range": {
                  "startLineNumber": 308,
                  "startColumn": 1,
                  "endLineNumber": 308,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  }, [isStreetView, layers, updateLayer]);",
                "range": {
                  "startLineNumber": 309,
                  "startColumn": 1,
                  "endLineNumber": 309,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 310,
                  "startColumn": 1,
                  "endLineNumber": 310,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  return (",
                "range": {
                  "startLineNumber": 311,
                  "startColumn": 1,
                  "endLineNumber": 311,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    <div className=\"relative w-full h-full\">",
                "range": {
                  "startLineNumber": 312,
                  "startColumn": 1,
                  "endLineNumber": 312,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      <div ref={mapContainerRef} className=\"w-full h-full\" />",
                "range": {
                  "startLineNumber": 313,
                  "startColumn": 1,
                  "endLineNumber": 313,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      ",
                "range": {
                  "startLineNumber": 314,
                  "startColumn": 1,
                  "endLineNumber": 314,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      <div className=\"absolute top-16 right-4 flex flex-col gap-2\">",
                "range": {
                  "startLineNumber": 315,
                  "startColumn": 1,
                  "endLineNumber": 315,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        {layers.map(layer => layer.visible && (",
                "range": {
                  "startLineNumber": 316,
                  "startColumn": 1,
                  "endLineNumber": 316,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n          <div key={layer.id} className=\"bg-white/30 dark:bg-black/40 backdrop-blur-md px-4 py-2 rounded-md shadow-md\">",
                "range": {
                  "startLineNumber": 317,
                  "startColumn": 1,
                  "endLineNumber": 317,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n            <p className=\"font-medium text-foreground flex items-center gap-2\">",
                "range": {
                  "startLineNumber": 318,
                  "startColumn": 1,
                  "endLineNumber": 318,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n              <span className=\"w-3 h-3 inline-block rounded-full\" style={{ backgroundColor: layer.color }}></span>",
                "range": {
                  "startLineNumber": 319,
                  "startColumn": 1,
                  "endLineNumber": 319,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n              {dataPointCount[layer.id]} points",
                "range": {
                  "startLineNumber": 320,
                  "startColumn": 1,
                  "endLineNumber": 320,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n            </p>",
                "range": {
                  "startLineNumber": 321,
                  "startColumn": 1,
                  "endLineNumber": 321,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n          </div>",
                "range": {
                  "startLineNumber": 322,
                  "startColumn": 1,
                  "endLineNumber": 322,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        ))}",
                "range": {
                  "startLineNumber": 323,
                  "startColumn": 1,
                  "endLineNumber": 323,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      </div>",
                "range": {
                  "startLineNumber": 324,
                  "startColumn": 1,
                  "endLineNumber": 324,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 325,
                  "startColumn": 1,
                  "endLineNumber": 325,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      <button",
                "range": {
                  "startLineNumber": 326,
                  "startColumn": 1,
                  "endLineNumber": 326,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        onClick={toggleMapStyle}",
                "range": {
                  "startLineNumber": 327,
                  "startColumn": 1,
                  "endLineNumber": 327,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        className=\"group absolute bottom-4 right-4 ml-auto bg-black/40 backdrop-blur-md p-2 rounded-md shadow-md hover:bg-deep-water transition-colors text-2xl\"",
                "range": {
                  "startLineNumber": 328,
                  "startColumn": 1,
                  "endLineNumber": 328,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      >",
                "range": {
                  "startLineNumber": 329,
                  "startColumn": 1,
                  "endLineNumber": 329,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        <span className=\"transition-opacity duration-200 group-hover:opacity-0\">",
                "range": {
                  "startLineNumber": 330,
                  "startColumn": 1,
                  "endLineNumber": 330,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n          {isStreetView ? '🚦' : '🛰️'}",
                "range": {
                  "startLineNumber": 331,
                  "startColumn": 1,
                  "endLineNumber": 331,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        </span>",
                "range": {
                  "startLineNumber": 332,
                  "startColumn": 1,
                  "endLineNumber": 332,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        <span className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 transition-opacity duration-200 group-hover:opacity-100\">",
                "range": {
                  "startLineNumber": 333,
                  "startColumn": 1,
                  "endLineNumber": 333,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n          {isStreetView ? '🛰️' : '🚦'}",
                "range": {
                  "startLineNumber": 334,
                  "startColumn": 1,
                  "endLineNumber": 334,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        </span>",
                "range": {
                  "startLineNumber": 335,
                  "startColumn": 1,
                  "endLineNumber": 335,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      </button>",
                "range": {
                  "startLineNumber": 336,
                  "startColumn": 1,
                  "endLineNumber": 336,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    </div>",
                "range": {
                  "startLineNumber": 337,
                  "startColumn": 1,
                  "endLineNumber": 337,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  );",
                "range": {
                  "startLineNumber": 338,
                  "startColumn": 1,
                  "endLineNumber": 338,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n}",
                "range": {
                  "startLineNumber": 339,
                  "startColumn": 1,
                  "endLineNumber": 339,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 340,
                  "startColumn": 1,
                  "endLineNumber": 340,
                  "endColumn": 1
                }
              }
            ],
            []
          ],
          "done": true
        },
        {
          "value": "Let me validate that there are no TypeScript errors with our changes.",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Checking `src/components/Map.tsx`",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "pastTenseMessage": {
            "value": "Checked `src/components/Map.tsx`, no problems found",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "isConfirmed": true,
          "isComplete": true
        },
        {
          "value": "The changes have been implemented and verified with no TypeScript errors. Now the map will:\n1. Show points when zoomed out (zoom level < 10)\n2. Automatically transition to polygon fills when zoomed in (zoom level >= 10)\n3. Maintain click interactions and popups for both visualization types\n4. Keep the same styling and color scheme for consistency\n\nYou can adjust the `maxzoom` and `minzoom` values (currently set to 10) if you want the transition point between points and polygons to happen at a different zoom level.",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        }
      ],
      "responseId": "response_5a0243b8-5a82-420a-a560-492676b17c66",
      "result": {
        "timings": {
          "firstProgress": 30908,
          "totalElapsed": 65443
        },
        "metadata": {
          "edits": {
            "workingSet": [
              {
                "uri": {
                  "$mid": 1,
                  "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "scheme": "file"
                },
                "text": "'use client';\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { useData } from '@/contexts/DataContext';\n\nconst formatDate = (dateString: string) => {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n};\n\nconst formatMicroplasticsPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  const relevantData = {\n    'Method': properties.SAMPMETHOD,\n    'Density': properties.DENSTEXT,\n    'Unit': properties.UNIT,\n    'Organization': properties.ORG,\n    'Date': formatDate(properties.Date),\n    'Reference': properties.SHORTREF,\n    'DOI': properties.DOI\n  };\n\n  return Object.entries(relevantData)\n    .map(([key, value]) => value ? \n    `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">${key}:</span> ${value}\n    <p>\n    ` : '')\n    .join('');\n};\n\nconst formatNasaPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  return `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">Detection:</span> Floating Marine Debris\n    </p>\n  `;\n};\n\nconst formatNtuaPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  return `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">Detection:</span> Marine Floating Debris\n    </p>\n  `;\n};\n\nexport default function Map() {\n  const mapContainerRef = useRef<HTMLDivElement>(null);\n  const mapRef = useRef<mapboxgl.Map | null>(null);\n  const layersRef = useRef<Set<string>>(new Set());\n  const [isStreetView, setIsStreetView] = useState(true);\n  const { layers, getFilteredData, dataPointCount } = useData();\n\n  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {\n    if (!mapRef.current) return;\n\n    const layerId = `${layer.id}-layer`;\n    const map = mapRef.current;\n    const data = getFilteredData(layer.id);\n\n    // Remove existing layer if it exists\n    if (layersRef.current.has(layerId) && map.getLayer(layerId)) {\n      map.removeLayer(layerId);\n    }\n\n    // Update existing source if it exists\n    if (map.getSource(layer.id)) {\n      (map.getSource(layer.id) as mapboxgl.GeoJSONSource).setData(data);\n    } else {\n      // Add new source if it doesn't exist\n      map.addSource(layer.id, {\n        type: 'geojson',\n        data: data\n      });\n    }\n\n    // Add layer if it's meant to be visible\n    if (layer.visible) {\n      const firstFeature = data.features[0];\n      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';\n\n      if (isPolygon) {\n        // Add point layer for low zoom levels\n        const pointLayerId = `${layerId}-point`;\n        const pointLayer: mapboxgl.LayerSpecification = {\n          id: pointLayerId,\n          type: 'circle',\n          source: layer.id,\n          maxzoom: 10, // Switch to polygons at zoom level 10\n          paint: {\n            'circle-radius': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              0, 4,\n              8, 8\n            ],\n            'circle-color': layer.color,\n            'circle-opacity': 0.6,\n            'circle-stroke-width': 1,\n            'circle-stroke-color': '#ffffff',\n            'circle-stroke-opacity': 1\n          }\n        };\n        map.addLayer(pointLayer);\n        layersRef.current.add(pointLayerId);\n\n        // Add polygon layer for high zoom levels\n        const polygonLayer: mapboxgl.LayerSpecification = {\n          id: layerId,\n          type: 'fill',\n          source: layer.id,\n          minzoom: 10, // Only show polygons at zoom level 10 and higher\n          paint: {\n            'fill-color': layer.color,\n            'fill-opacity': 0.6,\n            'fill-outline-color': '#ffffff'\n          }\n        };\n        map.addLayer(polygonLayer);\n        layersRef.current.add(layerId);\n\n        // Add click handlers for both layers\n        [pointLayerId, layerId].forEach(id => {\n          map.on('click', id, (e) => {\n            const feature = e.features?.[0];\n            if (!feature) return;\n\n            const coordinates = e.lngLat;\n            const properties = feature.properties;\n            const popupContent = layer.id === 'microplastics' \n              ? formatMicroplasticsPopup(properties)\n              : layer.id === 'nasa'\n              ? formatNasaPopup(properties)\n              : formatNtuaPopup(properties);\n\n            new mapboxgl.Popup()\n              .setLngLat(coordinates)\n              .setHTML(`\n                <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">\n                  <div class=\"mb-3\">\n                    <div class=\"mb-1\">\n                      <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°\n                    </div>\n                    <div class=\"mb-1\">\n                      <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°\n                    </div>\n                  </div>\n                  <div class=\"flex flex-col space-y-0.5\">\n                    ${popupContent}\n                  </div>\n                  ${properties?.DOI ? `\n                    <button class=\"mt-2 text-sm\">\n                      <a href=\"${properties.DOI}\" \n                         target=\"_blank\" \n                         rel=\"noopener noreferrer\"\n                         class=\"text-blue-600 hover:text-blue-800 hover:underline\">\n                        View Research Paper\n                      </a>\n                    </button>\n                  ` : ''}\n                </div>\n              `)\n              .addTo(map);\n          });\n\n          map.on('mouseenter', id, () => {\n            map.getCanvas().style.cursor = 'pointer';\n          });\n\n          map.on('mouseleave', id, () => {\n            map.getCanvas().style.cursor = '';\n          });\n        });\n      } else {\n        // For non-polygon data, keep the existing circle layer logic\n        const layerConfig: mapboxgl.LayerSpecification = {\n          id: layerId,\n          type: 'circle',\n          source: layer.id,\n          paint: {\n            'circle-radius': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              0, 4,\n              8, 8\n            ],\n            'circle-color': layer.color,\n            'circle-opacity': 0.6,\n            'circle-stroke-width': 1,\n            'circle-stroke-color': '#ffffff',\n            'circle-stroke-opacity': 1\n          }\n        };\n\n        map.addLayer(layerConfig);\n        layersRef.current.add(layerId);\n\n        // Add event listeners for non-polygon layers\n        map.on('click', layerId, (e) => {\n          const feature = e.features?.[0];\n          if (!feature) return;\n\n          const coordinates = e.lngLat;\n          const properties = feature.properties;\n          const popupContent = layer.id === 'microplastics' \n            ? formatMicroplasticsPopup(properties)\n            : layer.id === 'nasa'\n            ? formatNasaPopup(properties)\n            : formatNtuaPopup(properties);\n\n          new mapboxgl.Popup()\n            .setLngLat(coordinates)\n            .setHTML(`\n              <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">\n                <div class=\"mb-3\">\n                  <div class=\"mb-1\">\n                    <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°\n                  </div>\n                  <div class=\"mb-1\">\n                    <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°\n                  </div>\n                </div>\n                <div class=\"flex flex-col space-y-0.5\">\n                  ${popupContent}\n                </div>\n                ${properties?.DOI ? `\n                  <button class=\"mt-2 text-sm\">\n                    <a href=\"${properties.DOI}\" \n                       target=\"_blank\" \n                       rel=\"noopener noreferrer\"\n                       class=\"text-blue-600 hover:text-blue-800 hover:underline\">\n                      View Research Paper\n                    </a>\n                  </button>\n                ` : ''}\n              </div>\n            `)\n            .addTo(map);\n        });\n\n        map.on('mouseenter', layerId, () => {\n          map.getCanvas().style.cursor = 'pointer';\n        });\n\n        map.on('mouseleave', layerId, () => {\n          map.getCanvas().style.cursor = '';\n        });\n      }\n    }\n  }, [getFilteredData]);\n\n  const loadMap = useCallback(() => {\n    // Only initialize map if it hasn't been initialized yet\n    if (!mapRef.current && mapContainerRef.current) {\n      mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;\n\n      mapRef.current = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mapbox/streets-v12',\n        center: [-105.272148, 40.047050],\n        zoom: 2\n      });\n\n      mapRef.current.on('load', () => {\n        layers.forEach(updateLayer);\n      });\n    }\n  }, [layers, updateLayer]);\n\n  // Initialize map only once\n  useEffect(() => {\n    loadMap();\n  }, [loadMap]); // Empty dependency array since we only want to initialize once\n\n  // Update layers when they change\n  useEffect(() => {\n    if (mapRef.current?.loaded()) {\n      layers.forEach(updateLayer);\n    }\n  }, [layers, updateLayer]);\n\n  const toggleMapStyle = useCallback(() => {\n    const satellite = 'mapbox://styles/mapbox/satellite-v9';\n    const streets = 'mapbox://styles/mapbox/streets-v12';\n    \n    if (mapRef.current) {\n      mapRef.current.setStyle(isStreetView ? satellite : streets);\n      setIsStreetView(!isStreetView);\n      \n      // Re-add data layers after style change\n      mapRef.current.once('style.load', () => {\n        layers.forEach(updateLayer);\n      });\n    }\n  }, [isStreetView, layers, updateLayer]);\n\n  return (\n    <div className=\"relative w-full h-full\">\n      <div ref={mapContainerRef} className=\"w-full h-full\" />\n      \n      <div className=\"absolute top-16 right-4 flex flex-col gap-2\">\n        {layers.map(layer => layer.visible && (\n          <div key={layer.id} className=\"bg-white/30 dark:bg-black/40 backdrop-blur-md px-4 py-2 rounded-md shadow-md\">\n            <p className=\"font-medium text-foreground flex items-center gap-2\">\n              <span className=\"w-3 h-3 inline-block rounded-full\" style={{ backgroundColor: layer.color }}></span>\n              {dataPointCount[layer.id]} points\n            </p>\n          </div>\n        ))}\n      </div>\n\n      <button\n        onClick={toggleMapStyle}\n        className=\"group absolute bottom-4 right-4 ml-auto bg-black/40 backdrop-blur-md p-2 rounded-md shadow-md hover:bg-deep-water transition-colors text-2xl\"\n      >\n        <span className=\"transition-opacity duration-200 group-hover:opacity-0\">\n          {isStreetView ? '🚦' : '🛰️'}\n        </span>\n        <span className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 transition-opacity duration-200 group-hover:opacity-100\">\n          {isStreetView ? '🛰️' : '🚦'}\n        </span>\n      </button>\n    </div>\n  );\n}\n",
                "languageId": "typescriptreact",
                "version": 2003,
                "state": 2
              }
            ],
            "promptInstructions": [],
            "request": "Above is the result of calling one or more tools. The user can see the results of the edit_file tool, so you don't need to explain them. But the user can't see the results of other tools, so you should explain them to the user if referencing them in your answer. Continue from where you left off without repeating yourself.",
            "response": "The changes have been implemented and verified with no TypeScript errors. Now the map will:\n1. Show points when zoomed out (zoom level < 10)\n2. Automatically transition to polygon fills when zoomed in (zoom level >= 10)\n3. Maintain click interactions and popups for both visualization types\n4. Keep the same styling and color scheme for consistency\n\nYou can adjust the `maxzoom` and `minzoom` values (currently set to 10) if you want the transition point between points and polygons to happen at a different zoom level."
          },
          "codeBlocks": [],
          "messages": [
            {
              "role": "user",
              "content": "How can we make it so that they show as points until you zoom in close enough to see the small polygon fill area"
            },
            {
              "role": "assistant",
              "content": "The changes have been implemented and verified with no TypeScript errors. Now the map will:\n1. Show points when zoomed out (zoom level < 10)\n2. Automatically transition to polygon fills when zoomed in (zoom level >= 10)\n3. Maintain click interactions and popups for both visualization types\n4. Keep the same styling and color scheme for consistency\n\nYou can adjust the `maxzoom` and `minzoom` values (currently set to 10) if you want the transition point between points and polygons to happen at a different zoom level."
            }
          ],
          "toolCallRounds": [
            {
              "toolCalls": [
                {
                  "name": "edit_file",
                  "arguments": "{\"explanation\": \"Update the Map component to show points at low zoom levels and polygons at higher zoom levels\", \"filePath\": \"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\", \"code\": \"// ...existing code...\\n\\n    // Add layer if it's meant to be visible\\n    if (layer.visible) {\\n      const firstFeature = data.features[0];\\n      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';\\n\\n      if (isPolygon) {\\n        // Add point layer for low zoom levels\\n        const pointLayerId = `${layerId}-point`;\\n        const pointLayer: mapboxgl.LayerSpecification = {\\n          id: pointLayerId,\\n          type: 'circle',\\n          source: layer.id,\\n          maxzoom: 10, // Switch to polygons at zoom level 10\\n          paint: {\\n            'circle-radius': [\\n              'interpolate',\\n              ['linear'],\\n              ['zoom'],\\n              0, 4,\\n              8, 8\\n            ],\\n            'circle-color': layer.color,\\n            'circle-opacity': 0.6,\\n            'circle-stroke-width': 1,\\n            'circle-stroke-color': '#ffffff',\\n            'circle-stroke-opacity': 1\\n          }\\n        };\\n        map.addLayer(pointLayer);\\n        layersRef.current.add(pointLayerId);\\n\\n        // Add polygon layer for high zoom levels\\n        const polygonLayer: mapboxgl.LayerSpecification = {\\n          id: layerId,\\n          type: 'fill',\\n          source: layer.id,\\n          minzoom: 10, // Only show polygons at zoom level 10 and higher\\n          paint: {\\n            'fill-color': layer.color,\\n            'fill-opacity': 0.6,\\n            'fill-outline-color': '#ffffff'\\n          }\\n        };\\n        map.addLayer(polygonLayer);\\n        layersRef.current.add(layerId);\\n\\n        // Add click handlers for both layers\\n        [pointLayerId, layerId].forEach(id => {\\n          map.on('click', id, (e) => {\\n            const feature = e.features?.[0];\\n            if (!feature) return;\\n\\n            const coordinates = e.lngLat;\\n            const properties = feature.properties;\\n            const popupContent = layer.id === 'microplastics' \\n              ? formatMicroplasticsPopup(properties)\\n              : layer.id === 'nasa'\\n              ? formatNasaPopup(properties)\\n              : formatNtuaPopup(properties);\\n\\n            new mapboxgl.Popup()\\n              .setLngLat(coordinates)\\n              .setHTML(`\\n                <div class=\\\"flex flex-col text-deep-water p-2 max-w-sm\\\">\\n                  <div class=\\\"mb-3\\\">\\n                    <div class=\\\"mb-1\\\">\\n                      <span class=\\\"font-semibold\\\">Latitude:</span> ${coordinates.lat.toFixed(4)}°\\n                    </div>\\n                    <div class=\\\"mb-1\\\">\\n                      <span class=\\\"font-semibold\\\">Longitude:</span> ${coordinates.lng.toFixed(4)}°\\n                    </div>\\n                  </div>\\n                  <div class=\\\"flex flex-col space-y-0.5\\\">\\n                    ${popupContent}\\n                  </div>\\n                  ${properties?.DOI ? `\\n                    <button class=\\\"mt-2 text-sm\\\">\\n                      <a href=\\\"${properties.DOI}\\\" \\n                         target=\\\"_blank\\\" \\n                         rel=\\\"noopener noreferrer\\\"\\n                         class=\\\"text-blue-600 hover:text-blue-800 hover:underline\\\">\\n                        View Research Paper\\n                      </a>\\n                    </button>\\n                  ` : ''}\\n                </div>\\n              `)\\n              .addTo(map);\\n          });\\n\\n          map.on('mouseenter', id, () => {\\n            map.getCanvas().style.cursor = 'pointer';\\n          });\\n\\n          map.on('mouseleave', id, () => {\\n            map.getCanvas().style.cursor = '';\\n          });\\n        });\\n      } else {\\n        // For non-polygon data, keep the existing circle layer logic\\n        const layerConfig: mapboxgl.LayerSpecification = {\\n          id: layerId,\\n          type: 'circle',\\n          source: layer.id,\\n          paint: {\\n            'circle-radius': [\\n              'interpolate',\\n              ['linear'],\\n              ['zoom'],\\n              0, 4,\\n              8, 8\\n            ],\\n            'circle-color': layer.color,\\n            'circle-opacity': 0.6,\\n            'circle-stroke-width': 1,\\n            'circle-stroke-color': '#ffffff',\\n            'circle-stroke-opacity': 1\\n          }\\n        };\\n\\n        map.addLayer(layerConfig);\\n        layersRef.current.add(layerId);\\n\\n        // Add event listeners for non-polygon layers\\n        map.on('click', layerId, (e) => {\\n          // ...existing click handler code...\\n        });\\n\\n        map.on('mouseenter', layerId, () => {\\n          map.getCanvas().style.cursor = 'pointer';\\n        });\\n\\n        map.on('mouseleave', layerId, () => {\\n          map.getCanvas().style.cursor = '';\\n        });\\n      }\\n    }\\n  }, [getFilteredData]);\\n\\n  // ...existing code...\"}",
                  "id": "toolu_bdrk_01JdADB6RMEb3AkV16bXpbZY"
                }
              ],
              "toolInputRetry": 0,
              "response": "I'll modify the Map component to implement a zoom-based layer switching between points and polygons. We'll show points when zoomed out and switch to polygon fills when zoomed in closer."
            },
            {
              "toolCalls": [
                {
                  "name": "get_errors",
                  "arguments": "{\"filePaths\": [\"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\"]}",
                  "id": "toolu_bdrk_01PEbZRyQX65Mx2pJx5KFaX5"
                }
              ],
              "toolInputRetry": 0,
              "response": "Let me validate that there are no TypeScript errors with our changes."
            },
            {
              "toolCalls": [],
              "toolInputRetry": 0,
              "response": "The changes have been implemented and verified with no TypeScript errors. Now the map will:\n1. Show points when zoomed out (zoom level < 10)\n2. Automatically transition to polygon fills when zoomed in (zoom level >= 10)\n3. Maintain click interactions and popups for both visualization types\n4. Keep the same styling and color scheme for consistency\n\nYou can adjust the `maxzoom` and `minzoom` values (currently set to 10) if you want the transition point between points and polygons to happen at a different zoom level."
            }
          ],
          "toolCallResults": {
            "toolu_bdrk_014LHoLeTmEYL6CcppHkp8aJ": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_011DTkCvHS26LTF3HphPdsKm": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "<errors path=\"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\">\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "No errors found",
                                  "lineBreakBefore": false
                                },
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "priority": 1,
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "</errors>",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "\n",
                              "lineBreakBefore": false
                            }
                          ],
                          "references": []
                        }
                      ],
                      "references": []
                    }
                  }
                }
              ]
            },
            "toolu_bdrk_01Y9VA5MQAqy7r5WFXLcngbt": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01JdADB6RMEb3AkV16bXpbZY": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01PEbZRyQX65Mx2pJx5KFaX5": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "<errors path=\"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\">\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "No errors found",
                                  "lineBreakBefore": false
                                },
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "priority": 1,
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "</errors>",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "\n",
                              "lineBreakBefore": false
                            }
                          ],
                          "references": []
                        }
                      ],
                      "references": []
                    }
                  }
                }
              ]
            }
          },
          "modelMessageId": "76c9ad56-5398-498e-917f-38a75f616289",
          "responseId": "9669ef1e-2d19-42ca-a48f-5f8556a5ba5f",
          "sessionId": "83938747-4922-4018-9542-110893bca4bc",
          "agentId": "github.copilot.editsAgent"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editsAgent",
        "description": "Edit files in your workspace in agent mode (Experimental)",
        "when": "config.chat.agent.enabled && !chatAgentModeDisallowed",
        "metadata": {
          "themeIcon": {
            "id": "tools"
          },
          "hasFollowups": false,
          "supportIssueReporting": false
        },
        "name": "agent",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "isToolsAgent": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "workingSet": [
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "scheme": "file"
        }
      ],
      "contentReferences": [],
      "codeCitations": [],
      "timestamp": 1739751374453
    },
    {
      "requestId": "request_619bb510-0601-49e0-84b4-3659928cb4f5",
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 349
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 3,
              "endColumn": 192
            },
            "text": "for some reason the regular circle points for the polygons data aren't shoing until you zoom in a lot, then when i reach zoom 10 it switches to polygon fill\n\nmaybe becuase it is using the polygon coordinates which dont load on the map until you get closer? can we use something that temporarily uses an average the of the polygon as the point coords",
            "kind": "text"
          }
        ],
        "text": "for some reason the regular circle points for the polygons data aren't shoing until you zoom in a lot, then when i reach zoom 10 it switches to polygon fill\n\nmaybe becuase it is using the polygon coordinates which dont load on the map until you get closer? can we use something that temporarily uses an average the of the polygon as the point coords"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "scheme": "file"
            },
            "id": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "name": "Map.tsx",
            "isFile": true
          }
        ]
      },
      "response": [
        {
          "value": "I'll modify the code to calculate the centroid of each polygon to use as the point coordinates for the low-zoom view. We'll use a GeoJSON utility function to calculate this.",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "kind": "undoStop",
          "id": "10f6d24b-f7df-4c4c-9a93-07996fb5d6bb"
        },
        {
          "value": "\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "scheme": "file"
          }
        },
        {
          "value": "// ...existing code...\n\n// Add these utility functions at the top of the file\nconst calculatePolygonCentroid = (coordinates: number[][][]) => {\n  let totalX = 0;\n  let totalY = 0;\n  let pointCount = 0;\n\n  // Handle the outer ring of the polygon\n  coordinates[0].forEach(point => {\n    totalX += point[0];\n    totalY += point[1];\n    pointCount++;\n  });\n\n  return [totalX / pointCount, totalY / pointCount];\n};\n\nconst createPointFeatureFromPolygon = (feature: GeoJSON.Feature): GeoJSON.Feature => {\n  const geometry = feature.geometry as GeoJSON.Polygon | GeoJSON.MultiPolygon;\n  let centroid;\n\n  if (geometry.type === 'Polygon') {\n    centroid = calculatePolygonCentroid(geometry.coordinates);\n  } else {\n    // For MultiPolygon, use the centroid of the first polygon\n    centroid = calculatePolygonCentroid(geometry.coordinates[0]);\n  }\n\n  return {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: centroid\n    },\n    properties: feature.properties\n  };\n};\n\nexport default function Map() {\n  // ...existing code...\n\n  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {\n    if (!mapRef.current) return;\n\n    const layerId = `${layer.id}-layer`;\n    const map = mapRef.current;\n    const data = getFilteredData(layer.id);\n\n    // Remove existing layers and sources\n    [layerId, `${layerId}-point`].forEach(id => {\n      if (layersRef.current.has(id) && map.getLayer(id)) {\n        map.removeLayer(id);\n        layersRef.current.delete(id);\n      }\n    });\n\n    if (map.getSource(layer.id)) {\n      map.removeSource(layer.id);\n    }\n    if (map.getSource(`${layer.id}-point`)) {\n      map.removeSource(`${layer.id}-point`);\n    }\n\n    // Add layer if it's meant to be visible\n    if (layer.visible) {\n      const firstFeature = data.features[0];\n      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';\n\n      if (isPolygon) {\n        // Add the original polygon source\n        map.addSource(layer.id, {\n          type: 'geojson',\n          data: data\n        });\n\n        // Create a point source from polygon centroids\n        const pointData: GeoJSON.FeatureCollection = {\n          type: 'FeatureCollection',\n          features: data.features.map(createPointFeatureFromPolygon)\n        };\n\n        map.addSource(`${layer.id}-point`, {\n          type: 'geojson',\n          data: pointData\n        });\n\n        // Add point layer for low zoom levels\n        const pointLayerId = `${layerId}-point`;\n        const pointLayer: mapboxgl.LayerSpecification = {\n          id: pointLayerId,\n          type: 'circle',\n          source: `${layer.id}-point`,\n          maxzoom: 10,\n          paint: {\n            'circle-radius': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              0, 4,\n              8, 8\n            ],\n            'circle-color': layer.color,\n            'circle-opacity': 0.6,\n            'circle-stroke-width': 1,\n            'circle-stroke-color': '#ffffff',\n            'circle-stroke-opacity': 1\n          }\n        };\n        map.addLayer(pointLayer);\n        layersRef.current.add(pointLayerId);\n\n        // Add polygon layer for high zoom levels\n        const polygonLayer: mapboxgl.LayerSpecification = {\n          id: layerId,\n          type: 'fill',\n          source: layer.id,\n          minzoom: 10,\n          paint: {\n            'fill-color': layer.color,\n            'fill-opacity': 0.6,\n            'fill-outline-color': '#ffffff'\n          }\n        };\n        map.addLayer(polygonLayer);\n        layersRef.current.add(layerId);\n\n        // Add click handlers for both layers\n        [pointLayerId, layerId].forEach(id => {\n          // ...existing click handler code...\n        });\n      } else {\n        // For non-polygon data, keep the existing circle layer logic\n        // ...existing non-polygon layer code...\n      }\n    }\n  }, [getFilteredData]);\n\n  // ...existing code...\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "'use client';",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "import { useCallback, useEffect, useRef, useState } from 'react';",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 66
                }
              }
            ],
            [
              {
                "text": "import mapboxgl from 'mapbox-gl';",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "import 'mapbox-gl/dist/mapbox-gl.css';",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "import { useData } from '@/contexts/DataContext';",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatDate = (dateString: string) => {",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "  return new Date(dateString).toLocaleDateString('en-US', {",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 60
                }
              }
            ],
            [
              {
                "text": "    year: 'numeric',",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "    month: 'long',",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "    day: 'numeric'",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "  });",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatMicroplasticsPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 78
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  const relevantData = {",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "    'Method': properties.SAMPMETHOD,",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "    'Density': properties.DENSTEXT,",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Unit': properties.UNIT,",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "    'Organization': properties.ORG,",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Date': formatDate(properties.Date),",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "    'Reference': properties.SHORTREF,",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    'DOI': properties.DOI",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "  };",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  return Object.entries(relevantData)",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    .map(([key, value]) => value ? ",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    `",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">${key}:</span> ${value}",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "    <p>",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "    ` : '')",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "    .join('');",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatNasaPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  return `",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">Detection:</span> Floating Marine Debris",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "    </p>",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "  `;",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatNtuaPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  return `",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">Detection:</span> Marine Floating Debris",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "    </p>",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "  `;",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const calculatePolygonCentroid = (coordinates: number[][][]) => {",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "  let totalX = 0;",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "  let totalY = 0;",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "  let pointCount = 0;",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "  // Handle the outer ring of the polygon",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 65
                }
              }
            ],
            [
              {
                "text": "  coordinates[0].forEach(point => {",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    totalX += point[0];",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 96
                }
              }
            ],
            [
              {
                "text": "    totalY += point[1];",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "    pointCount++;",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  });",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "  return [totalX / pointCount, totalY / pointCount];",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "const createPointFeatureFromPolygon = (feature: GeoJSON.Feature): GeoJSON.Feature => {",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "  const geometry = feature.geometry as GeoJSON.Polygon | GeoJSON.MultiPolygon;",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "  let centroid;",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  if (geometry.type === 'Polygon') {",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "    centroid = calculatePolygonCentroid(geometry.coordinates);",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "  } else {",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 73
                }
              }
            ],
            [
              {
                "text": "    // For MultiPolygon, use the centroid of the first polygon",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "    centroid = calculatePolygonCentroid(geometry.coordinates[0]);",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "  return {",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "    type: 'Feature',",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "    geometry: {",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "      type: 'Point',",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      coordinates: centroid",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "    },",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "    properties: feature.properties",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "  };",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 117
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "export default function Map() {",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "  const mapContainerRef = useRef<HTMLDivElement>(null);",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "  const mapRef = useRef<mapboxgl.Map | null>(null);",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "  const layersRef = useRef<Set<string>>(new Set());",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "  const [isStreetView, setIsStreetView] = useState(true);",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "  const { layers, getFilteredData, dataPointCount } = useData();",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 62
                }
              }
            ],
            [
              {
                "text": "  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current) return;",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 31
                }
              }
            ],
            [
              {
                "text": "    const layerId = `${layer.id}-layer`;",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "    const map = mapRef.current;",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "    const data = getFilteredData(layer.id);",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "    // Remove existing layers and sources",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 57
                }
              }
            ],
            [
              {
                "text": "    [layerId, `${layerId}-point`].forEach(id => {",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "      if (layersRef.current.has(id) && map.getLayer(id)) {",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "        map.removeLayer(id);",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.delete(id);",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "    if (map.getSource(layer.id)) {",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "      map.removeSource(layer.id);",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "    if (map.getSource(`${layer.id}-point`)) {",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      map.removeSource(`${layer.id}-point`);",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 60
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "    // Add layer if it's meant to be visible",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "    if (layer.visible) {",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "      const firstFeature = data.features[0];",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 73
                }
              }
            ],
            [
              {
                "text": "      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "      if (isPolygon) {",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "        // Add the original polygon source",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "        map.addSource(layer.id, {",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "          type: 'geojson',",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "          data: data",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        // Create a point source from polygon centroids",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "        const pointData: GeoJSON.FeatureCollection = {",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "          type: 'FeatureCollection',",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "          features: data.features.map(createPointFeatureFromPolygon)",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        map.addSource(`${layer.id}-point`, {",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "          type: 'geojson',",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 51
                }
              }
            ],
            [
              {
                "text": "          data: pointData",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 63
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "        // Add point layer for low zoom levels",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "        const pointLayerId = `${layerId}-point`;",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "        const pointLayer: mapboxgl.LayerSpecification = {",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          id: pointLayerId,",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "          type: 'circle',",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "          source: `${layer.id}-point`,",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "          maxzoom: 10,",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 73
                }
              }
            ],
            [
              {
                "text": "          paint: {",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "            'circle-radius': [",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "              'interpolate',",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 98
                }
              }
            ],
            [
              {
                "text": "              ['linear'],",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "              ['zoom'],",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "              0, 4,",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 99
                }
              }
            ],
            [
              {
                "text": "              8, 8",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "            ],",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "            'circle-color': layer.color,",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "            'circle-opacity': 0.6,",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-width': 1,",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-color': '#ffffff',",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-opacity': 1",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "          }",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 51
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "        map.addLayer(pointLayer);",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 51
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.add(pointLayerId);",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 84
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "        // Add polygon layer for high zoom levels",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "        const polygonLayer: mapboxgl.LayerSpecification = {",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "          id: layerId,",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "          type: 'fill',",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "          source: layer.id,",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "          minzoom: 10,",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "          paint: {",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "            'fill-color': layer.color,",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            'fill-opacity': 0.6,",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "            'fill-outline-color': '#ffffff'",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "          }",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        map.addLayer(polygonLayer);",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.add(layerId);",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "        // Add click handlers for both layers",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "        [pointLayerId, layerId].forEach(id => {",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "          map.on('click', id, (e) => {",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 70
                }
              }
            ],
            [
              {
                "text": "            const feature = e.features?.[0];",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 59
                }
              }
            ],
            [
              {
                "text": "            if (!feature) return;",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "            const coordinates = e.lngLat;",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "            const properties = feature.properties;",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "            const popupContent = layer.id === 'microplastics' ",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 31
                }
              }
            ],
            [
              {
                "text": "              ? formatMicroplasticsPopup(properties)",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "              : layer.id === 'nasa'",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "              ? formatNasaPopup(properties)",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "              : formatNtuaPopup(properties);",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "            new mapboxgl.Popup()",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "              .setLngLat(coordinates)",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "              .setHTML(`",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "                <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"mb-3\">",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "                    <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "                      <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "                    </div>",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "                    <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                      <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "                    </div>",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"flex flex-col space-y-0.5\">",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "                    ${popupContent}",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "                  ${properties?.DOI ? `",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "                    <button class=\"mt-2 text-sm\">",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                      <a href=\"${properties.DOI}\" ",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                         target=\"_blank\" ",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "                         rel=\"noopener noreferrer\"",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "                         class=\"text-blue-600 hover:text-blue-800 hover:underline\">",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 51
                }
              }
            ],
            [
              {
                "text": "                        View Research Paper",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "                      </a>",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "                    </button>",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "                  ` : ''}",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 31
                }
              }
            ],
            [
              {
                "text": "              `)",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "              .addTo(map);",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "          });",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 71
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "          map.on('mouseenter', id, () => {",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "            map.getCanvas().style.cursor = 'pointer';",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 96
                }
              }
            ],
            [
              {
                "text": "          });",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "          map.on('mouseleave', id, () => {",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 97
                }
              }
            ],
            [
              {
                "text": "            map.getCanvas().style.cursor = '';",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1,
                  "endLineNumber": 236,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "          });",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1,
                  "endLineNumber": 237,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1,
                  "endLineNumber": 238,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1,
                  "endLineNumber": 239,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "        // For non-polygon data, keep the existing circle layer logic",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1,
                  "endLineNumber": 240,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "        const layerConfig: mapboxgl.LayerSpecification = {",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1,
                  "endLineNumber": 241,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "          id: layerId,",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1,
                  "endLineNumber": 242,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "          type: 'circle',",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1,
                  "endLineNumber": 243,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "          source: layer.id,",
                "range": {
                  "startLineNumber": 244,
                  "startColumn": 1,
                  "endLineNumber": 244,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "          paint: {",
                "range": {
                  "startLineNumber": 245,
                  "startColumn": 1,
                  "endLineNumber": 245,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "            'circle-radius': [",
                "range": {
                  "startLineNumber": 246,
                  "startColumn": 1,
                  "endLineNumber": 246,
                  "endColumn": 82
                }
              }
            ],
            [
              {
                "text": "              'interpolate',",
                "range": {
                  "startLineNumber": 247,
                  "startColumn": 1,
                  "endLineNumber": 247,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "              ['linear'],",
                "range": {
                  "startLineNumber": 248,
                  "startColumn": 1,
                  "endLineNumber": 248,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "              ['zoom'],",
                "range": {
                  "startLineNumber": 249,
                  "startColumn": 1,
                  "endLineNumber": 249,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "              0, 4,",
                "range": {
                  "startLineNumber": 250,
                  "startColumn": 1,
                  "endLineNumber": 250,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "              8, 8",
                "range": {
                  "startLineNumber": 251,
                  "startColumn": 1,
                  "endLineNumber": 251,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "            ],",
                "range": {
                  "startLineNumber": 252,
                  "startColumn": 1,
                  "endLineNumber": 252,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "            'circle-color': layer.color,",
                "range": {
                  "startLineNumber": 253,
                  "startColumn": 1,
                  "endLineNumber": 253,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "            'circle-opacity': 0.6,",
                "range": {
                  "startLineNumber": 254,
                  "startColumn": 1,
                  "endLineNumber": 254,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-width': 1,",
                "range": {
                  "startLineNumber": 255,
                  "startColumn": 1,
                  "endLineNumber": 255,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-color': '#ffffff',",
                "range": {
                  "startLineNumber": 256,
                  "startColumn": 1,
                  "endLineNumber": 256,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-opacity': 1",
                "range": {
                  "startLineNumber": 257,
                  "startColumn": 1,
                  "endLineNumber": 257,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "          }",
                "range": {
                  "startLineNumber": 258,
                  "startColumn": 1,
                  "endLineNumber": 258,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 259,
                  "startColumn": 1,
                  "endLineNumber": 259,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 260,
                  "startColumn": 1,
                  "endLineNumber": 260,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "        map.addLayer(layerConfig);",
                "range": {
                  "startLineNumber": 261,
                  "startColumn": 1,
                  "endLineNumber": 261,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.add(layerId);",
                "range": {
                  "startLineNumber": 262,
                  "startColumn": 1,
                  "endLineNumber": 262,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 263,
                  "startColumn": 1,
                  "endLineNumber": 263,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "        // Add event listeners for non-polygon layers",
                "range": {
                  "startLineNumber": 264,
                  "startColumn": 1,
                  "endLineNumber": 264,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "        map.on('click', layerId, (e) => {",
                "range": {
                  "startLineNumber": 265,
                  "startColumn": 1,
                  "endLineNumber": 265,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "          const feature = e.features?.[0];",
                "range": {
                  "startLineNumber": 266,
                  "startColumn": 1,
                  "endLineNumber": 266,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          if (!feature) return;",
                "range": {
                  "startLineNumber": 267,
                  "startColumn": 1,
                  "endLineNumber": 267,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 268,
                  "startColumn": 1,
                  "endLineNumber": 268,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "          const coordinates = e.lngLat;",
                "range": {
                  "startLineNumber": 269,
                  "startColumn": 1,
                  "endLineNumber": 269,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "          const properties = feature.properties;",
                "range": {
                  "startLineNumber": 270,
                  "startColumn": 1,
                  "endLineNumber": 270,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "          const popupContent = layer.id === 'microplastics' ",
                "range": {
                  "startLineNumber": 271,
                  "startColumn": 1,
                  "endLineNumber": 271,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            ? formatMicroplasticsPopup(properties)",
                "range": {
                  "startLineNumber": 272,
                  "startColumn": 1,
                  "endLineNumber": 272,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "            : layer.id === 'nasa'",
                "range": {
                  "startLineNumber": 273,
                  "startColumn": 1,
                  "endLineNumber": 273,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "            ? formatNasaPopup(properties)",
                "range": {
                  "startLineNumber": 274,
                  "startColumn": 1,
                  "endLineNumber": 274,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "            : formatNtuaPopup(properties);",
                "range": {
                  "startLineNumber": 275,
                  "startColumn": 1,
                  "endLineNumber": 275,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 276,
                  "startColumn": 1,
                  "endLineNumber": 276,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "          new mapboxgl.Popup()",
                "range": {
                  "startLineNumber": 277,
                  "startColumn": 1,
                  "endLineNumber": 277,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "            .setLngLat(coordinates)",
                "range": {
                  "startLineNumber": 278,
                  "startColumn": 1,
                  "endLineNumber": 278,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            .setHTML(`",
                "range": {
                  "startLineNumber": 279,
                  "startColumn": 1,
                  "endLineNumber": 279,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "              <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">",
                "range": {
                  "startLineNumber": 280,
                  "startColumn": 1,
                  "endLineNumber": 280,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "                <div class=\"mb-3\">",
                "range": {
                  "startLineNumber": 281,
                  "startColumn": 1,
                  "endLineNumber": 281,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 282,
                  "startColumn": 1,
                  "endLineNumber": 282,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "                    <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°",
                "range": {
                  "startLineNumber": 283,
                  "startColumn": 1,
                  "endLineNumber": 283,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 284,
                  "startColumn": 1,
                  "endLineNumber": 284,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 285,
                  "startColumn": 1,
                  "endLineNumber": 285,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "                    <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°",
                "range": {
                  "startLineNumber": 286,
                  "startColumn": 1,
                  "endLineNumber": 286,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 287,
                  "startColumn": 1,
                  "endLineNumber": 287,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 288,
                  "startColumn": 1,
                  "endLineNumber": 288,
                  "endColumn": 81
                }
              }
            ],
            [
              {
                "text": "                <div class=\"flex flex-col space-y-0.5\">",
                "range": {
                  "startLineNumber": 289,
                  "startColumn": 1,
                  "endLineNumber": 289,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                  ${popupContent}",
                "range": {
                  "startLineNumber": 290,
                  "startColumn": 1,
                  "endLineNumber": 290,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 291,
                  "startColumn": 1,
                  "endLineNumber": 291,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "                ${properties?.DOI ? `",
                "range": {
                  "startLineNumber": 292,
                  "startColumn": 1,
                  "endLineNumber": 292,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "                  <button class=\"mt-2 text-sm\">",
                "range": {
                  "startLineNumber": 293,
                  "startColumn": 1,
                  "endLineNumber": 293,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "                    <a href=\"${properties.DOI}\" ",
                "range": {
                  "startLineNumber": 294,
                  "startColumn": 1,
                  "endLineNumber": 294,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "                       target=\"_blank\" ",
                "range": {
                  "startLineNumber": 295,
                  "startColumn": 1,
                  "endLineNumber": 295,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "                       rel=\"noopener noreferrer\"",
                "range": {
                  "startLineNumber": 296,
                  "startColumn": 1,
                  "endLineNumber": 296,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "                       class=\"text-blue-600 hover:text-blue-800 hover:underline\">",
                "range": {
                  "startLineNumber": 297,
                  "startColumn": 1,
                  "endLineNumber": 297,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "                      View Research Paper",
                "range": {
                  "startLineNumber": 298,
                  "startColumn": 1,
                  "endLineNumber": 298,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "                    </a>",
                "range": {
                  "startLineNumber": 299,
                  "startColumn": 1,
                  "endLineNumber": 299,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "                  </button>",
                "range": {
                  "startLineNumber": 300,
                  "startColumn": 1,
                  "endLineNumber": 300,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "                ` : ''}",
                "range": {
                  "startLineNumber": 301,
                  "startColumn": 1,
                  "endLineNumber": 301,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "              </div>",
                "range": {
                  "startLineNumber": 302,
                  "startColumn": 1,
                  "endLineNumber": 302,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "            `)",
                "range": {
                  "startLineNumber": 303,
                  "startColumn": 1,
                  "endLineNumber": 303,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "            .addTo(map);",
                "range": {
                  "startLineNumber": 304,
                  "startColumn": 1,
                  "endLineNumber": 304,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 305,
                  "startColumn": 1,
                  "endLineNumber": 305,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 306,
                  "startColumn": 1,
                  "endLineNumber": 306,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "        map.on('mouseenter', layerId, () => {",
                "range": {
                  "startLineNumber": 307,
                  "startColumn": 1,
                  "endLineNumber": 307,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "          map.getCanvas().style.cursor = 'pointer';",
                "range": {
                  "startLineNumber": 308,
                  "startColumn": 1,
                  "endLineNumber": 308,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 309,
                  "startColumn": 1,
                  "endLineNumber": 309,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 310,
                  "startColumn": 1,
                  "endLineNumber": 310,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "        map.on('mouseleave', layerId, () => {",
                "range": {
                  "startLineNumber": 311,
                  "startColumn": 1,
                  "endLineNumber": 311,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          map.getCanvas().style.cursor = '';",
                "range": {
                  "startLineNumber": 312,
                  "startColumn": 1,
                  "endLineNumber": 312,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 313,
                  "startColumn": 1,
                  "endLineNumber": 313,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 314,
                  "startColumn": 1,
                  "endLineNumber": 314,
                  "endColumn": 62
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 315,
                  "startColumn": 1,
                  "endLineNumber": 315,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "  }, [getFilteredData]);",
                "range": {
                  "startLineNumber": 316,
                  "startColumn": 1,
                  "endLineNumber": 316,
                  "endColumn": 68
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 317,
                  "startColumn": 1,
                  "endLineNumber": 317,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "  const loadMap = useCallback(() => {",
                "range": {
                  "startLineNumber": 318,
                  "startColumn": 1,
                  "endLineNumber": 318,
                  "endColumn": 120
                }
              }
            ],
            [
              {
                "text": "    // Only initialize map if it hasn't been initialized yet",
                "range": {
                  "startLineNumber": 319,
                  "startColumn": 1,
                  "endLineNumber": 319,
                  "endColumn": 80
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current && mapContainerRef.current) {",
                "range": {
                  "startLineNumber": 320,
                  "startColumn": 1,
                  "endLineNumber": 320,
                  "endColumn": 115
                }
              }
            ],
            [
              {
                "text": "      mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;",
                "range": {
                  "startLineNumber": 321,
                  "startColumn": 1,
                  "endLineNumber": 321,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 322,
                  "startColumn": 1,
                  "endLineNumber": 322,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "      mapRef.current = new mapboxgl.Map({",
                "range": {
                  "startLineNumber": 323,
                  "startColumn": 1,
                  "endLineNumber": 323,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "        container: mapContainerRef.current,",
                "range": {
                  "startLineNumber": 324,
                  "startColumn": 1,
                  "endLineNumber": 324,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "        style: 'mapbox://styles/mapbox/streets-v12',",
                "range": {
                  "startLineNumber": 325,
                  "startColumn": 1,
                  "endLineNumber": 325,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "        center: [-105.272148, 40.047050],",
                "range": {
                  "startLineNumber": 326,
                  "startColumn": 1,
                  "endLineNumber": 326,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        zoom: 2",
                "range": {
                  "startLineNumber": 327,
                  "startColumn": 1,
                  "endLineNumber": 327,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 328,
                  "startColumn": 1,
                  "endLineNumber": 328,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 329,
                  "startColumn": 1,
                  "endLineNumber": 329,
                  "endColumn": 161
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.on('load', () => {",
                "range": {
                  "startLineNumber": 330,
                  "startColumn": 1,
                  "endLineNumber": 330,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "        layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 331,
                  "startColumn": 1,
                  "endLineNumber": 331,
                  "endColumn": 81
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 332,
                  "startColumn": 1,
                  "endLineNumber": 332,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 333,
                  "startColumn": 1,
                  "endLineNumber": 333,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "  }, [layers, updateLayer]);",
                "range": {
                  "startLineNumber": 334,
                  "startColumn": 1,
                  "endLineNumber": 334,
                  "endColumn": 153
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 335,
                  "startColumn": 1,
                  "endLineNumber": 335,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "  // Initialize map only once",
                "range": {
                  "startLineNumber": 336,
                  "startColumn": 1,
                  "endLineNumber": 336,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "  useEffect(() => {",
                "range": {
                  "startLineNumber": 337,
                  "startColumn": 1,
                  "endLineNumber": 337,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "    loadMap();",
                "range": {
                  "startLineNumber": 338,
                  "startColumn": 1,
                  "endLineNumber": 338,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "  }, [loadMap]); // Empty dependency array since we only want to initialize once",
                "range": {
                  "startLineNumber": 339,
                  "startColumn": 1,
                  "endLineNumber": 339,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 340,
                  "startColumn": 1,
                  "endLineNumber": 340,
                  "endColumn": 2
                }
              }
            ],
            [
              {
                "text": "  // Update layers when they change",
                "range": {
                  "startLineNumber": 341,
                  "startColumn": 1,
                  "endLineNumber": 341,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  useEffect(() => {",
                "range": {
                  "startLineNumber": 342,
                  "startColumn": 1,
                  "endLineNumber": 342,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    if (mapRef.current?.loaded()) {",
                "range": {
                  "startLineNumber": 343,
                  "startColumn": 1,
                  "endLineNumber": 343,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 344,
                  "startColumn": 1,
                  "endLineNumber": 344,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    }",
                "range": {
                  "startLineNumber": 345,
                  "startColumn": 1,
                  "endLineNumber": 345,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  }, [layers, updateLayer]);",
                "range": {
                  "startLineNumber": 346,
                  "startColumn": 1,
                  "endLineNumber": 346,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 347,
                  "startColumn": 1,
                  "endLineNumber": 347,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  const toggleMapStyle = useCallback(() => {",
                "range": {
                  "startLineNumber": 348,
                  "startColumn": 1,
                  "endLineNumber": 348,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    const satellite = 'mapbox://styles/mapbox/satellite-v9';",
                "range": {
                  "startLineNumber": 349,
                  "startColumn": 1,
                  "endLineNumber": 349,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    const streets = 'mapbox://styles/mapbox/streets-v12';",
                "range": {
                  "startLineNumber": 350,
                  "startColumn": 1,
                  "endLineNumber": 350,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    ",
                "range": {
                  "startLineNumber": 351,
                  "startColumn": 1,
                  "endLineNumber": 351,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    if (mapRef.current) {",
                "range": {
                  "startLineNumber": 352,
                  "startColumn": 1,
                  "endLineNumber": 352,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      mapRef.current.setStyle(isStreetView ? satellite : streets);",
                "range": {
                  "startLineNumber": 353,
                  "startColumn": 1,
                  "endLineNumber": 353,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      setIsStreetView(!isStreetView);",
                "range": {
                  "startLineNumber": 354,
                  "startColumn": 1,
                  "endLineNumber": 354,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      ",
                "range": {
                  "startLineNumber": 355,
                  "startColumn": 1,
                  "endLineNumber": 355,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      // Re-add data layers after style change",
                "range": {
                  "startLineNumber": 356,
                  "startColumn": 1,
                  "endLineNumber": 356,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      mapRef.current.once('style.load', () => {",
                "range": {
                  "startLineNumber": 357,
                  "startColumn": 1,
                  "endLineNumber": 357,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 358,
                  "startColumn": 1,
                  "endLineNumber": 358,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      });",
                "range": {
                  "startLineNumber": 359,
                  "startColumn": 1,
                  "endLineNumber": 359,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    }",
                "range": {
                  "startLineNumber": 360,
                  "startColumn": 1,
                  "endLineNumber": 360,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  }, [isStreetView, layers, updateLayer]);",
                "range": {
                  "startLineNumber": 361,
                  "startColumn": 1,
                  "endLineNumber": 361,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 362,
                  "startColumn": 1,
                  "endLineNumber": 362,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  return (",
                "range": {
                  "startLineNumber": 363,
                  "startColumn": 1,
                  "endLineNumber": 363,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    <div className=\"relative w-full h-full\">",
                "range": {
                  "startLineNumber": 364,
                  "startColumn": 1,
                  "endLineNumber": 364,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      <div ref={mapContainerRef} className=\"w-full h-full\" />",
                "range": {
                  "startLineNumber": 365,
                  "startColumn": 1,
                  "endLineNumber": 365,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      ",
                "range": {
                  "startLineNumber": 366,
                  "startColumn": 1,
                  "endLineNumber": 366,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      <div className=\"absolute top-16 right-4 flex flex-col gap-2\">",
                "range": {
                  "startLineNumber": 367,
                  "startColumn": 1,
                  "endLineNumber": 367,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        {layers.map(layer => layer.visible && (",
                "range": {
                  "startLineNumber": 368,
                  "startColumn": 1,
                  "endLineNumber": 368,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n          <div key={layer.id} className=\"bg-white/30 dark:bg-black/40 backdrop-blur-md px-4 py-2 rounded-md shadow-md\">",
                "range": {
                  "startLineNumber": 369,
                  "startColumn": 1,
                  "endLineNumber": 369,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n            <p className=\"font-medium text-foreground flex items-center gap-2\">",
                "range": {
                  "startLineNumber": 370,
                  "startColumn": 1,
                  "endLineNumber": 370,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n              <span className=\"w-3 h-3 inline-block rounded-full\" style={{ backgroundColor: layer.color }}></span>",
                "range": {
                  "startLineNumber": 371,
                  "startColumn": 1,
                  "endLineNumber": 371,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n              {dataPointCount[layer.id]} points",
                "range": {
                  "startLineNumber": 372,
                  "startColumn": 1,
                  "endLineNumber": 372,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n            </p>",
                "range": {
                  "startLineNumber": 373,
                  "startColumn": 1,
                  "endLineNumber": 373,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n          </div>",
                "range": {
                  "startLineNumber": 374,
                  "startColumn": 1,
                  "endLineNumber": 374,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        ))}",
                "range": {
                  "startLineNumber": 375,
                  "startColumn": 1,
                  "endLineNumber": 375,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      </div>",
                "range": {
                  "startLineNumber": 376,
                  "startColumn": 1,
                  "endLineNumber": 376,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 377,
                  "startColumn": 1,
                  "endLineNumber": 377,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      <button",
                "range": {
                  "startLineNumber": 378,
                  "startColumn": 1,
                  "endLineNumber": 378,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        onClick={toggleMapStyle}",
                "range": {
                  "startLineNumber": 379,
                  "startColumn": 1,
                  "endLineNumber": 379,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        className=\"group absolute bottom-4 right-4 ml-auto bg-black/40 backdrop-blur-md p-2 rounded-md shadow-md hover:bg-deep-water transition-colors text-2xl\"",
                "range": {
                  "startLineNumber": 380,
                  "startColumn": 1,
                  "endLineNumber": 380,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      >",
                "range": {
                  "startLineNumber": 381,
                  "startColumn": 1,
                  "endLineNumber": 381,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        <span className=\"transition-opacity duration-200 group-hover:opacity-0\">",
                "range": {
                  "startLineNumber": 382,
                  "startColumn": 1,
                  "endLineNumber": 382,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n          {isStreetView ? '🚦' : '🛰️'}",
                "range": {
                  "startLineNumber": 383,
                  "startColumn": 1,
                  "endLineNumber": 383,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        </span>",
                "range": {
                  "startLineNumber": 384,
                  "startColumn": 1,
                  "endLineNumber": 384,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        <span className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 transition-opacity duration-200 group-hover:opacity-100\">",
                "range": {
                  "startLineNumber": 385,
                  "startColumn": 1,
                  "endLineNumber": 385,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n          {isStreetView ? '🛰️' : '🚦'}",
                "range": {
                  "startLineNumber": 386,
                  "startColumn": 1,
                  "endLineNumber": 386,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n        </span>",
                "range": {
                  "startLineNumber": 387,
                  "startColumn": 1,
                  "endLineNumber": 387,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      </button>",
                "range": {
                  "startLineNumber": 388,
                  "startColumn": 1,
                  "endLineNumber": 388,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    </div>",
                "range": {
                  "startLineNumber": 389,
                  "startColumn": 1,
                  "endLineNumber": 389,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  );",
                "range": {
                  "startLineNumber": 390,
                  "startColumn": 1,
                  "endLineNumber": 390,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n}",
                "range": {
                  "startLineNumber": 391,
                  "startColumn": 1,
                  "endLineNumber": 391,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 392,
                  "startColumn": 1,
                  "endLineNumber": 392,
                  "endColumn": 1
                }
              }
            ],
            [],
            [
              {
                "text": "'use client';",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "import { useCallback, useEffect, useRef, useState } from 'react';",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 66
                }
              }
            ],
            [
              {
                "text": "import mapboxgl from 'mapbox-gl';",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "import 'mapbox-gl/dist/mapbox-gl.css';",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "import { useData } from '@/contexts/DataContext';",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatDate = (dateString: string) => {",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "  return new Date(dateString).toLocaleDateString('en-US', {",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 60
                }
              }
            ],
            [
              {
                "text": "    year: 'numeric',",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "    month: 'long',",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "    day: 'numeric'",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "  });",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatMicroplasticsPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 78
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  const relevantData = {",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "    'Method': properties.SAMPMETHOD,",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "    'Density': properties.DENSTEXT,",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Unit': properties.UNIT,",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "    'Organization': properties.ORG,",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Date': formatDate(properties.Date),",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "    'Reference': properties.SHORTREF,",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    'DOI': properties.DOI",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "  };",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  return Object.entries(relevantData)",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    .map(([key, value]) => value ? ",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    `",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">${key}:</span> ${value}",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "    <p>",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "    ` : '')",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "    .join('');",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatNasaPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  return `",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">Detection:</span> Floating Marine Debris",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "    </p>",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "  `;",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatNtuaPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  return `",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">Detection:</span> Marine Floating Debris",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "    </p>",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "  `;",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const calculatePolygonCentroid = (coordinates: number[][][]) => {",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 66
                }
              }
            ],
            [
              {
                "text": "  let totalX = 0;",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 18
                }
              }
            ],
            [
              {
                "text": "  let totalY = 0;",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 18
                }
              }
            ],
            [
              {
                "text": "  let pointCount = 0;",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 22
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  // Handle the outer ring of the polygon",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "  coordinates[0].forEach(point => {",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    totalX += point[0];",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "    totalY += point[1];",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "    pointCount++;",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 18
                }
              }
            ],
            [
              {
                "text": "  });",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  return [totalX / pointCount, totalY / pointCount];",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const createPointFeatureFromPolygon = (feature: GeoJSON.Feature): GeoJSON.Feature => {",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 87
                }
              }
            ],
            [
              {
                "text": "  const geometry = feature.geometry as GeoJSON.Polygon | GeoJSON.MultiPolygon;",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 79
                }
              }
            ],
            [
              {
                "text": "  let centroid;",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  if (geometry.type === 'Polygon') {",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "    centroid = calculatePolygonCentroid(geometry.coordinates);",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 63
                }
              }
            ],
            [
              {
                "text": "  } else {",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    // For MultiPolygon, use the centroid of the first polygon",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 63
                }
              }
            ],
            [
              {
                "text": "    centroid = calculatePolygonCentroid(geometry.coordinates[0]);",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 66
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 4
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  return {",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    type: 'Feature',",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "    geometry: {",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "      type: 'Point',",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "      coordinates: centroid",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "    },",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "    properties: feature.properties",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "  };",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "export default function Map() {",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "  const mapContainerRef = useRef<HTMLDivElement>(null);",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "  const mapRef = useRef<mapboxgl.Map | null>(null);",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "  const layersRef = useRef<Set<string>>(new Set());",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "  const [isStreetView, setIsStreetView] = useState(true);",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "  const { layers, getFilteredData, dataPointCount } = useData();",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 65
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 96
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current) return;",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    const layerId = `${layer.id}-layer`;",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "    const map = mapRef.current;",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "    const data = getFilteredData(layer.id);",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    // Remove existing layers and sources",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "    [layerId, `${layerId}-point`].forEach(id => {",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "      if (layersRef.current.has(id) && map.getLayer(id)) {",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 59
                }
              }
            ],
            [
              {
                "text": "        map.removeLayer(id);",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.delete(id);",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    if (map.getSource(layer.id)) {",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "      map.removeSource(layer.id);",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "    if (map.getSource(`${layer.id}-point`)) {",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "      map.removeSource(`${layer.id}-point`);",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    // Add layer if it's meant to be visible",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "    if (layer.visible) {",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "      const firstFeature = data.features[0];",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 117
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      if (isPolygon) {",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "        // Add the original polygon source",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "        map.addSource(layer.id, {",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "          type: 'geojson',",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "          data: data",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        // Create a point source from polygon centroids",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "        const pointData: GeoJSON.FeatureCollection = {",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 55
                }
              }
            ],
            [
              {
                "text": "          type: 'FeatureCollection',",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "          features: data.features.map(createPointFeatureFromPolygon)",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        map.addSource(`${layer.id}-point`, {",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "          type: 'geojson',",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "          data: pointData",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        // Add point layer for low zoom levels",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "        const pointLayerId = `${layerId}-point`;",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "        const pointLayer: mapboxgl.LayerSpecification = {",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "          id: pointLayerId,",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "          type: 'circle',",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "          source: `${layer.id}-point`,",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "          maxzoom: 10,",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "          paint: {",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "            'circle-radius': [",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 31
                }
              }
            ],
            [
              {
                "text": "              'interpolate',",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "              ['linear'],",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "              ['zoom'],",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "              0, 4,",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "              8, 8",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "            ],",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "            'circle-color': layer.color,",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "            'circle-opacity': 0.6,",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-width': 1,",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-color': '#ffffff',",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-opacity': 1",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "          }",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "        map.addLayer(pointLayer);",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.add(pointLayerId);",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        // Add polygon layer for high zoom levels",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "        const polygonLayer: mapboxgl.LayerSpecification = {",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 60
                }
              }
            ],
            [
              {
                "text": "          id: layerId,",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "          type: 'fill',",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "          source: layer.id,",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "          minzoom: 10,",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "          paint: {",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "            'fill-color': layer.color,",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "            'fill-opacity': 0.6,",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "            'fill-outline-color': '#ffffff'",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "          }",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "        map.addLayer(polygonLayer);",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.add(layerId);",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        // Add click handlers for both layers",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "        [pointLayerId, layerId].forEach(id => {",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "          map.on('click', id, (e) => {",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "            const feature = e.features?.[0];",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "            if (!feature) return;",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            const coordinates = e.lngLat;",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "            const properties = feature.properties;",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 51
                }
              }
            ],
            [
              {
                "text": "            const popupContent = layer.id === 'microplastics' ",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 63
                }
              }
            ],
            [
              {
                "text": "              ? formatMicroplasticsPopup(properties)",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "              : layer.id === 'nasa'",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "              ? formatNasaPopup(properties)",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "              : formatNtuaPopup(properties);",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            new mapboxgl.Popup()",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "              .setLngLat(coordinates)",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "              .setHTML(`",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 73
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"mb-3\">",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "                    <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "                      <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 98
                }
              }
            ],
            [
              {
                "text": "                    </div>",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "                    <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "                      <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 99
                }
              }
            ],
            [
              {
                "text": "                    </div>",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"flex flex-col space-y-0.5\">",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "                    ${popupContent}",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                  ${properties?.DOI ? `",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                    <button class=\"mt-2 text-sm\">",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "                      <a href=\"${properties.DOI}\" ",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 51
                }
              }
            ],
            [
              {
                "text": "                         target=\"_blank\" ",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "                         rel=\"noopener noreferrer\"",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 51
                }
              }
            ],
            [
              {
                "text": "                         class=\"text-blue-600 hover:text-blue-800 hover:underline\">",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 84
                }
              }
            ],
            [
              {
                "text": "                        View Research Paper",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "                      </a>",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "                    </button>",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "                  ` : ''}",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "              `)",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "              .addTo(map);",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "          });",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          map.on('mouseenter', id, () => {",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "            map.getCanvas().style.cursor = 'pointer';",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "          });",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          map.on('mouseleave', id, () => {",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "            map.getCanvas().style.cursor = '';",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1,
                  "endLineNumber": 236,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "          });",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1,
                  "endLineNumber": 237,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1,
                  "endLineNumber": 238,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1,
                  "endLineNumber": 239,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "        // For non-polygon data, keep the existing circle layer logic",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1,
                  "endLineNumber": 240,
                  "endColumn": 70
                }
              }
            ],
            [
              {
                "text": "        const layerConfig: mapboxgl.LayerSpecification = {",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1,
                  "endLineNumber": 241,
                  "endColumn": 59
                }
              }
            ],
            [
              {
                "text": "          id: layerId,",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1,
                  "endLineNumber": 242,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "          type: 'circle',",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1,
                  "endLineNumber": 243,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "          source: layer.id,",
                "range": {
                  "startLineNumber": 244,
                  "startColumn": 1,
                  "endLineNumber": 244,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "          paint: {",
                "range": {
                  "startLineNumber": 245,
                  "startColumn": 1,
                  "endLineNumber": 245,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "            'circle-radius': [",
                "range": {
                  "startLineNumber": 246,
                  "startColumn": 1,
                  "endLineNumber": 246,
                  "endColumn": 31
                }
              }
            ],
            [
              {
                "text": "              'interpolate',",
                "range": {
                  "startLineNumber": 247,
                  "startColumn": 1,
                  "endLineNumber": 247,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "              ['linear'],",
                "range": {
                  "startLineNumber": 248,
                  "startColumn": 1,
                  "endLineNumber": 248,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "              ['zoom'],",
                "range": {
                  "startLineNumber": 249,
                  "startColumn": 1,
                  "endLineNumber": 249,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "              0, 4,",
                "range": {
                  "startLineNumber": 250,
                  "startColumn": 1,
                  "endLineNumber": 250,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "              8, 8",
                "range": {
                  "startLineNumber": 251,
                  "startColumn": 1,
                  "endLineNumber": 251,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "            ],",
                "range": {
                  "startLineNumber": 252,
                  "startColumn": 1,
                  "endLineNumber": 252,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "            'circle-color': layer.color,",
                "range": {
                  "startLineNumber": 253,
                  "startColumn": 1,
                  "endLineNumber": 253,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "            'circle-opacity': 0.6,",
                "range": {
                  "startLineNumber": 254,
                  "startColumn": 1,
                  "endLineNumber": 254,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-width': 1,",
                "range": {
                  "startLineNumber": 255,
                  "startColumn": 1,
                  "endLineNumber": 255,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-color': '#ffffff',",
                "range": {
                  "startLineNumber": 256,
                  "startColumn": 1,
                  "endLineNumber": 256,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-opacity': 1",
                "range": {
                  "startLineNumber": 257,
                  "startColumn": 1,
                  "endLineNumber": 257,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "          }",
                "range": {
                  "startLineNumber": 258,
                  "startColumn": 1,
                  "endLineNumber": 258,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 259,
                  "startColumn": 1,
                  "endLineNumber": 259,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 260,
                  "startColumn": 1,
                  "endLineNumber": 260,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        map.addLayer(layerConfig);",
                "range": {
                  "startLineNumber": 261,
                  "startColumn": 1,
                  "endLineNumber": 261,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.add(layerId);",
                "range": {
                  "startLineNumber": 262,
                  "startColumn": 1,
                  "endLineNumber": 262,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 263,
                  "startColumn": 1,
                  "endLineNumber": 263,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        // Add event listeners for non-polygon layers",
                "range": {
                  "startLineNumber": 264,
                  "startColumn": 1,
                  "endLineNumber": 264,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "        map.on('click', layerId, (e) => {",
                "range": {
                  "startLineNumber": 265,
                  "startColumn": 1,
                  "endLineNumber": 265,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "          const feature = e.features?.[0];",
                "range": {
                  "startLineNumber": 266,
                  "startColumn": 1,
                  "endLineNumber": 266,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "          if (!feature) return;",
                "range": {
                  "startLineNumber": 267,
                  "startColumn": 1,
                  "endLineNumber": 267,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 268,
                  "startColumn": 1,
                  "endLineNumber": 268,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          const coordinates = e.lngLat;",
                "range": {
                  "startLineNumber": 269,
                  "startColumn": 1,
                  "endLineNumber": 269,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "          const properties = feature.properties;",
                "range": {
                  "startLineNumber": 270,
                  "startColumn": 1,
                  "endLineNumber": 270,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "          const popupContent = layer.id === 'microplastics' ",
                "range": {
                  "startLineNumber": 271,
                  "startColumn": 1,
                  "endLineNumber": 271,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "            ? formatMicroplasticsPopup(properties)",
                "range": {
                  "startLineNumber": 272,
                  "startColumn": 1,
                  "endLineNumber": 272,
                  "endColumn": 51
                }
              }
            ],
            [
              {
                "text": "            : layer.id === 'nasa'",
                "range": {
                  "startLineNumber": 273,
                  "startColumn": 1,
                  "endLineNumber": 273,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "            ? formatNasaPopup(properties)",
                "range": {
                  "startLineNumber": 274,
                  "startColumn": 1,
                  "endLineNumber": 274,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "            : formatNtuaPopup(properties);",
                "range": {
                  "startLineNumber": 275,
                  "startColumn": 1,
                  "endLineNumber": 275,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 276,
                  "startColumn": 1,
                  "endLineNumber": 276,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          new mapboxgl.Popup()",
                "range": {
                  "startLineNumber": 277,
                  "startColumn": 1,
                  "endLineNumber": 277,
                  "endColumn": 31
                }
              }
            ],
            [
              {
                "text": "            .setLngLat(coordinates)",
                "range": {
                  "startLineNumber": 278,
                  "startColumn": 1,
                  "endLineNumber": 278,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "            .setHTML(`",
                "range": {
                  "startLineNumber": 279,
                  "startColumn": 1,
                  "endLineNumber": 279,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "              <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">",
                "range": {
                  "startLineNumber": 280,
                  "startColumn": 1,
                  "endLineNumber": 280,
                  "endColumn": 71
                }
              }
            ],
            [
              {
                "text": "                <div class=\"mb-3\">",
                "range": {
                  "startLineNumber": 281,
                  "startColumn": 1,
                  "endLineNumber": 281,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 282,
                  "startColumn": 1,
                  "endLineNumber": 282,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "                    <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°",
                "range": {
                  "startLineNumber": 283,
                  "startColumn": 1,
                  "endLineNumber": 283,
                  "endColumn": 96
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 284,
                  "startColumn": 1,
                  "endLineNumber": 284,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 285,
                  "startColumn": 1,
                  "endLineNumber": 285,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "                    <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°",
                "range": {
                  "startLineNumber": 286,
                  "startColumn": 1,
                  "endLineNumber": 286,
                  "endColumn": 97
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 287,
                  "startColumn": 1,
                  "endLineNumber": 287,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 288,
                  "startColumn": 1,
                  "endLineNumber": 288,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "                <div class=\"flex flex-col space-y-0.5\">",
                "range": {
                  "startLineNumber": 289,
                  "startColumn": 1,
                  "endLineNumber": 289,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "                  ${popupContent}",
                "range": {
                  "startLineNumber": 290,
                  "startColumn": 1,
                  "endLineNumber": 290,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 291,
                  "startColumn": 1,
                  "endLineNumber": 291,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "                ${properties?.DOI ? `",
                "range": {
                  "startLineNumber": 292,
                  "startColumn": 1,
                  "endLineNumber": 292,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "                  <button class=\"mt-2 text-sm\">",
                "range": {
                  "startLineNumber": 293,
                  "startColumn": 1,
                  "endLineNumber": 293,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "                    <a href=\"${properties.DOI}\" ",
                "range": {
                  "startLineNumber": 294,
                  "startColumn": 1,
                  "endLineNumber": 294,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "                       target=\"_blank\" ",
                "range": {
                  "startLineNumber": 295,
                  "startColumn": 1,
                  "endLineNumber": 295,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                       rel=\"noopener noreferrer\"",
                "range": {
                  "startLineNumber": 296,
                  "startColumn": 1,
                  "endLineNumber": 296,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "                       class=\"text-blue-600 hover:text-blue-800 hover:underline\">",
                "range": {
                  "startLineNumber": 297,
                  "startColumn": 1,
                  "endLineNumber": 297,
                  "endColumn": 82
                }
              }
            ],
            [
              {
                "text": "                      View Research Paper",
                "range": {
                  "startLineNumber": 298,
                  "startColumn": 1,
                  "endLineNumber": 298,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "                    </a>",
                "range": {
                  "startLineNumber": 299,
                  "startColumn": 1,
                  "endLineNumber": 299,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                  </button>",
                "range": {
                  "startLineNumber": 300,
                  "startColumn": 1,
                  "endLineNumber": 300,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "                ` : ''}",
                "range": {
                  "startLineNumber": 301,
                  "startColumn": 1,
                  "endLineNumber": 301,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "              </div>",
                "range": {
                  "startLineNumber": 302,
                  "startColumn": 1,
                  "endLineNumber": 302,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "            `)",
                "range": {
                  "startLineNumber": 303,
                  "startColumn": 1,
                  "endLineNumber": 303,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "            .addTo(map);",
                "range": {
                  "startLineNumber": 304,
                  "startColumn": 1,
                  "endLineNumber": 304,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 305,
                  "startColumn": 1,
                  "endLineNumber": 305,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 306,
                  "startColumn": 1,
                  "endLineNumber": 306,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        map.on('mouseenter', layerId, () => {",
                "range": {
                  "startLineNumber": 307,
                  "startColumn": 1,
                  "endLineNumber": 307,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "          map.getCanvas().style.cursor = 'pointer';",
                "range": {
                  "startLineNumber": 308,
                  "startColumn": 1,
                  "endLineNumber": 308,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 309,
                  "startColumn": 1,
                  "endLineNumber": 309,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 310,
                  "startColumn": 1,
                  "endLineNumber": 310,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        map.on('mouseleave', layerId, () => {",
                "range": {
                  "startLineNumber": 311,
                  "startColumn": 1,
                  "endLineNumber": 311,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "          map.getCanvas().style.cursor = '';",
                "range": {
                  "startLineNumber": 312,
                  "startColumn": 1,
                  "endLineNumber": 312,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 313,
                  "startColumn": 1,
                  "endLineNumber": 313,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 314,
                  "startColumn": 1,
                  "endLineNumber": 314,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 315,
                  "startColumn": 1,
                  "endLineNumber": 315,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "  }, [getFilteredData]);",
                "range": {
                  "startLineNumber": 316,
                  "startColumn": 1,
                  "endLineNumber": 316,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 317,
                  "startColumn": 1,
                  "endLineNumber": 317,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  const loadMap = useCallback(() => {",
                "range": {
                  "startLineNumber": 318,
                  "startColumn": 1,
                  "endLineNumber": 318,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    // Only initialize map if it hasn't been initialized yet",
                "range": {
                  "startLineNumber": 319,
                  "startColumn": 1,
                  "endLineNumber": 319,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current && mapContainerRef.current) {",
                "range": {
                  "startLineNumber": 320,
                  "startColumn": 1,
                  "endLineNumber": 320,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "      mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;",
                "range": {
                  "startLineNumber": 321,
                  "startColumn": 1,
                  "endLineNumber": 321,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 322,
                  "startColumn": 1,
                  "endLineNumber": 322,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      mapRef.current = new mapboxgl.Map({",
                "range": {
                  "startLineNumber": 323,
                  "startColumn": 1,
                  "endLineNumber": 323,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "        container: mapContainerRef.current,",
                "range": {
                  "startLineNumber": 324,
                  "startColumn": 1,
                  "endLineNumber": 324,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "        style: 'mapbox://styles/mapbox/streets-v12',",
                "range": {
                  "startLineNumber": 325,
                  "startColumn": 1,
                  "endLineNumber": 325,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "        center: [-105.272148, 40.047050],",
                "range": {
                  "startLineNumber": 326,
                  "startColumn": 1,
                  "endLineNumber": 326,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "        zoom: 2",
                "range": {
                  "startLineNumber": 327,
                  "startColumn": 1,
                  "endLineNumber": 327,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 328,
                  "startColumn": 1,
                  "endLineNumber": 328,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 329,
                  "startColumn": 1,
                  "endLineNumber": 329,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.on('load', () => {",
                "range": {
                  "startLineNumber": 330,
                  "startColumn": 1,
                  "endLineNumber": 330,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "        layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 331,
                  "startColumn": 1,
                  "endLineNumber": 331,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 332,
                  "startColumn": 1,
                  "endLineNumber": 332,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 333,
                  "startColumn": 1,
                  "endLineNumber": 333,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "  }, [layers, updateLayer]);",
                "range": {
                  "startLineNumber": 334,
                  "startColumn": 1,
                  "endLineNumber": 334,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 335,
                  "startColumn": 1,
                  "endLineNumber": 335,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  // Initialize map only once",
                "range": {
                  "startLineNumber": 336,
                  "startColumn": 1,
                  "endLineNumber": 336,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  useEffect(() => {",
                "range": {
                  "startLineNumber": 337,
                  "startColumn": 1,
                  "endLineNumber": 337,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "    loadMap();",
                "range": {
                  "startLineNumber": 338,
                  "startColumn": 1,
                  "endLineNumber": 338,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "  }, [loadMap]); // Empty dependency array since we only want to initialize once",
                "range": {
                  "startLineNumber": 339,
                  "startColumn": 1,
                  "endLineNumber": 339,
                  "endColumn": 81
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 340,
                  "startColumn": 1,
                  "endLineNumber": 340,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  // Update layers when they change",
                "range": {
                  "startLineNumber": 341,
                  "startColumn": 1,
                  "endLineNumber": 341,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "  useEffect(() => {",
                "range": {
                  "startLineNumber": 342,
                  "startColumn": 1,
                  "endLineNumber": 342,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "    if (mapRef.current?.loaded()) {",
                "range": {
                  "startLineNumber": 343,
                  "startColumn": 1,
                  "endLineNumber": 343,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "      layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 344,
                  "startColumn": 1,
                  "endLineNumber": 344,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 345,
                  "startColumn": 1,
                  "endLineNumber": 345,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "  }, [layers, updateLayer]);",
                "range": {
                  "startLineNumber": 346,
                  "startColumn": 1,
                  "endLineNumber": 346,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 347,
                  "startColumn": 1,
                  "endLineNumber": 347,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  const toggleMapStyle = useCallback(() => {",
                "range": {
                  "startLineNumber": 348,
                  "startColumn": 1,
                  "endLineNumber": 348,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "    const satellite = 'mapbox://styles/mapbox/satellite-v9';",
                "range": {
                  "startLineNumber": 349,
                  "startColumn": 1,
                  "endLineNumber": 349,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "    const streets = 'mapbox://styles/mapbox/streets-v12';",
                "range": {
                  "startLineNumber": 350,
                  "startColumn": 1,
                  "endLineNumber": 350,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 351,
                  "startColumn": 1,
                  "endLineNumber": 351,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "    if (mapRef.current) {",
                "range": {
                  "startLineNumber": 352,
                  "startColumn": 1,
                  "endLineNumber": 352,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.setStyle(isStreetView ? satellite : streets);",
                "range": {
                  "startLineNumber": 353,
                  "startColumn": 1,
                  "endLineNumber": 353,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "      setIsStreetView(!isStreetView);",
                "range": {
                  "startLineNumber": 354,
                  "startColumn": 1,
                  "endLineNumber": 354,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "      ",
                "range": {
                  "startLineNumber": 355,
                  "startColumn": 1,
                  "endLineNumber": 355,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "      // Re-add data layers after style change",
                "range": {
                  "startLineNumber": 356,
                  "startColumn": 1,
                  "endLineNumber": 356,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.once('style.load', () => {",
                "range": {
                  "startLineNumber": 357,
                  "startColumn": 1,
                  "endLineNumber": 357,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "        layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 358,
                  "startColumn": 1,
                  "endLineNumber": 358,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 359,
                  "startColumn": 1,
                  "endLineNumber": 359,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 360,
                  "startColumn": 1,
                  "endLineNumber": 360,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "  }, [isStreetView, layers, updateLayer]);",
                "range": {
                  "startLineNumber": 361,
                  "startColumn": 1,
                  "endLineNumber": 361,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 362,
                  "startColumn": 1,
                  "endLineNumber": 362,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  return (",
                "range": {
                  "startLineNumber": 363,
                  "startColumn": 1,
                  "endLineNumber": 363,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <div className=\"relative w-full h-full\">",
                "range": {
                  "startLineNumber": 364,
                  "startColumn": 1,
                  "endLineNumber": 364,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "      <div ref={mapContainerRef} className=\"w-full h-full\" />",
                "range": {
                  "startLineNumber": 365,
                  "startColumn": 1,
                  "endLineNumber": 365,
                  "endColumn": 62
                }
              }
            ],
            [
              {
                "text": "      ",
                "range": {
                  "startLineNumber": 366,
                  "startColumn": 1,
                  "endLineNumber": 366,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "      <div className=\"absolute top-16 right-4 flex flex-col gap-2\">",
                "range": {
                  "startLineNumber": 367,
                  "startColumn": 1,
                  "endLineNumber": 367,
                  "endColumn": 68
                }
              }
            ],
            [
              {
                "text": "        {layers.map(layer => layer.visible && (",
                "range": {
                  "startLineNumber": 368,
                  "startColumn": 1,
                  "endLineNumber": 368,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "          <div key={layer.id} className=\"bg-white/30 dark:bg-black/40 backdrop-blur-md px-4 py-2 rounded-md shadow-md\">",
                "range": {
                  "startLineNumber": 369,
                  "startColumn": 1,
                  "endLineNumber": 369,
                  "endColumn": 120
                }
              }
            ],
            [
              {
                "text": "            <p className=\"font-medium text-foreground flex items-center gap-2\">",
                "range": {
                  "startLineNumber": 370,
                  "startColumn": 1,
                  "endLineNumber": 370,
                  "endColumn": 80
                }
              }
            ],
            [
              {
                "text": "              <span className=\"w-3 h-3 inline-block rounded-full\" style={{ backgroundColor: layer.color }}></span>",
                "range": {
                  "startLineNumber": 371,
                  "startColumn": 1,
                  "endLineNumber": 371,
                  "endColumn": 115
                }
              }
            ],
            [
              {
                "text": "              {dataPointCount[layer.id]} points",
                "range": {
                  "startLineNumber": 372,
                  "startColumn": 1,
                  "endLineNumber": 372,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "            </p>",
                "range": {
                  "startLineNumber": 373,
                  "startColumn": 1,
                  "endLineNumber": 373,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "          </div>",
                "range": {
                  "startLineNumber": 374,
                  "startColumn": 1,
                  "endLineNumber": 374,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "        ))}",
                "range": {
                  "startLineNumber": 375,
                  "startColumn": 1,
                  "endLineNumber": 375,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "      </div>",
                "range": {
                  "startLineNumber": 376,
                  "startColumn": 1,
                  "endLineNumber": 376,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 377,
                  "startColumn": 1,
                  "endLineNumber": 377,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      <button",
                "range": {
                  "startLineNumber": 378,
                  "startColumn": 1,
                  "endLineNumber": 378,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "        onClick={toggleMapStyle}",
                "range": {
                  "startLineNumber": 379,
                  "startColumn": 1,
                  "endLineNumber": 379,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "        className=\"group absolute bottom-4 right-4 ml-auto bg-black/40 backdrop-blur-md p-2 rounded-md shadow-md hover:bg-deep-water transition-colors text-2xl\"",
                "range": {
                  "startLineNumber": 380,
                  "startColumn": 1,
                  "endLineNumber": 380,
                  "endColumn": 161
                }
              }
            ],
            [
              {
                "text": "      >",
                "range": {
                  "startLineNumber": 381,
                  "startColumn": 1,
                  "endLineNumber": 381,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "        <span className=\"transition-opacity duration-200 group-hover:opacity-0\">",
                "range": {
                  "startLineNumber": 382,
                  "startColumn": 1,
                  "endLineNumber": 382,
                  "endColumn": 81
                }
              }
            ],
            [
              {
                "text": "          {isStreetView ? '🚦' : '🛰️'}",
                "range": {
                  "startLineNumber": 383,
                  "startColumn": 1,
                  "endLineNumber": 383,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "        </span>",
                "range": {
                  "startLineNumber": 384,
                  "startColumn": 1,
                  "endLineNumber": 384,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "        <span className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 transition-opacity duration-200 group-hover:opacity-100\">",
                "range": {
                  "startLineNumber": 385,
                  "startColumn": 1,
                  "endLineNumber": 385,
                  "endColumn": 153
                }
              }
            ],
            [
              {
                "text": "          {isStreetView ? '🛰️' : '🚦'}",
                "range": {
                  "startLineNumber": 386,
                  "startColumn": 1,
                  "endLineNumber": 386,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "        </span>",
                "range": {
                  "startLineNumber": 387,
                  "startColumn": 1,
                  "endLineNumber": 387,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "      </button>",
                "range": {
                  "startLineNumber": 388,
                  "startColumn": 1,
                  "endLineNumber": 388,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "    </div>",
                "range": {
                  "startLineNumber": 389,
                  "startColumn": 1,
                  "endLineNumber": 389,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "  );",
                "range": {
                  "startLineNumber": 390,
                  "startColumn": 1,
                  "endLineNumber": 390,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 391,
                  "startColumn": 1,
                  "endLineNumber": 391,
                  "endColumn": 2
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 392,
                  "startColumn": 1,
                  "endLineNumber": 392,
                  "endColumn": 1
                }
              }
            ],
            []
          ],
          "done": true
        },
        {
          "value": "I noticed there was an issue where I left the click handler code commented out. Let me add that back in to ensure the popups work correctly for both the point and polygon layers:",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "kind": "undoStop",
          "id": "1677baea-ad26-4713-a142-62dfc7a04cae"
        },
        {
          "value": "\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "scheme": "file"
          }
        },
        {
          "value": "// ...existing code...\n\n        // Add click handlers for both layers\n        [pointLayerId, layerId].forEach(id => {\n          map.on('click', id, (e) => {\n            const feature = e.features?.[0];\n            if (!feature) return;\n\n            const coordinates = e.lngLat;\n            const properties = feature.properties;\n            const popupContent = layer.id === 'microplastics' \n              ? formatMicroplasticsPopup(properties)\n              : layer.id === 'nasa'\n              ? formatNasaPopup(properties)\n              : formatNtuaPopup(properties);\n\n            new mapboxgl.Popup()\n              .setLngLat(coordinates)\n              .setHTML(`\n                <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">\n                  <div class=\"mb-3\">\n                    <div class=\"mb-1\">\n                      <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°\n                    </div>\n                    <div class=\"mb-1\">\n                      <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°\n                    </div>\n                  </div>\n                  <div class=\"flex flex-col space-y-0.5\">\n                    ${popupContent}\n                  </div>\n                  ${properties?.DOI ? `\n                    <button class=\"mt-2 text-sm\">\n                      <a href=\"${properties.DOI}\" \n                         target=\"_blank\" \n                         rel=\"noopener noreferrer\"\n                         class=\"text-blue-600 hover:text-blue-800 hover:underline\">\n                        View Research Paper\n                      </a>\n                    </button>\n                  ` : ''}\n                </div>\n              `)\n              .addTo(map);\n          });\n\n          map.on('mouseenter', id, () => {\n            map.getCanvas().style.cursor = 'pointer';\n          });\n\n          map.on('mouseleave', id, () => {\n            map.getCanvas().style.cursor = '';\n          });\n        });\n\n// ...existing code...\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "value": "Your polygon data should now be visible at all zoom levels. At lower zoom levels (below zoom level 10), you'll see points that represent the centroid (average center point) of each polygon. When you zoom in past level 10, it will smoothly transition to showing the actual polygon fills. The centroids are calculated by taking the average of all vertex coordinates in the polygon's outer ring.\n\nLet me know if the points are now appearing correctly at lower zoom levels or if you'd like to adjust the zoom threshold or any other aspects of the visualization.",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        }
      ],
      "responseId": "response_0053db17-6630-47eb-a461-a7a40b23c7d4",
      "result": {
        "timings": {
          "firstProgress": 29471,
          "totalElapsed": 131477
        },
        "metadata": {
          "edits": {
            "workingSet": [
              {
                "uri": {
                  "$mid": 1,
                  "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "scheme": "file"
                },
                "text": "'use client';\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { useData } from '@/contexts/DataContext';\n\nconst formatDate = (dateString: string) => {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n};\n\nconst formatMicroplasticsPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  const relevantData = {\n    'Method': properties.SAMPMETHOD,\n    'Density': properties.DENSTEXT,\n    'Unit': properties.UNIT,\n    'Organization': properties.ORG,\n    'Date': formatDate(properties.Date),\n    'Reference': properties.SHORTREF,\n    'DOI': properties.DOI\n  };\n\n  return Object.entries(relevantData)\n    .map(([key, value]) => value ? \n    `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">${key}:</span> ${value}\n    <p>\n    ` : '')\n    .join('');\n};\n\nconst formatNasaPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  return `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">Detection:</span> Floating Marine Debris\n    </p>\n  `;\n};\n\nconst formatNtuaPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  return `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">Detection:</span> Marine Floating Debris\n    </p>\n  `;\n};\n\nconst calculatePolygonCentroid = (coordinates: number[][][]) => {\n  let totalX = 0;\n  let totalY = 0;\n  let pointCount = 0;\n\n  // Handle the outer ring of the polygon\n  coordinates[0].forEach(point => {\n    totalX += point[0];\n    totalY += point[1];\n    pointCount++;\n  });\n\n  return [totalX / pointCount, totalY / pointCount];\n};\n\nconst createPointFeatureFromPolygon = (feature: GeoJSON.Feature): GeoJSON.Feature => {\n  const geometry = feature.geometry as GeoJSON.Polygon | GeoJSON.MultiPolygon;\n  let centroid;\n\n  if (geometry.type === 'Polygon') {\n    centroid = calculatePolygonCentroid(geometry.coordinates);\n  } else {\n    // For MultiPolygon, use the centroid of the first polygon\n    centroid = calculatePolygonCentroid(geometry.coordinates[0]);\n  }\n\n  return {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: centroid\n    },\n    properties: feature.properties\n  };\n};\n\nexport default function Map() {\n  const mapContainerRef = useRef<HTMLDivElement>(null);\n  const mapRef = useRef<mapboxgl.Map | null>(null);\n  const layersRef = useRef<Set<string>>(new Set());\n  const [isStreetView, setIsStreetView] = useState(true);\n  const { layers, getFilteredData, dataPointCount } = useData();\n\n  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {\n    if (!mapRef.current) return;\n\n    const layerId = `${layer.id}-layer`;\n    const map = mapRef.current;\n    const data = getFilteredData(layer.id);\n\n    // Remove existing layers and sources\n    [layerId, `${layerId}-point`].forEach(id => {\n      if (layersRef.current.has(id) && map.getLayer(id)) {\n        map.removeLayer(id);\n        layersRef.current.delete(id);\n      }\n    });\n\n    if (map.getSource(layer.id)) {\n      map.removeSource(layer.id);\n    }\n    if (map.getSource(`${layer.id}-point`)) {\n      map.removeSource(`${layer.id}-point`);\n    }\n\n    // Add layer if it's meant to be visible\n    if (layer.visible) {\n      const firstFeature = data.features[0];\n      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';\n\n      if (isPolygon) {\n        // Add the original polygon source\n        map.addSource(layer.id, {\n          type: 'geojson',\n          data: data\n        });\n\n        // Create a point source from polygon centroids\n        const pointData: GeoJSON.FeatureCollection = {\n          type: 'FeatureCollection',\n          features: data.features.map(createPointFeatureFromPolygon)\n        };\n\n        map.addSource(`${layer.id}-point`, {\n          type: 'geojson',\n          data: pointData\n        });\n\n        // Add point layer for low zoom levels\n        const pointLayerId = `${layerId}-point`;\n        const pointLayer: mapboxgl.LayerSpecification = {\n          id: pointLayerId,\n          type: 'circle',\n          source: `${layer.id}-point`,\n          maxzoom: 10,\n          paint: {\n            'circle-radius': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              0, 4,\n              8, 8\n            ],\n            'circle-color': layer.color,\n            'circle-opacity': 0.6,\n            'circle-stroke-width': 1,\n            'circle-stroke-color': '#ffffff',\n            'circle-stroke-opacity': 1\n          }\n        };\n        map.addLayer(pointLayer);\n        layersRef.current.add(pointLayerId);\n\n        // Add polygon layer for high zoom levels\n        const polygonLayer: mapboxgl.LayerSpecification = {\n          id: layerId,\n          type: 'fill',\n          source: layer.id,\n          minzoom: 10,\n          paint: {\n            'fill-color': layer.color,\n            'fill-opacity': 0.6,\n            'fill-outline-color': '#ffffff'\n          }\n        };\n        map.addLayer(polygonLayer);\n        layersRef.current.add(layerId);\n\n        // Add click handlers for both layers\n        [pointLayerId, layerId].forEach(id => {\n          map.on('click', id, (e) => {\n            const feature = e.features?.[0];\n            if (!feature) return;\n\n            const coordinates = e.lngLat;\n            const properties = feature.properties;\n            const popupContent = layer.id === 'microplastics' \n              ? formatMicroplasticsPopup(properties)\n              : layer.id === 'nasa'\n              ? formatNasaPopup(properties)\n              : formatNtuaPopup(properties);\n\n            new mapboxgl.Popup()\n              .setLngLat(coordinates)\n              .setHTML(`\n                <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">\n                  <div class=\"mb-3\">\n                    <div class=\"mb-1\">\n                      <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°\n                    </div>\n                    <div class=\"mb-1\">\n                      <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°\n                    </div>\n                  </div>\n                  <div class=\"flex flex-col space-y-0.5\">\n                    ${popupContent}\n                  </div>\n                  ${properties?.DOI ? `\n                    <button class=\"mt-2 text-sm\">\n                      <a href=\"${properties.DOI}\" \n                         target=\"_blank\" \n                         rel=\"noopener noreferrer\"\n                         class=\"text-blue-600 hover:text-blue-800 hover:underline\">\n                        View Research Paper\n                      </a>\n                    </button>\n                  ` : ''}\n                </div>\n              `)\n              .addTo(map);\n          });\n\n          map.on('mouseenter', id, () => {\n            map.getCanvas().style.cursor = 'pointer';\n          });\n\n          map.on('mouseleave', id, () => {\n            map.getCanvas().style.cursor = '';\n          });\n        });\n      } else {\n        // For non-polygon data, keep the existing circle layer logic\n        const layerConfig: mapboxgl.LayerSpecification = {\n          id: layerId,\n          type: 'circle',\n          source: layer.id,\n          paint: {\n            'circle-radius': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              0, 4,\n              8, 8\n            ],\n            'circle-color': layer.color,\n            'circle-opacity': 0.6,\n            'circle-stroke-width': 1,\n            'circle-stroke-color': '#ffffff',\n            'circle-stroke-opacity': 1\n          }\n        };\n\n        map.addLayer(layerConfig);\n        layersRef.current.add(layerId);\n\n        // Add event listeners for non-polygon layers\n        map.on('click', layerId, (e) => {\n          const feature = e.features?.[0];\n          if (!feature) return;\n\n          const coordinates = e.lngLat;\n          const properties = feature.properties;\n          const popupContent = layer.id === 'microplastics' \n            ? formatMicroplasticsPopup(properties)\n            : layer.id === 'nasa'\n            ? formatNasaPopup(properties)\n            : formatNtuaPopup(properties);\n\n          new mapboxgl.Popup()\n            .setLngLat(coordinates)\n            .setHTML(`\n              <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">\n                <div class=\"mb-3\">\n                  <div class=\"mb-1\">\n                    <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°\n                  </div>\n                  <div class=\"mb-1\">\n                    <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°\n                  </div>\n                </div>\n                <div class=\"flex flex-col space-y-0.5\">\n                  ${popupContent}\n                </div>\n                ${properties?.DOI ? `\n                  <button class=\"mt-2 text-sm\">\n                    <a href=\"${properties.DOI}\" \n                       target=\"_blank\" \n                       rel=\"noopener noreferrer\"\n                       class=\"text-blue-600 hover:text-blue-800 hover:underline\">\n                      View Research Paper\n                    </a>\n                  </button>\n                ` : ''}\n              </div>\n            `)\n            .addTo(map);\n        });\n\n        map.on('mouseenter', layerId, () => {\n          map.getCanvas().style.cursor = 'pointer';\n        });\n\n        map.on('mouseleave', layerId, () => {\n          map.getCanvas().style.cursor = '';\n        });\n      }\n    }\n  }, [getFilteredData]);\n\n  const loadMap = useCallback(() => {\n    // Only initialize map if it hasn't been initialized yet\n    if (!mapRef.current && mapContainerRef.current) {\n      mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;\n\n      mapRef.current = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mapbox/streets-v12',\n        center: [-105.272148, 40.047050],\n        zoom: 2\n      });\n\n      mapRef.current.on('load', () => {\n        layers.forEach(updateLayer);\n      });\n    }\n  }, [layers, updateLayer]);\n\n  // Initialize map only once\n  useEffect(() => {\n    loadMap();\n  }, [loadMap]); // Empty dependency array since we only want to initialize once\n\n  // Update layers when they change\n  useEffect(() => {\n    if (mapRef.current?.loaded()) {\n      layers.forEach(updateLayer);\n    }\n  }, [layers, updateLayer]);\n\n  const toggleMapStyle = useCallback(() => {\n    const satellite = 'mapbox://styles/mapbox/satellite-v9';\n    const streets = 'mapbox://styles/mapbox/streets-v12';\n    \n    if (mapRef.current) {\n      mapRef.current.setStyle(isStreetView ? satellite : streets);\n      setIsStreetView(!isStreetView);\n      \n      // Re-add data layers after style change\n      mapRef.current.once('style.load', () => {\n        layers.forEach(updateLayer);\n      });\n    }\n  }, [isStreetView, layers, updateLayer]);\n\n  return (\n    <div className=\"relative w-full h-full\">\n      <div ref={mapContainerRef} className=\"w-full h-full\" />\n      \n      <div className=\"absolute top-16 right-4 flex flex-col gap-2\">\n        {layers.map(layer => layer.visible && (\n          <div key={layer.id} className=\"bg-white/30 dark:bg-black/40 backdrop-blur-md px-4 py-2 rounded-md shadow-md\">\n            <p className=\"font-medium text-foreground flex items-center gap-2\">\n              <span className=\"w-3 h-3 inline-block rounded-full\" style={{ backgroundColor: layer.color }}></span>\n              {dataPointCount[layer.id]} points\n            </p>\n          </div>\n        ))}\n      </div>\n\n      <button\n        onClick={toggleMapStyle}\n        className=\"group absolute bottom-4 right-4 ml-auto bg-black/40 backdrop-blur-md p-2 rounded-md shadow-md hover:bg-deep-water transition-colors text-2xl\"\n      >\n        <span className=\"transition-opacity duration-200 group-hover:opacity-0\">\n          {isStreetView ? '🚦' : '🛰️'}\n        </span>\n        <span className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 transition-opacity duration-200 group-hover:opacity-100\">\n          {isStreetView ? '🛰️' : '🚦'}\n        </span>\n      </button>\n    </div>\n  );\n}\n",
                "languageId": "typescriptreact",
                "version": 1114,
                "state": 2
              }
            ],
            "promptInstructions": [],
            "request": "Above is the result of calling one or more tools. The user can see the results of the edit_file tool, so you don't need to explain them. But the user can't see the results of other tools, so you should explain them to the user if referencing them in your answer. Continue from where you left off without repeating yourself.",
            "response": "Your polygon data should now be visible at all zoom levels. At lower zoom levels (below zoom level 10), you'll see points that represent the centroid (average center point) of each polygon. When you zoom in past level 10, it will smoothly transition to showing the actual polygon fills. The centroids are calculated by taking the average of all vertex coordinates in the polygon's outer ring.\n\nLet me know if the points are now appearing correctly at lower zoom levels or if you'd like to adjust the zoom threshold or any other aspects of the visualization."
          },
          "codeBlocks": [],
          "messages": [
            {
              "role": "user",
              "content": "for some reason the regular circle points for the polygons data aren't shoing until you zoom in a lot, then when i reach zoom 10 it switches to polygon fill\n\nmaybe becuase it is using the polygon coordinates which dont load on the map until you get closer? can we use something that temporarily uses an average the of the polygon as the point coords"
            },
            {
              "role": "assistant",
              "content": "Your polygon data should now be visible at all zoom levels. At lower zoom levels (below zoom level 10), you'll see points that represent the centroid (average center point) of each polygon. When you zoom in past level 10, it will smoothly transition to showing the actual polygon fills. The centroids are calculated by taking the average of all vertex coordinates in the polygon's outer ring.\n\nLet me know if the points are now appearing correctly at lower zoom levels or if you'd like to adjust the zoom threshold or any other aspects of the visualization."
            }
          ],
          "toolCallRounds": [
            {
              "toolCalls": [
                {
                  "name": "edit_file",
                  "arguments": "{\"code\": \"// ...existing code...\\n\\n// Add these utility functions at the top of the file\\nconst calculatePolygonCentroid = (coordinates: number[][][]) => {\\n  let totalX = 0;\\n  let totalY = 0;\\n  let pointCount = 0;\\n\\n  // Handle the outer ring of the polygon\\n  coordinates[0].forEach(point => {\\n    totalX += point[0];\\n    totalY += point[1];\\n    pointCount++;\\n  });\\n\\n  return [totalX / pointCount, totalY / pointCount];\\n};\\n\\nconst createPointFeatureFromPolygon = (feature: GeoJSON.Feature): GeoJSON.Feature => {\\n  const geometry = feature.geometry as GeoJSON.Polygon | GeoJSON.MultiPolygon;\\n  let centroid;\\n\\n  if (geometry.type === 'Polygon') {\\n    centroid = calculatePolygonCentroid(geometry.coordinates);\\n  } else {\\n    // For MultiPolygon, use the centroid of the first polygon\\n    centroid = calculatePolygonCentroid(geometry.coordinates[0]);\\n  }\\n\\n  return {\\n    type: 'Feature',\\n    geometry: {\\n      type: 'Point',\\n      coordinates: centroid\\n    },\\n    properties: feature.properties\\n  };\\n};\\n\\nexport default function Map() {\\n  // ...existing code...\\n\\n  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {\\n    if (!mapRef.current) return;\\n\\n    const layerId = `${layer.id}-layer`;\\n    const map = mapRef.current;\\n    const data = getFilteredData(layer.id);\\n\\n    // Remove existing layers and sources\\n    [layerId, `${layerId}-point`].forEach(id => {\\n      if (layersRef.current.has(id) && map.getLayer(id)) {\\n        map.removeLayer(id);\\n        layersRef.current.delete(id);\\n      }\\n    });\\n\\n    if (map.getSource(layer.id)) {\\n      map.removeSource(layer.id);\\n    }\\n    if (map.getSource(`${layer.id}-point`)) {\\n      map.removeSource(`${layer.id}-point`);\\n    }\\n\\n    // Add layer if it's meant to be visible\\n    if (layer.visible) {\\n      const firstFeature = data.features[0];\\n      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';\\n\\n      if (isPolygon) {\\n        // Add the original polygon source\\n        map.addSource(layer.id, {\\n          type: 'geojson',\\n          data: data\\n        });\\n\\n        // Create a point source from polygon centroids\\n        const pointData: GeoJSON.FeatureCollection = {\\n          type: 'FeatureCollection',\\n          features: data.features.map(createPointFeatureFromPolygon)\\n        };\\n\\n        map.addSource(`${layer.id}-point`, {\\n          type: 'geojson',\\n          data: pointData\\n        });\\n\\n        // Add point layer for low zoom levels\\n        const pointLayerId = `${layerId}-point`;\\n        const pointLayer: mapboxgl.LayerSpecification = {\\n          id: pointLayerId,\\n          type: 'circle',\\n          source: `${layer.id}-point`,\\n          maxzoom: 10,\\n          paint: {\\n            'circle-radius': [\\n              'interpolate',\\n              ['linear'],\\n              ['zoom'],\\n              0, 4,\\n              8, 8\\n            ],\\n            'circle-color': layer.color,\\n            'circle-opacity': 0.6,\\n            'circle-stroke-width': 1,\\n            'circle-stroke-color': '#ffffff',\\n            'circle-stroke-opacity': 1\\n          }\\n        };\\n        map.addLayer(pointLayer);\\n        layersRef.current.add(pointLayerId);\\n\\n        // Add polygon layer for high zoom levels\\n        const polygonLayer: mapboxgl.LayerSpecification = {\\n          id: layerId,\\n          type: 'fill',\\n          source: layer.id,\\n          minzoom: 10,\\n          paint: {\\n            'fill-color': layer.color,\\n            'fill-opacity': 0.6,\\n            'fill-outline-color': '#ffffff'\\n          }\\n        };\\n        map.addLayer(polygonLayer);\\n        layersRef.current.add(layerId);\\n\\n        // Add click handlers for both layers\\n        [pointLayerId, layerId].forEach(id => {\\n          // ...existing click handler code...\\n        });\\n      } else {\\n        // For non-polygon data, keep the existing circle layer logic\\n        // ...existing non-polygon layer code...\\n      }\\n    }\\n  }, [getFilteredData]);\\n\\n  // ...existing code...\", \"explanation\": \"Add polygon centroid calculation and modify the layer update logic to use centroids for point representation at low zoom levels\", \"filePath\": \"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\"}",
                  "id": "toolu_bdrk_01RGJzTJQ7KdSC7uDGAEfj9z"
                }
              ],
              "toolInputRetry": 0,
              "response": "I'll modify the code to calculate the centroid of each polygon to use as the point coordinates for the low-zoom view. We'll use a GeoJSON utility function to calculate this."
            },
            {
              "toolCalls": [
                {
                  "name": "edit_file",
                  "arguments": "{\"code\": \"// ...existing code...\\n\\n        // Add click handlers for both layers\\n        [pointLayerId, layerId].forEach(id => {\\n          map.on('click', id, (e) => {\\n            const feature = e.features?.[0];\\n            if (!feature) return;\\n\\n            const coordinates = e.lngLat;\\n            const properties = feature.properties;\\n            const popupContent = layer.id === 'microplastics' \\n              ? formatMicroplasticsPopup(properties)\\n              : layer.id === 'nasa'\\n              ? formatNasaPopup(properties)\\n              : formatNtuaPopup(properties);\\n\\n            new mapboxgl.Popup()\\n              .setLngLat(coordinates)\\n              .setHTML(`\\n                <div class=\\\"flex flex-col text-deep-water p-2 max-w-sm\\\">\\n                  <div class=\\\"mb-3\\\">\\n                    <div class=\\\"mb-1\\\">\\n                      <span class=\\\"font-semibold\\\">Latitude:</span> ${coordinates.lat.toFixed(4)}°\\n                    </div>\\n                    <div class=\\\"mb-1\\\">\\n                      <span class=\\\"font-semibold\\\">Longitude:</span> ${coordinates.lng.toFixed(4)}°\\n                    </div>\\n                  </div>\\n                  <div class=\\\"flex flex-col space-y-0.5\\\">\\n                    ${popupContent}\\n                  </div>\\n                  ${properties?.DOI ? `\\n                    <button class=\\\"mt-2 text-sm\\\">\\n                      <a href=\\\"${properties.DOI}\\\" \\n                         target=\\\"_blank\\\" \\n                         rel=\\\"noopener noreferrer\\\"\\n                         class=\\\"text-blue-600 hover:text-blue-800 hover:underline\\\">\\n                        View Research Paper\\n                      </a>\\n                    </button>\\n                  ` : ''}\\n                </div>\\n              `)\\n              .addTo(map);\\n          });\\n\\n          map.on('mouseenter', id, () => {\\n            map.getCanvas().style.cursor = 'pointer';\\n          });\\n\\n          map.on('mouseleave', id, () => {\\n            map.getCanvas().style.cursor = '';\\n          });\\n        });\\n\\n// ...existing code...\", \"explanation\": \"Add back the click handlers for both point and polygon layers to ensure popups work correctly\", \"filePath\": \"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\"}",
                  "id": "toolu_bdrk_01RkwUSH7VfdDdYiAN4g56Rj"
                }
              ],
              "toolInputRetry": 0,
              "response": "I noticed there was an issue where I left the click handler code commented out. Let me add that back in to ensure the popups work correctly for both the point and polygon layers:"
            },
            {
              "toolCalls": [],
              "toolInputRetry": 0,
              "response": "Your polygon data should now be visible at all zoom levels. At lower zoom levels (below zoom level 10), you'll see points that represent the centroid (average center point) of each polygon. When you zoom in past level 10, it will smoothly transition to showing the actual polygon fills. The centroids are calculated by taking the average of all vertex coordinates in the polygon's outer ring.\n\nLet me know if the points are now appearing correctly at lower zoom levels or if you'd like to adjust the zoom threshold or any other aspects of the visualization."
            }
          ],
          "toolCallResults": {
            "toolu_bdrk_014LHoLeTmEYL6CcppHkp8aJ": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_011DTkCvHS26LTF3HphPdsKm": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "<errors path=\"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\">\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "No errors found",
                                  "lineBreakBefore": false
                                },
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "priority": 1,
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "</errors>",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "\n",
                              "lineBreakBefore": false
                            }
                          ],
                          "references": []
                        }
                      ],
                      "references": []
                    }
                  }
                }
              ]
            },
            "toolu_bdrk_01Y9VA5MQAqy7r5WFXLcngbt": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01PEbZRyQX65Mx2pJx5KFaX5": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "<errors path=\"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\">\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "No errors found",
                                  "lineBreakBefore": false
                                },
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "priority": 1,
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "</errors>",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "\n",
                              "lineBreakBefore": false
                            }
                          ],
                          "references": []
                        }
                      ],
                      "references": []
                    }
                  }
                }
              ]
            },
            "toolu_bdrk_01JdADB6RMEb3AkV16bXpbZY": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01RGJzTJQ7KdSC7uDGAEfj9z": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01RkwUSH7VfdDdYiAN4g56Rj": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            }
          },
          "modelMessageId": "c9580509-375c-4d2d-b31d-61c3f58414d2",
          "responseId": "6ceeaeb7-0ff4-4107-a4b5-bae71f9697c0",
          "sessionId": "83938747-4922-4018-9542-110893bca4bc",
          "agentId": "github.copilot.editsAgent"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editsAgent",
        "description": "Edit files in your workspace in agent mode (Experimental)",
        "when": "config.chat.agent.enabled && !chatAgentModeDisallowed",
        "metadata": {
          "themeIcon": {
            "id": "tools"
          },
          "hasFollowups": false,
          "supportIssueReporting": false
        },
        "name": "agent",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "isToolsAgent": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "workingSet": [
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "scheme": "file"
        }
      ],
      "contentReferences": [],
      "codeCitations": [],
      "timestamp": 1739752090926
    },
    {
      "requestId": "request_876c9610-fb7e-41b4-9442-51b1bb68fb74",
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 74
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 75
            },
            "text": "the microplastics data already uses coordinates, so dont convert that part",
            "kind": "text"
          }
        ],
        "text": "the microplastics data already uses coordinates, so dont convert that part"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
              "scheme": "file"
            },
            "id": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "name": "Map.tsx",
            "isFile": true
          }
        ]
      },
      "response": [
        {
          "value": "I'll modify the code to only apply the polygon-to-point conversion for the NASA and NTUA data, leaving the microplastics data as is.",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "kind": "undoStop",
          "id": "6086e79a-34b5-4da3-93bc-796ad35ec965"
        },
        {
          "value": "\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "scheme": "file"
          }
        },
        {
          "value": "// ...existing code...\n\n    // Add layer if it's meant to be visible\n    if (layer.visible) {\n      const firstFeature = data.features[0];\n      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';\n\n      if (isPolygon && layer.id !== 'microplastics') {\n        // Add the original polygon source\n        map.addSource(layer.id, {\n          type: 'geojson',\n          data: data\n        });\n\n        // Create a point source from polygon centroids only for NASA and NTUA data\n        const pointData: GeoJSON.FeatureCollection = {\n          type: 'FeatureCollection',\n          features: data.features.map(createPointFeatureFromPolygon)\n        };\n\n        map.addSource(`${layer.id}-point`, {\n          type: 'geojson',\n          data: pointData\n        });\n\n        // Add point layer for low zoom levels\n        const pointLayerId = `${layerId}-point`;\n        const pointLayer: mapboxgl.LayerSpecification = {\n          id: pointLayerId,\n          type: 'circle',\n          source: `${layer.id}-point`,\n          maxzoom: 10,\n          paint: {\n            'circle-radius': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              0, 4,\n              8, 8\n            ],\n            'circle-color': layer.color,\n            'circle-opacity': 0.6,\n            'circle-stroke-width': 1,\n            'circle-stroke-color': '#ffffff',\n            'circle-stroke-opacity': 1\n          }\n        };\n        map.addLayer(pointLayer);\n        layersRef.current.add(pointLayerId);\n\n        // Add polygon layer for high zoom levels\n        const polygonLayer: mapboxgl.LayerSpecification = {\n          id: layerId,\n          type: 'fill',\n          source: layer.id,\n          minzoom: 10,\n          paint: {\n            'fill-color': layer.color,\n            'fill-opacity': 0.6,\n            'fill-outline-color': '#ffffff'\n          }\n        };\n        map.addLayer(polygonLayer);\n        layersRef.current.add(layerId);\n\n        // Add click handlers for both layers\n        [pointLayerId, layerId].forEach(id => {\n          // ...existing click handler code for both layers...\n        });\n      } else {\n        // For non-polygon data or microplastics, use regular circle layer\n        map.addSource(layer.id, {\n          type: 'geojson',\n          data: data\n        });\n\n        const layerConfig: mapboxgl.LayerSpecification = {\n          id: layerId,\n          type: 'circle',\n          source: layer.id,\n          paint: {\n            'circle-radius': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              0, 4,\n              8, 8\n            ],\n            'circle-color': layer.color,\n            'circle-opacity': 0.6,\n            'circle-stroke-width': 1,\n            'circle-stroke-color': '#ffffff',\n            'circle-stroke-opacity': 1\n          }\n        };\n\n        map.addLayer(layerConfig);\n        layersRef.current.add(layerId);\n\n        // Add event listeners for regular layers\n        map.on('click', layerId, (e) => {\n          // ...existing click handler code...\n        });\n\n        map.on('mouseenter', layerId, () => {\n          map.getCanvas().style.cursor = 'pointer';\n        });\n\n        map.on('mouseleave', layerId, () => {\n          map.getCanvas().style.cursor = '';\n        });\n      }\n    }\n  }, [getFilteredData]);\n\n  // ...existing code...\n````\n",
          "isTrusted": false,
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "'use client';",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "import { useCallback, useEffect, useRef, useState } from 'react';",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 66
                }
              }
            ],
            [
              {
                "text": "import mapboxgl from 'mapbox-gl';",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "import 'mapbox-gl/dist/mapbox-gl.css';",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "import { useData } from '@/contexts/DataContext';",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatDate = (dateString: string) => {",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "  return new Date(dateString).toLocaleDateString('en-US', {",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 60
                }
              }
            ],
            [
              {
                "text": "    year: 'numeric',",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "    month: 'long',",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "    day: 'numeric'",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "  });",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatMicroplasticsPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 78
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  const relevantData = {",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "    'Method': properties.SAMPMETHOD,",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "    'Density': properties.DENSTEXT,",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Unit': properties.UNIT,",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "    'Organization': properties.ORG,",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    'Date': formatDate(properties.Date),",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "    'Reference': properties.SHORTREF,",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    'DOI': properties.DOI",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "  };",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  return Object.entries(relevantData)",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    .map(([key, value]) => value ? ",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    `",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">${key}:</span> ${value}",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "    <p>",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "    ` : '')",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "    .join('');",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatNasaPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  return `",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">Detection:</span> Floating Marine Debris",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "    </p>",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "  `;",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const formatNtuaPopup = (properties: GeoJSON.GeoJsonProperties) => {",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "  if (!properties) return '';",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "  ",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "  return `",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "      <span class=\"font-semibold\">Detection:</span> Marine Floating Debris",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 75
                }
              }
            ],
            [
              {
                "text": "    </p>",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 9
                }
              }
            ],
            [
              {
                "text": "  `;",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const calculatePolygonCentroid = (coordinates: number[][][]) => {",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 66
                }
              }
            ],
            [
              {
                "text": "  let totalX = 0;",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 18
                }
              }
            ],
            [
              {
                "text": "  let totalY = 0;",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 18
                }
              }
            ],
            [
              {
                "text": "  let pointCount = 0;",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 22
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  // Handle the outer ring of the polygon",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "  coordinates[0].forEach(point => {",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "    totalX += point[0];",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "    totalY += point[1];",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "    pointCount++;",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 18
                }
              }
            ],
            [
              {
                "text": "  });",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  return [totalX / pointCount, totalY / pointCount];",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "const createPointFeatureFromPolygon = (feature: GeoJSON.Feature): GeoJSON.Feature => {",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 87
                }
              }
            ],
            [
              {
                "text": "  const geometry = feature.geometry as GeoJSON.Polygon | GeoJSON.MultiPolygon;",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 79
                }
              }
            ],
            [
              {
                "text": "  let centroid;",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  if (geometry.type === 'Polygon') {",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "    centroid = calculatePolygonCentroid(geometry.coordinates);",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 63
                }
              }
            ],
            [
              {
                "text": "  } else {",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    // For MultiPolygon, use the centroid of the first polygon",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 63
                }
              }
            ],
            [
              {
                "text": "    centroid = calculatePolygonCentroid(geometry.coordinates[0]);",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 66
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 4
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  return {",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "    type: 'Feature',",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "    geometry: {",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "      type: 'Point',",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "      coordinates: centroid",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "    },",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "    properties: feature.properties",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "  };",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "};",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 3
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "export default function Map() {",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "  const mapContainerRef = useRef<HTMLDivElement>(null);",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "  const mapRef = useRef<mapboxgl.Map | null>(null);",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "  const layersRef = useRef<Set<string>>(new Set());",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "  const [isStreetView, setIsStreetView] = useState(true);",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "  const { layers, getFilteredData, dataPointCount } = useData();",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 65
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 96
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current) return;",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    const layerId = `${layer.id}-layer`;",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "    const map = mapRef.current;",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "    const data = getFilteredData(layer.id);",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    // Remove existing layers and sources",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "    [layerId, `${layerId}-point`].forEach(id => {",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "      if (layersRef.current.has(id) && map.getLayer(id)) {",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 59
                }
              }
            ],
            [
              {
                "text": "        map.removeLayer(id);",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.delete(id);",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    if (map.getSource(layer.id)) {",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "      map.removeSource(layer.id);",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "    if (map.getSource(`${layer.id}-point`)) {",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "      map.removeSource(`${layer.id}-point`);",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    // Add layer if it's meant to be visible",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "    if (layer.visible) {",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "      const firstFeature = data.features[0];",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 117
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "      if (isPolygon && layer.id !== 'microplastics') {",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "        // Add the original polygon source",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "        map.addSource(layer.id, {",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "          type: 'geojson',",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "          data: data",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        // Create a point source from polygon centroids only for NASA and NTUA data",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "        const pointData: GeoJSON.FeatureCollection = {",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 55
                }
              }
            ],
            [
              {
                "text": "          type: 'FeatureCollection',",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "          features: data.features.map(createPointFeatureFromPolygon)",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 69
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        map.addSource(`${layer.id}-point`, {",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "          type: 'geojson',",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "          data: pointData",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        // Add point layer for low zoom levels",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "        const pointLayerId = `${layerId}-point`;",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "        const pointLayer: mapboxgl.LayerSpecification = {",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "          id: pointLayerId,",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "          type: 'circle',",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "          source: `${layer.id}-point`,",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "          maxzoom: 10,",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "          paint: {",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "            'circle-radius': [",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 31
                }
              }
            ],
            [
              {
                "text": "              'interpolate',",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "              ['linear'],",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "              ['zoom'],",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "              0, 4,",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "              8, 8",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "            ],",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "            'circle-color': layer.color,",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "            'circle-opacity': 0.6,",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-width': 1,",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-color': '#ffffff',",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-opacity': 1",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "          }",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "        map.addLayer(pointLayer);",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.add(pointLayerId);",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        // Add polygon layer for high zoom levels",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "        const polygonLayer: mapboxgl.LayerSpecification = {",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 60
                }
              }
            ],
            [
              {
                "text": "          id: layerId,",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "          type: 'fill',",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "          source: layer.id,",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "          minzoom: 10,",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "          paint: {",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "            'fill-color': layer.color,",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "            'fill-opacity': 0.6,",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "            'fill-outline-color': '#ffffff'",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "          }",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "        map.addLayer(polygonLayer);",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.add(layerId);",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        // Add click handlers for both layers",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "        [pointLayerId, layerId].forEach(id => {",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "          map.on('click', id, (e) => {",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "            const feature = e.features?.[0];",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "            if (!feature) return;",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            const coordinates = e.lngLat;",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "            const properties = feature.properties;",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 51
                }
              }
            ],
            [
              {
                "text": "            const popupContent = layer.id === 'microplastics' ",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 63
                }
              }
            ],
            [
              {
                "text": "              ? formatMicroplasticsPopup(properties)",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "              : layer.id === 'nasa'",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "              ? formatNasaPopup(properties)",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "              : formatNtuaPopup(properties);",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            new mapboxgl.Popup()",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "              .setLngLat(coordinates)",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "              .setHTML(`",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 73
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"mb-3\">",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "                    <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "                      <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 98
                }
              }
            ],
            [
              {
                "text": "                    </div>",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "                    <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "                      <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 99
                }
              }
            ],
            [
              {
                "text": "                    </div>",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"flex flex-col space-y-0.5\">",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "                    ${popupContent}",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                  ${properties?.DOI ? `",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                    <button class=\"mt-2 text-sm\">",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 50
                }
              }
            ],
            [
              {
                "text": "                      <a href=\"${properties.DOI}\" ",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 51
                }
              }
            ],
            [
              {
                "text": "                         target=\"_blank\" ",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "                         rel=\"noopener noreferrer\"",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 51
                }
              }
            ],
            [
              {
                "text": "                         class=\"text-blue-600 hover:text-blue-800 hover:underline\">",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 84
                }
              }
            ],
            [
              {
                "text": "                        View Research Paper",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "                      </a>",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "                    </button>",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "                  ` : ''}",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "              `)",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "              .addTo(map);",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 27
                }
              }
            ],
            [
              {
                "text": "          });",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          map.on('mouseenter', id, () => {",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "            map.getCanvas().style.cursor = 'pointer';",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "          });",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "          map.on('mouseleave', id, () => {",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "            map.getCanvas().style.cursor = '';",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1,
                  "endLineNumber": 236,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "          });",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1,
                  "endLineNumber": 237,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1,
                  "endLineNumber": 238,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1,
                  "endLineNumber": 239,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "        // For non-polygon data or microplastics, use regular circle layer",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1,
                  "endLineNumber": 240,
                  "endColumn": 70
                }
              }
            ],
            [
              {
                "text": "        map.addSource(layer.id, {",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1,
                  "endLineNumber": 241,
                  "endColumn": 59
                }
              }
            ],
            [
              {
                "text": "          type: 'geojson',",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1,
                  "endLineNumber": 242,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "          data: data",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1,
                  "endLineNumber": 243,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 244,
                  "startColumn": 1,
                  "endLineNumber": 244,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 245,
                  "startColumn": 1,
                  "endLineNumber": 245,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "        const layerConfig: mapboxgl.LayerSpecification = {",
                "range": {
                  "startLineNumber": 246,
                  "startColumn": 1,
                  "endLineNumber": 246,
                  "endColumn": 31
                }
              }
            ],
            [
              {
                "text": "          id: layerId,",
                "range": {
                  "startLineNumber": 247,
                  "startColumn": 1,
                  "endLineNumber": 247,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "          type: 'circle',",
                "range": {
                  "startLineNumber": 248,
                  "startColumn": 1,
                  "endLineNumber": 248,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "          source: layer.id,",
                "range": {
                  "startLineNumber": 249,
                  "startColumn": 1,
                  "endLineNumber": 249,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "          paint: {",
                "range": {
                  "startLineNumber": 250,
                  "startColumn": 1,
                  "endLineNumber": 250,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "            'circle-radius': [",
                "range": {
                  "startLineNumber": 251,
                  "startColumn": 1,
                  "endLineNumber": 251,
                  "endColumn": 19
                }
              }
            ],
            [
              {
                "text": "              'interpolate',",
                "range": {
                  "startLineNumber": 252,
                  "startColumn": 1,
                  "endLineNumber": 252,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "              ['linear'],",
                "range": {
                  "startLineNumber": 253,
                  "startColumn": 1,
                  "endLineNumber": 253,
                  "endColumn": 41
                }
              }
            ],
            [
              {
                "text": "              ['zoom'],",
                "range": {
                  "startLineNumber": 254,
                  "startColumn": 1,
                  "endLineNumber": 254,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "              0, 4,",
                "range": {
                  "startLineNumber": 255,
                  "startColumn": 1,
                  "endLineNumber": 255,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "              8, 8",
                "range": {
                  "startLineNumber": 256,
                  "startColumn": 1,
                  "endLineNumber": 256,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "            ],",
                "range": {
                  "startLineNumber": 257,
                  "startColumn": 1,
                  "endLineNumber": 257,
                  "endColumn": 39
                }
              }
            ],
            [
              {
                "text": "            'circle-color': layer.color,",
                "range": {
                  "startLineNumber": 258,
                  "startColumn": 1,
                  "endLineNumber": 258,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "            'circle-opacity': 0.6,",
                "range": {
                  "startLineNumber": 259,
                  "startColumn": 1,
                  "endLineNumber": 259,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-width': 1,",
                "range": {
                  "startLineNumber": 260,
                  "startColumn": 1,
                  "endLineNumber": 260,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-color': '#ffffff',",
                "range": {
                  "startLineNumber": 261,
                  "startColumn": 1,
                  "endLineNumber": 261,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "            'circle-stroke-opacity': 1",
                "range": {
                  "startLineNumber": 262,
                  "startColumn": 1,
                  "endLineNumber": 262,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "          }",
                "range": {
                  "startLineNumber": 263,
                  "startColumn": 1,
                  "endLineNumber": 263,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        };",
                "range": {
                  "startLineNumber": 264,
                  "startColumn": 1,
                  "endLineNumber": 264,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 265,
                  "startColumn": 1,
                  "endLineNumber": 265,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "        map.addLayer(layerConfig);",
                "range": {
                  "startLineNumber": 266,
                  "startColumn": 1,
                  "endLineNumber": 266,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "        layersRef.current.add(layerId);",
                "range": {
                  "startLineNumber": 267,
                  "startColumn": 1,
                  "endLineNumber": 267,
                  "endColumn": 32
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 268,
                  "startColumn": 1,
                  "endLineNumber": 268,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        // Add event listeners for regular layers",
                "range": {
                  "startLineNumber": 269,
                  "startColumn": 1,
                  "endLineNumber": 269,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "        map.on('click', layerId, (e) => {",
                "range": {
                  "startLineNumber": 270,
                  "startColumn": 1,
                  "endLineNumber": 270,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "          const feature = e.features?.[0];",
                "range": {
                  "startLineNumber": 271,
                  "startColumn": 1,
                  "endLineNumber": 271,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "          if (!feature) return;",
                "range": {
                  "startLineNumber": 272,
                  "startColumn": 1,
                  "endLineNumber": 272,
                  "endColumn": 51
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 273,
                  "startColumn": 1,
                  "endLineNumber": 273,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "          const coordinates = e.lngLat;",
                "range": {
                  "startLineNumber": 274,
                  "startColumn": 1,
                  "endLineNumber": 274,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "          const properties = feature.properties;",
                "range": {
                  "startLineNumber": 275,
                  "startColumn": 1,
                  "endLineNumber": 275,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "          const popupContent = layer.id === 'microplastics' ",
                "range": {
                  "startLineNumber": 276,
                  "startColumn": 1,
                  "endLineNumber": 276,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            ? formatMicroplasticsPopup(properties)",
                "range": {
                  "startLineNumber": 277,
                  "startColumn": 1,
                  "endLineNumber": 277,
                  "endColumn": 31
                }
              }
            ],
            [
              {
                "text": "            : layer.id === 'nasa'",
                "range": {
                  "startLineNumber": 278,
                  "startColumn": 1,
                  "endLineNumber": 278,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "            ? formatNasaPopup(properties)",
                "range": {
                  "startLineNumber": 279,
                  "startColumn": 1,
                  "endLineNumber": 279,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "            : formatNtuaPopup(properties);",
                "range": {
                  "startLineNumber": 280,
                  "startColumn": 1,
                  "endLineNumber": 280,
                  "endColumn": 71
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 281,
                  "startColumn": 1,
                  "endLineNumber": 281,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "          new mapboxgl.Popup()",
                "range": {
                  "startLineNumber": 282,
                  "startColumn": 1,
                  "endLineNumber": 282,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "            .setLngLat(coordinates)",
                "range": {
                  "startLineNumber": 283,
                  "startColumn": 1,
                  "endLineNumber": 283,
                  "endColumn": 96
                }
              }
            ],
            [
              {
                "text": "            .setHTML(`",
                "range": {
                  "startLineNumber": 284,
                  "startColumn": 1,
                  "endLineNumber": 284,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "              <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">",
                "range": {
                  "startLineNumber": 285,
                  "startColumn": 1,
                  "endLineNumber": 285,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "                <div class=\"mb-3\">",
                "range": {
                  "startLineNumber": 286,
                  "startColumn": 1,
                  "endLineNumber": 286,
                  "endColumn": 97
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 287,
                  "startColumn": 1,
                  "endLineNumber": 287,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                    <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°",
                "range": {
                  "startLineNumber": 288,
                  "startColumn": 1,
                  "endLineNumber": 288,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 289,
                  "startColumn": 1,
                  "endLineNumber": 289,
                  "endColumn": 56
                }
              }
            ],
            [
              {
                "text": "                  <div class=\"mb-1\">",
                "range": {
                  "startLineNumber": 290,
                  "startColumn": 1,
                  "endLineNumber": 290,
                  "endColumn": 34
                }
              }
            ],
            [
              {
                "text": "                    <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°",
                "range": {
                  "startLineNumber": 291,
                  "startColumn": 1,
                  "endLineNumber": 291,
                  "endColumn": 23
                }
              }
            ],
            [
              {
                "text": "                  </div>",
                "range": {
                  "startLineNumber": 292,
                  "startColumn": 1,
                  "endLineNumber": 292,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 293,
                  "startColumn": 1,
                  "endLineNumber": 293,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "                <div class=\"flex flex-col space-y-0.5\">",
                "range": {
                  "startLineNumber": 294,
                  "startColumn": 1,
                  "endLineNumber": 294,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "                  ${popupContent}",
                "range": {
                  "startLineNumber": 295,
                  "startColumn": 1,
                  "endLineNumber": 295,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "                </div>",
                "range": {
                  "startLineNumber": 296,
                  "startColumn": 1,
                  "endLineNumber": 296,
                  "endColumn": 49
                }
              }
            ],
            [
              {
                "text": "                ${properties?.DOI ? `",
                "range": {
                  "startLineNumber": 297,
                  "startColumn": 1,
                  "endLineNumber": 297,
                  "endColumn": 82
                }
              }
            ],
            [
              {
                "text": "                  <button class=\"mt-2 text-sm\">",
                "range": {
                  "startLineNumber": 298,
                  "startColumn": 1,
                  "endLineNumber": 298,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "                    <a href=\"${properties.DOI}\" ",
                "range": {
                  "startLineNumber": 299,
                  "startColumn": 1,
                  "endLineNumber": 299,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                       target=\"_blank\" ",
                "range": {
                  "startLineNumber": 300,
                  "startColumn": 1,
                  "endLineNumber": 300,
                  "endColumn": 28
                }
              }
            ],
            [
              {
                "text": "                       rel=\"noopener noreferrer\"",
                "range": {
                  "startLineNumber": 301,
                  "startColumn": 1,
                  "endLineNumber": 301,
                  "endColumn": 24
                }
              }
            ],
            [
              {
                "text": "                       class=\"text-blue-600 hover:text-blue-800 hover:underline\">",
                "range": {
                  "startLineNumber": 302,
                  "startColumn": 1,
                  "endLineNumber": 302,
                  "endColumn": 21
                }
              }
            ],
            [
              {
                "text": "                      View Research Paper",
                "range": {
                  "startLineNumber": 303,
                  "startColumn": 1,
                  "endLineNumber": 303,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "                    </a>",
                "range": {
                  "startLineNumber": 304,
                  "startColumn": 1,
                  "endLineNumber": 304,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "                  </button>",
                "range": {
                  "startLineNumber": 305,
                  "startColumn": 1,
                  "endLineNumber": 305,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "                ` : ''}",
                "range": {
                  "startLineNumber": 306,
                  "startColumn": 1,
                  "endLineNumber": 306,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "              </div>",
                "range": {
                  "startLineNumber": 307,
                  "startColumn": 1,
                  "endLineNumber": 307,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "            `)",
                "range": {
                  "startLineNumber": 308,
                  "startColumn": 1,
                  "endLineNumber": 308,
                  "endColumn": 52
                }
              }
            ],
            [
              {
                "text": "            .addTo(map);",
                "range": {
                  "startLineNumber": 309,
                  "startColumn": 1,
                  "endLineNumber": 309,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 310,
                  "startColumn": 1,
                  "endLineNumber": 310,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 311,
                  "startColumn": 1,
                  "endLineNumber": 311,
                  "endColumn": 46
                }
              }
            ],
            [
              {
                "text": "        map.on('mouseenter', layerId, () => {",
                "range": {
                  "startLineNumber": 312,
                  "startColumn": 1,
                  "endLineNumber": 312,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "          map.getCanvas().style.cursor = 'pointer';",
                "range": {
                  "startLineNumber": 313,
                  "startColumn": 1,
                  "endLineNumber": 313,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 314,
                  "startColumn": 1,
                  "endLineNumber": 314,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 315,
                  "startColumn": 1,
                  "endLineNumber": 315,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "        map.on('mouseleave', layerId, () => {",
                "range": {
                  "startLineNumber": 316,
                  "startColumn": 1,
                  "endLineNumber": 316,
                  "endColumn": 25
                }
              }
            ],
            [
              {
                "text": "          map.getCanvas().style.cursor = '';",
                "range": {
                  "startLineNumber": 317,
                  "startColumn": 1,
                  "endLineNumber": 317,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        });",
                "range": {
                  "startLineNumber": 318,
                  "startColumn": 1,
                  "endLineNumber": 318,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 319,
                  "startColumn": 1,
                  "endLineNumber": 319,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 320,
                  "startColumn": 1,
                  "endLineNumber": 320,
                  "endColumn": 54
                }
              }
            ],
            [
              {
                "text": "  }, [getFilteredData]);",
                "range": {
                  "startLineNumber": 321,
                  "startColumn": 1,
                  "endLineNumber": 321,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 322,
                  "startColumn": 1,
                  "endLineNumber": 322,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  const loadMap = useCallback(() => {",
                "range": {
                  "startLineNumber": 323,
                  "startColumn": 1,
                  "endLineNumber": 323,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "    // Only initialize map if it hasn't been initialized yet",
                "range": {
                  "startLineNumber": 324,
                  "startColumn": 1,
                  "endLineNumber": 324,
                  "endColumn": 44
                }
              }
            ],
            [
              {
                "text": "    if (!mapRef.current && mapContainerRef.current) {",
                "range": {
                  "startLineNumber": 325,
                  "startColumn": 1,
                  "endLineNumber": 325,
                  "endColumn": 53
                }
              }
            ],
            [
              {
                "text": "      mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;",
                "range": {
                  "startLineNumber": 326,
                  "startColumn": 1,
                  "endLineNumber": 326,
                  "endColumn": 42
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 327,
                  "startColumn": 1,
                  "endLineNumber": 327,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "      mapRef.current = new mapboxgl.Map({",
                "range": {
                  "startLineNumber": 328,
                  "startColumn": 1,
                  "endLineNumber": 328,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "        container: mapContainerRef.current,",
                "range": {
                  "startLineNumber": 329,
                  "startColumn": 1,
                  "endLineNumber": 329,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        style: 'mapbox://styles/mapbox/streets-v12',",
                "range": {
                  "startLineNumber": 330,
                  "startColumn": 1,
                  "endLineNumber": 330,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "        center: [-105.272148, 40.047050],",
                "range": {
                  "startLineNumber": 331,
                  "startColumn": 1,
                  "endLineNumber": 331,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "        zoom: 2",
                "range": {
                  "startLineNumber": 332,
                  "startColumn": 1,
                  "endLineNumber": 332,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 333,
                  "startColumn": 1,
                  "endLineNumber": 333,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 334,
                  "startColumn": 1,
                  "endLineNumber": 334,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.on('load', () => {",
                "range": {
                  "startLineNumber": 335,
                  "startColumn": 1,
                  "endLineNumber": 335,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 336,
                  "startColumn": 1,
                  "endLineNumber": 336,
                  "endColumn": 30
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 337,
                  "startColumn": 1,
                  "endLineNumber": 337,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 338,
                  "startColumn": 1,
                  "endLineNumber": 338,
                  "endColumn": 15
                }
              }
            ],
            [
              {
                "text": "  }, [layers, updateLayer]);",
                "range": {
                  "startLineNumber": 339,
                  "startColumn": 1,
                  "endLineNumber": 339,
                  "endColumn": 81
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 340,
                  "startColumn": 1,
                  "endLineNumber": 340,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "  // Initialize map only once",
                "range": {
                  "startLineNumber": 341,
                  "startColumn": 1,
                  "endLineNumber": 341,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "  useEffect(() => {",
                "range": {
                  "startLineNumber": 342,
                  "startColumn": 1,
                  "endLineNumber": 342,
                  "endColumn": 20
                }
              }
            ],
            [
              {
                "text": "    loadMap();",
                "range": {
                  "startLineNumber": 343,
                  "startColumn": 1,
                  "endLineNumber": 343,
                  "endColumn": 36
                }
              }
            ],
            [
              {
                "text": "  }, [loadMap]); // Empty dependency array since we only want to initialize once",
                "range": {
                  "startLineNumber": 344,
                  "startColumn": 1,
                  "endLineNumber": 344,
                  "endColumn": 35
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 345,
                  "startColumn": 1,
                  "endLineNumber": 345,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "  // Update layers when they change",
                "range": {
                  "startLineNumber": 346,
                  "startColumn": 1,
                  "endLineNumber": 346,
                  "endColumn": 29
                }
              }
            ],
            [
              {
                "text": "  useEffect(() => {",
                "range": {
                  "startLineNumber": 347,
                  "startColumn": 1,
                  "endLineNumber": 347,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "    if (mapRef.current?.loaded()) {",
                "range": {
                  "startLineNumber": 348,
                  "startColumn": 1,
                  "endLineNumber": 348,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "      layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 349,
                  "startColumn": 1,
                  "endLineNumber": 349,
                  "endColumn": 61
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 350,
                  "startColumn": 1,
                  "endLineNumber": 350,
                  "endColumn": 58
                }
              }
            ],
            [
              {
                "text": "  }, [layers, updateLayer]);",
                "range": {
                  "startLineNumber": 351,
                  "startColumn": 1,
                  "endLineNumber": 351,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 352,
                  "startColumn": 1,
                  "endLineNumber": 352,
                  "endColumn": 26
                }
              }
            ],
            [
              {
                "text": "  const toggleMapStyle = useCallback(() => {",
                "range": {
                  "startLineNumber": 353,
                  "startColumn": 1,
                  "endLineNumber": 353,
                  "endColumn": 67
                }
              }
            ],
            [
              {
                "text": "    const satellite = 'mapbox://styles/mapbox/satellite-v9';",
                "range": {
                  "startLineNumber": 354,
                  "startColumn": 1,
                  "endLineNumber": 354,
                  "endColumn": 38
                }
              }
            ],
            [
              {
                "text": "    const streets = 'mapbox://styles/mapbox/streets-v12';",
                "range": {
                  "startLineNumber": 355,
                  "startColumn": 1,
                  "endLineNumber": 355,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 356,
                  "startColumn": 1,
                  "endLineNumber": 356,
                  "endColumn": 47
                }
              }
            ],
            [
              {
                "text": "    if (mapRef.current) {",
                "range": {
                  "startLineNumber": 357,
                  "startColumn": 1,
                  "endLineNumber": 357,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.setStyle(isStreetView ? satellite : streets);",
                "range": {
                  "startLineNumber": 358,
                  "startColumn": 1,
                  "endLineNumber": 358,
                  "endColumn": 37
                }
              }
            ],
            [
              {
                "text": "      setIsStreetView(!isStreetView);",
                "range": {
                  "startLineNumber": 359,
                  "startColumn": 1,
                  "endLineNumber": 359,
                  "endColumn": 10
                }
              }
            ],
            [
              {
                "text": "      ",
                "range": {
                  "startLineNumber": 360,
                  "startColumn": 1,
                  "endLineNumber": 360,
                  "endColumn": 6
                }
              }
            ],
            [
              {
                "text": "      // Re-add data layers after style change",
                "range": {
                  "startLineNumber": 361,
                  "startColumn": 1,
                  "endLineNumber": 361,
                  "endColumn": 43
                }
              }
            ],
            [
              {
                "text": "      mapRef.current.once('style.load', () => {",
                "range": {
                  "startLineNumber": 362,
                  "startColumn": 1,
                  "endLineNumber": 362,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "        layers.forEach(updateLayer);",
                "range": {
                  "startLineNumber": 363,
                  "startColumn": 1,
                  "endLineNumber": 363,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 364,
                  "startColumn": 1,
                  "endLineNumber": 364,
                  "endColumn": 45
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 365,
                  "startColumn": 1,
                  "endLineNumber": 365,
                  "endColumn": 62
                }
              }
            ],
            [
              {
                "text": "  }, [isStreetView, layers, updateLayer]);",
                "range": {
                  "startLineNumber": 366,
                  "startColumn": 1,
                  "endLineNumber": 366,
                  "endColumn": 7
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 367,
                  "startColumn": 1,
                  "endLineNumber": 367,
                  "endColumn": 68
                }
              }
            ],
            [
              {
                "text": "  return (",
                "range": {
                  "startLineNumber": 368,
                  "startColumn": 1,
                  "endLineNumber": 368,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "    <div className=\"relative w-full h-full\">",
                "range": {
                  "startLineNumber": 369,
                  "startColumn": 1,
                  "endLineNumber": 369,
                  "endColumn": 120
                }
              }
            ],
            [
              {
                "text": "      <div ref={mapContainerRef} className=\"w-full h-full\" />",
                "range": {
                  "startLineNumber": 370,
                  "startColumn": 1,
                  "endLineNumber": 370,
                  "endColumn": 80
                }
              }
            ],
            [
              {
                "text": "      ",
                "range": {
                  "startLineNumber": 371,
                  "startColumn": 1,
                  "endLineNumber": 371,
                  "endColumn": 115
                }
              }
            ],
            [
              {
                "text": "      <div className=\"absolute top-16 right-4 flex flex-col gap-2\">",
                "range": {
                  "startLineNumber": 372,
                  "startColumn": 1,
                  "endLineNumber": 372,
                  "endColumn": 48
                }
              }
            ],
            [
              {
                "text": "        {layers.map(layer => layer.visible && (",
                "range": {
                  "startLineNumber": 373,
                  "startColumn": 1,
                  "endLineNumber": 373,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "          <div key={layer.id} className=\"bg-white/30 dark:bg-black/40 backdrop-blur-md px-4 py-2 rounded-md shadow-md\">",
                "range": {
                  "startLineNumber": 374,
                  "startColumn": 1,
                  "endLineNumber": 374,
                  "endColumn": 17
                }
              }
            ],
            [
              {
                "text": "            <p className=\"font-medium text-foreground flex items-center gap-2\">",
                "range": {
                  "startLineNumber": 375,
                  "startColumn": 1,
                  "endLineNumber": 375,
                  "endColumn": 12
                }
              }
            ],
            [
              {
                "text": "              <span className=\"w-3 h-3 inline-block rounded-full\" style={{ backgroundColor: layer.color }}></span>",
                "range": {
                  "startLineNumber": 376,
                  "startColumn": 1,
                  "endLineNumber": 376,
                  "endColumn": 13
                }
              }
            ],
            [
              {
                "text": "              {dataPointCount[layer.id]} points",
                "range": {
                  "startLineNumber": 377,
                  "startColumn": 1,
                  "endLineNumber": 377,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "            </p>",
                "range": {
                  "startLineNumber": 378,
                  "startColumn": 1,
                  "endLineNumber": 378,
                  "endColumn": 14
                }
              }
            ],
            [
              {
                "text": "          </div>",
                "range": {
                  "startLineNumber": 379,
                  "startColumn": 1,
                  "endLineNumber": 379,
                  "endColumn": 33
                }
              }
            ],
            [
              {
                "text": "        ))}",
                "range": {
                  "startLineNumber": 380,
                  "startColumn": 1,
                  "endLineNumber": 380,
                  "endColumn": 161
                }
              }
            ],
            [
              {
                "text": "      </div>",
                "range": {
                  "startLineNumber": 381,
                  "startColumn": 1,
                  "endLineNumber": 381,
                  "endColumn": 8
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 382,
                  "startColumn": 1,
                  "endLineNumber": 382,
                  "endColumn": 81
                }
              }
            ],
            [
              {
                "text": "      <button",
                "range": {
                  "startLineNumber": 383,
                  "startColumn": 1,
                  "endLineNumber": 383,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "        onClick={toggleMapStyle}",
                "range": {
                  "startLineNumber": 384,
                  "startColumn": 1,
                  "endLineNumber": 384,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "        className=\"group absolute bottom-4 right-4 ml-auto bg-black/40 backdrop-blur-md p-2 rounded-md shadow-md hover:bg-deep-water transition-colors text-2xl\"",
                "range": {
                  "startLineNumber": 385,
                  "startColumn": 1,
                  "endLineNumber": 385,
                  "endColumn": 153
                }
              }
            ],
            [
              {
                "text": "      >",
                "range": {
                  "startLineNumber": 386,
                  "startColumn": 1,
                  "endLineNumber": 386,
                  "endColumn": 40
                }
              }
            ],
            [
              {
                "text": "        <span className=\"transition-opacity duration-200 group-hover:opacity-0\">",
                "range": {
                  "startLineNumber": 387,
                  "startColumn": 1,
                  "endLineNumber": 387,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "          {isStreetView ? '🚦' : '🛰️'}",
                "range": {
                  "startLineNumber": 388,
                  "startColumn": 1,
                  "endLineNumber": 388,
                  "endColumn": 16
                }
              }
            ],
            [
              {
                "text": "        </span>",
                "range": {
                  "startLineNumber": 389,
                  "startColumn": 1,
                  "endLineNumber": 389,
                  "endColumn": 11
                }
              }
            ],
            [
              {
                "text": "        <span className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 transition-opacity duration-200 group-hover:opacity-100\">",
                "range": {
                  "startLineNumber": 390,
                  "startColumn": 1,
                  "endLineNumber": 390,
                  "endColumn": 5
                }
              }
            ],
            [
              {
                "text": "          {isStreetView ? '🛰️' : '🚦'}",
                "range": {
                  "startLineNumber": 391,
                  "startColumn": 1,
                  "endLineNumber": 391,
                  "endColumn": 2
                }
              }
            ],
            [
              {
                "text": "        </span>",
                "range": {
                  "startLineNumber": 392,
                  "startColumn": 1,
                  "endLineNumber": 392,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n      </button>",
                "range": {
                  "startLineNumber": 393,
                  "startColumn": 1,
                  "endLineNumber": 393,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n    </div>",
                "range": {
                  "startLineNumber": 394,
                  "startColumn": 1,
                  "endLineNumber": 394,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n  );",
                "range": {
                  "startLineNumber": 395,
                  "startColumn": 1,
                  "endLineNumber": 395,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n}",
                "range": {
                  "startLineNumber": 396,
                  "startColumn": 1,
                  "endLineNumber": 396,
                  "endColumn": 1
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 397,
                  "startColumn": 1,
                  "endLineNumber": 397,
                  "endColumn": 1
                }
              }
            ],
            []
          ],
          "done": true
        },
        {
          "value": "Let me validate that there are no TypeScript errors with our changes.",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Checking `src/components/Map.tsx`",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "pastTenseMessage": {
            "value": "Checked `src/components/Map.tsx`, no problems found",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "isConfirmed": true,
          "isComplete": true
        },
        {
          "value": "Just to confirm - I've modified the code so that the polygon-to-point conversion is only applied when:\n1. The data contains polygons (either Polygon or MultiPolygon geometry)\n2. AND the layer ID is NOT 'microplastics'\n\nThis ensures that the microplastics data will continue using its original point coordinates while NASA and NTUA polygon data will use centroids for the zoomed-out view. I've validated that there are no TypeScript errors with these changes.\n\nIs there anything else you'd like me to adjust with the map visualization?",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/Users/richardroberson/Documents/repos/ocean-map/",
            "scheme": "file"
          }
        }
      ],
      "responseId": "response_631515dc-88b4-45d2-9856-681214aee81a",
      "result": {
        "timings": {
          "firstProgress": 24777,
          "totalElapsed": 55282
        },
        "metadata": {
          "edits": {
            "workingSet": [
              {
                "uri": {
                  "$mid": 1,
                  "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
                  "scheme": "file"
                },
                "text": "'use client';\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { useData } from '@/contexts/DataContext';\n\nconst formatDate = (dateString: string) => {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n};\n\nconst formatMicroplasticsPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  const relevantData = {\n    'Method': properties.SAMPMETHOD,\n    'Density': properties.DENSTEXT,\n    'Unit': properties.UNIT,\n    'Organization': properties.ORG,\n    'Date': formatDate(properties.Date),\n    'Reference': properties.SHORTREF,\n    'DOI': properties.DOI\n  };\n\n  return Object.entries(relevantData)\n    .map(([key, value]) => value ? \n    `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">${key}:</span> ${value}\n    <p>\n    ` : '')\n    .join('');\n};\n\nconst formatNasaPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  return `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">Detection:</span> Floating Marine Debris\n    </p>\n  `;\n};\n\nconst formatNtuaPopup = (properties: GeoJSON.GeoJsonProperties) => {\n  if (!properties) return '';\n  \n  return `\n    <p class=\"flex flex-wrap mb-1 break-all space-x-1\">\n      <span class=\"font-semibold\">Detection:</span> Marine Floating Debris\n    </p>\n  `;\n};\n\nconst calculatePolygonCentroid = (coordinates: number[][][]) => {\n  let totalX = 0;\n  let totalY = 0;\n  let pointCount = 0;\n\n  // Handle the outer ring of the polygon\n  coordinates[0].forEach(point => {\n    totalX += point[0];\n    totalY += point[1];\n    pointCount++;\n  });\n\n  return [totalX / pointCount, totalY / pointCount];\n};\n\nconst createPointFeatureFromPolygon = (feature: GeoJSON.Feature): GeoJSON.Feature => {\n  const geometry = feature.geometry as GeoJSON.Polygon | GeoJSON.MultiPolygon;\n  let centroid;\n\n  if (geometry.type === 'Polygon') {\n    centroid = calculatePolygonCentroid(geometry.coordinates);\n  } else {\n    // For MultiPolygon, use the centroid of the first polygon\n    centroid = calculatePolygonCentroid(geometry.coordinates[0]);\n  }\n\n  return {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: centroid\n    },\n    properties: feature.properties\n  };\n};\n\nexport default function Map() {\n  const mapContainerRef = useRef<HTMLDivElement>(null);\n  const mapRef = useRef<mapboxgl.Map | null>(null);\n  const layersRef = useRef<Set<string>>(new Set());\n  const [isStreetView, setIsStreetView] = useState(true);\n  const { layers, getFilteredData, dataPointCount } = useData();\n\n  const updateLayer = useCallback((layer: { id: string, color: string, visible: boolean }) => {\n    if (!mapRef.current) return;\n\n    const layerId = `${layer.id}-layer`;\n    const map = mapRef.current;\n    const data = getFilteredData(layer.id);\n\n    // Remove existing layers and sources\n    [layerId, `${layerId}-point`].forEach(id => {\n      if (layersRef.current.has(id) && map.getLayer(id)) {\n        map.removeLayer(id);\n        layersRef.current.delete(id);\n      }\n    });\n\n    if (map.getSource(layer.id)) {\n      map.removeSource(layer.id);\n    }\n    if (map.getSource(`${layer.id}-point`)) {\n      map.removeSource(`${layer.id}-point`);\n    }\n\n    // Add layer if it's meant to be visible\n    if (layer.visible) {\n      const firstFeature = data.features[0];\n      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';\n\n      if (isPolygon && layer.id !== 'microplastics') {\n        // Add the original polygon source\n        map.addSource(layer.id, {\n          type: 'geojson',\n          data: data\n        });\n\n        // Create a point source from polygon centroids only for NASA and NTUA data\n        const pointData: GeoJSON.FeatureCollection = {\n          type: 'FeatureCollection',\n          features: data.features.map(createPointFeatureFromPolygon)\n        };\n\n        map.addSource(`${layer.id}-point`, {\n          type: 'geojson',\n          data: pointData\n        });\n\n        // Add point layer for low zoom levels\n        const pointLayerId = `${layerId}-point`;\n        const pointLayer: mapboxgl.LayerSpecification = {\n          id: pointLayerId,\n          type: 'circle',\n          source: `${layer.id}-point`,\n          maxzoom: 10,\n          paint: {\n            'circle-radius': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              0, 4,\n              8, 8\n            ],\n            'circle-color': layer.color,\n            'circle-opacity': 0.6,\n            'circle-stroke-width': 1,\n            'circle-stroke-color': '#ffffff',\n            'circle-stroke-opacity': 1\n          }\n        };\n        map.addLayer(pointLayer);\n        layersRef.current.add(pointLayerId);\n\n        // Add polygon layer for high zoom levels\n        const polygonLayer: mapboxgl.LayerSpecification = {\n          id: layerId,\n          type: 'fill',\n          source: layer.id,\n          minzoom: 10,\n          paint: {\n            'fill-color': layer.color,\n            'fill-opacity': 0.6,\n            'fill-outline-color': '#ffffff'\n          }\n        };\n        map.addLayer(polygonLayer);\n        layersRef.current.add(layerId);\n\n        // Add click handlers for both layers\n        [pointLayerId, layerId].forEach(id => {\n          map.on('click', id, (e) => {\n            const feature = e.features?.[0];\n            if (!feature) return;\n\n            const coordinates = e.lngLat;\n            const properties = feature.properties;\n            const popupContent = layer.id === 'microplastics' \n              ? formatMicroplasticsPopup(properties)\n              : layer.id === 'nasa'\n              ? formatNasaPopup(properties)\n              : formatNtuaPopup(properties);\n\n            new mapboxgl.Popup()\n              .setLngLat(coordinates)\n              .setHTML(`\n                <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">\n                  <div class=\"mb-3\">\n                    <div class=\"mb-1\">\n                      <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°\n                    </div>\n                    <div class=\"mb-1\">\n                      <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°\n                    </div>\n                  </div>\n                  <div class=\"flex flex-col space-y-0.5\">\n                    ${popupContent}\n                  </div>\n                  ${properties?.DOI ? `\n                    <button class=\"mt-2 text-sm\">\n                      <a href=\"${properties.DOI}\" \n                         target=\"_blank\" \n                         rel=\"noopener noreferrer\"\n                         class=\"text-blue-600 hover:text-blue-800 hover:underline\">\n                        View Research Paper\n                      </a>\n                    </button>\n                  ` : ''}\n                </div>\n              `)\n              .addTo(map);\n          });\n\n          map.on('mouseenter', id, () => {\n            map.getCanvas().style.cursor = 'pointer';\n          });\n\n          map.on('mouseleave', id, () => {\n            map.getCanvas().style.cursor = '';\n          });\n        });\n      } else {\n        // For non-polygon data or microplastics, use regular circle layer\n        map.addSource(layer.id, {\n          type: 'geojson',\n          data: data\n        });\n\n        const layerConfig: mapboxgl.LayerSpecification = {\n          id: layerId,\n          type: 'circle',\n          source: layer.id,\n          paint: {\n            'circle-radius': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              0, 4,\n              8, 8\n            ],\n            'circle-color': layer.color,\n            'circle-opacity': 0.6,\n            'circle-stroke-width': 1,\n            'circle-stroke-color': '#ffffff',\n            'circle-stroke-opacity': 1\n          }\n        };\n\n        map.addLayer(layerConfig);\n        layersRef.current.add(layerId);\n\n        // Add event listeners for regular layers\n        map.on('click', layerId, (e) => {\n          const feature = e.features?.[0];\n          if (!feature) return;\n\n          const coordinates = e.lngLat;\n          const properties = feature.properties;\n          const popupContent = layer.id === 'microplastics' \n            ? formatMicroplasticsPopup(properties)\n            : layer.id === 'nasa'\n            ? formatNasaPopup(properties)\n            : formatNtuaPopup(properties);\n\n          new mapboxgl.Popup()\n            .setLngLat(coordinates)\n            .setHTML(`\n              <div class=\"flex flex-col text-deep-water p-2 max-w-sm\">\n                <div class=\"mb-3\">\n                  <div class=\"mb-1\">\n                    <span class=\"font-semibold\">Latitude:</span> ${coordinates.lat.toFixed(4)}°\n                  </div>\n                  <div class=\"mb-1\">\n                    <span class=\"font-semibold\">Longitude:</span> ${coordinates.lng.toFixed(4)}°\n                  </div>\n                </div>\n                <div class=\"flex flex-col space-y-0.5\">\n                  ${popupContent}\n                </div>\n                ${properties?.DOI ? `\n                  <button class=\"mt-2 text-sm\">\n                    <a href=\"${properties.DOI}\" \n                       target=\"_blank\" \n                       rel=\"noopener noreferrer\"\n                       class=\"text-blue-600 hover:text-blue-800 hover:underline\">\n                      View Research Paper\n                    </a>\n                  </button>\n                ` : ''}\n              </div>\n            `)\n            .addTo(map);\n        });\n\n        map.on('mouseenter', layerId, () => {\n          map.getCanvas().style.cursor = 'pointer';\n        });\n\n        map.on('mouseleave', layerId, () => {\n          map.getCanvas().style.cursor = '';\n        });\n      }\n    }\n  }, [getFilteredData]);\n\n  const loadMap = useCallback(() => {\n    // Only initialize map if it hasn't been initialized yet\n    if (!mapRef.current && mapContainerRef.current) {\n      mapboxgl.accessToken = process.env.NEXT_PUBLIC_MAPBOX_TOKEN;\n\n      mapRef.current = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mapbox/streets-v12',\n        center: [-105.272148, 40.047050],\n        zoom: 2\n      });\n\n      mapRef.current.on('load', () => {\n        layers.forEach(updateLayer);\n      });\n    }\n  }, [layers, updateLayer]);\n\n  // Initialize map only once\n  useEffect(() => {\n    loadMap();\n  }, [loadMap]); // Empty dependency array since we only want to initialize once\n\n  // Update layers when they change\n  useEffect(() => {\n    if (mapRef.current?.loaded()) {\n      layers.forEach(updateLayer);\n    }\n  }, [layers, updateLayer]);\n\n  const toggleMapStyle = useCallback(() => {\n    const satellite = 'mapbox://styles/mapbox/satellite-v9';\n    const streets = 'mapbox://styles/mapbox/streets-v12';\n    \n    if (mapRef.current) {\n      mapRef.current.setStyle(isStreetView ? satellite : streets);\n      setIsStreetView(!isStreetView);\n      \n      // Re-add data layers after style change\n      mapRef.current.once('style.load', () => {\n        layers.forEach(updateLayer);\n      });\n    }\n  }, [isStreetView, layers, updateLayer]);\n\n  return (\n    <div className=\"relative w-full h-full\">\n      <div ref={mapContainerRef} className=\"w-full h-full\" />\n      \n      <div className=\"absolute top-16 right-4 flex flex-col gap-2\">\n        {layers.map(layer => layer.visible && (\n          <div key={layer.id} className=\"bg-white/30 dark:bg-black/40 backdrop-blur-md px-4 py-2 rounded-md shadow-md\">\n            <p className=\"font-medium text-foreground flex items-center gap-2\">\n              <span className=\"w-3 h-3 inline-block rounded-full\" style={{ backgroundColor: layer.color }}></span>\n              {dataPointCount[layer.id]} points\n            </p>\n          </div>\n        ))}\n      </div>\n\n      <button\n        onClick={toggleMapStyle}\n        className=\"group absolute bottom-4 right-4 ml-auto bg-black/40 backdrop-blur-md p-2 rounded-md shadow-md hover:bg-deep-water transition-colors text-2xl\"\n      >\n        <span className=\"transition-opacity duration-200 group-hover:opacity-0\">\n          {isStreetView ? '🚦' : '🛰️'}\n        </span>\n        <span className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 opacity-0 transition-opacity duration-200 group-hover:opacity-100\">\n          {isStreetView ? '🛰️' : '🚦'}\n        </span>\n      </button>\n    </div>\n  );\n}\n",
                "languageId": "typescriptreact",
                "version": 1829,
                "state": 2
              }
            ],
            "promptInstructions": [],
            "request": "Above is the result of calling one or more tools. The user can see the results of the edit_file tool, so you don't need to explain them. But the user can't see the results of other tools, so you should explain them to the user if referencing them in your answer. Continue from where you left off without repeating yourself.",
            "response": "Just to confirm - I've modified the code so that the polygon-to-point conversion is only applied when:\n1. The data contains polygons (either Polygon or MultiPolygon geometry)\n2. AND the layer ID is NOT 'microplastics'\n\nThis ensures that the microplastics data will continue using its original point coordinates while NASA and NTUA polygon data will use centroids for the zoomed-out view. I've validated that there are no TypeScript errors with these changes.\n\nIs there anything else you'd like me to adjust with the map visualization?"
          },
          "codeBlocks": [],
          "messages": [
            {
              "role": "user",
              "content": "the microplastics data already uses coordinates, so dont convert that part"
            },
            {
              "role": "assistant",
              "content": "Just to confirm - I've modified the code so that the polygon-to-point conversion is only applied when:\n1. The data contains polygons (either Polygon or MultiPolygon geometry)\n2. AND the layer ID is NOT 'microplastics'\n\nThis ensures that the microplastics data will continue using its original point coordinates while NASA and NTUA polygon data will use centroids for the zoomed-out view. I've validated that there are no TypeScript errors with these changes.\n\nIs there anything else you'd like me to adjust with the map visualization?"
            }
          ],
          "toolCallRounds": [
            {
              "toolCalls": [
                {
                  "name": "edit_file",
                  "arguments": "{\"code\": \"// ...existing code...\\n\\n    // Add layer if it's meant to be visible\\n    if (layer.visible) {\\n      const firstFeature = data.features[0];\\n      const isPolygon = firstFeature?.geometry.type === 'Polygon' || firstFeature?.geometry.type === 'MultiPolygon';\\n\\n      if (isPolygon && layer.id !== 'microplastics') {\\n        // Add the original polygon source\\n        map.addSource(layer.id, {\\n          type: 'geojson',\\n          data: data\\n        });\\n\\n        // Create a point source from polygon centroids only for NASA and NTUA data\\n        const pointData: GeoJSON.FeatureCollection = {\\n          type: 'FeatureCollection',\\n          features: data.features.map(createPointFeatureFromPolygon)\\n        };\\n\\n        map.addSource(`${layer.id}-point`, {\\n          type: 'geojson',\\n          data: pointData\\n        });\\n\\n        // Add point layer for low zoom levels\\n        const pointLayerId = `${layerId}-point`;\\n        const pointLayer: mapboxgl.LayerSpecification = {\\n          id: pointLayerId,\\n          type: 'circle',\\n          source: `${layer.id}-point`,\\n          maxzoom: 10,\\n          paint: {\\n            'circle-radius': [\\n              'interpolate',\\n              ['linear'],\\n              ['zoom'],\\n              0, 4,\\n              8, 8\\n            ],\\n            'circle-color': layer.color,\\n            'circle-opacity': 0.6,\\n            'circle-stroke-width': 1,\\n            'circle-stroke-color': '#ffffff',\\n            'circle-stroke-opacity': 1\\n          }\\n        };\\n        map.addLayer(pointLayer);\\n        layersRef.current.add(pointLayerId);\\n\\n        // Add polygon layer for high zoom levels\\n        const polygonLayer: mapboxgl.LayerSpecification = {\\n          id: layerId,\\n          type: 'fill',\\n          source: layer.id,\\n          minzoom: 10,\\n          paint: {\\n            'fill-color': layer.color,\\n            'fill-opacity': 0.6,\\n            'fill-outline-color': '#ffffff'\\n          }\\n        };\\n        map.addLayer(polygonLayer);\\n        layersRef.current.add(layerId);\\n\\n        // Add click handlers for both layers\\n        [pointLayerId, layerId].forEach(id => {\\n          // ...existing click handler code for both layers...\\n        });\\n      } else {\\n        // For non-polygon data or microplastics, use regular circle layer\\n        map.addSource(layer.id, {\\n          type: 'geojson',\\n          data: data\\n        });\\n\\n        const layerConfig: mapboxgl.LayerSpecification = {\\n          id: layerId,\\n          type: 'circle',\\n          source: layer.id,\\n          paint: {\\n            'circle-radius': [\\n              'interpolate',\\n              ['linear'],\\n              ['zoom'],\\n              0, 4,\\n              8, 8\\n            ],\\n            'circle-color': layer.color,\\n            'circle-opacity': 0.6,\\n            'circle-stroke-width': 1,\\n            'circle-stroke-color': '#ffffff',\\n            'circle-stroke-opacity': 1\\n          }\\n        };\\n\\n        map.addLayer(layerConfig);\\n        layersRef.current.add(layerId);\\n\\n        // Add event listeners for regular layers\\n        map.on('click', layerId, (e) => {\\n          // ...existing click handler code...\\n        });\\n\\n        map.on('mouseenter', layerId, () => {\\n          map.getCanvas().style.cursor = 'pointer';\\n        });\\n\\n        map.on('mouseleave', layerId, () => {\\n          map.getCanvas().style.cursor = '';\\n        });\\n      }\\n    }\\n  }, [getFilteredData]);\\n\\n  // ...existing code...\", \"explanation\": \"Modify the layer update logic to only apply polygon-to-point conversion for NASA and NTUA data, leaving microplastics data as regular points\", \"filePath\": \"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\"}",
                  "id": "toolu_bdrk_01VtmCXhZuhrHo1NtZkLBAmJ"
                }
              ],
              "toolInputRetry": 0,
              "response": "I'll modify the code to only apply the polygon-to-point conversion for the NASA and NTUA data, leaving the microplastics data as is."
            },
            {
              "toolCalls": [
                {
                  "name": "get_errors",
                  "arguments": "{\"filePaths\": [\"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\"]}",
                  "id": "toolu_bdrk_01W9AnDfQJdJNXPPWBvUWtcN"
                }
              ],
              "toolInputRetry": 0,
              "response": "Let me validate that there are no TypeScript errors with our changes."
            },
            {
              "toolCalls": [],
              "toolInputRetry": 0,
              "response": "Just to confirm - I've modified the code so that the polygon-to-point conversion is only applied when:\n1. The data contains polygons (either Polygon or MultiPolygon geometry)\n2. AND the layer ID is NOT 'microplastics'\n\nThis ensures that the microplastics data will continue using its original point coordinates while NASA and NTUA polygon data will use centroids for the zoomed-out view. I've validated that there are no TypeScript errors with these changes.\n\nIs there anything else you'd like me to adjust with the map visualization?"
            }
          ],
          "toolCallResults": {
            "toolu_bdrk_014LHoLeTmEYL6CcppHkp8aJ": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_011DTkCvHS26LTF3HphPdsKm": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "<errors path=\"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\">\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "No errors found",
                                  "lineBreakBefore": false
                                },
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "priority": 1,
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "</errors>",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "\n",
                              "lineBreakBefore": false
                            }
                          ],
                          "references": []
                        }
                      ],
                      "references": []
                    }
                  }
                }
              ]
            },
            "toolu_bdrk_01Y9VA5MQAqy7r5WFXLcngbt": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01PEbZRyQX65Mx2pJx5KFaX5": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "<errors path=\"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\">\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "No errors found",
                                  "lineBreakBefore": false
                                },
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "priority": 1,
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "</errors>",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "\n",
                              "lineBreakBefore": false
                            }
                          ],
                          "references": []
                        }
                      ],
                      "references": []
                    }
                  }
                }
              ]
            },
            "toolu_bdrk_01JdADB6RMEb3AkV16bXpbZY": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01RkwUSH7VfdDdYiAN4g56Rj": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01RGJzTJQ7KdSC7uDGAEfj9z": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01VtmCXhZuhrHo1NtZkLBAmJ": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "The file was edited successfully"
                }
              ]
            },
            "toolu_bdrk_01W9AnDfQJdJNXPPWBvUWtcN": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "<errors path=\"/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx\">\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "No errors found",
                                  "lineBreakBefore": false
                                },
                                {
                                  "type": 2,
                                  "priority": 1,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "priority": 1,
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "</errors>",
                                  "lineBreakBefore": false
                                }
                              ],
                              "references": []
                            },
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "\n",
                              "lineBreakBefore": false
                            }
                          ],
                          "references": []
                        }
                      ],
                      "references": []
                    }
                  }
                }
              ]
            }
          },
          "modelMessageId": "7dfa822b-829f-4862-a489-cc25530a1e41",
          "responseId": "55bf4ab7-a3ab-42e5-9909-30da4db9caad",
          "sessionId": "83938747-4922-4018-9542-110893bca4bc",
          "agentId": "github.copilot.editsAgent"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editsAgent",
        "description": "Edit files in your workspace in agent mode (Experimental)",
        "when": "config.chat.agent.enabled && !chatAgentModeDisallowed",
        "metadata": {
          "themeIcon": {
            "id": "tools"
          },
          "hasFollowups": false,
          "supportIssueReporting": false
        },
        "name": "agent",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "isToolsAgent": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "workingSet": [
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "external": "file:///Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "path": "/Users/richardroberson/Documents/repos/ocean-map/src/components/Map.tsx",
          "scheme": "file"
        }
      ],
      "contentReferences": [],
      "codeCitations": [],
      "timestamp": 1739752259071
    }
  ]
}